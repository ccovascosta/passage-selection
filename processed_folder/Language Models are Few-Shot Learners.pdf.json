{
    "filename": "Language Models are Few-Shot Learners.pdf",
    "type": "pdf",
    "title": "",
    "authors": "",
    "lastmodifiedtime": "D:20200724000408Z",
    "text": "Language Models are Few-Shot Learners\nTom B. Brown\u0003Benjamin Mann\u0003Nick Ryder\u0003Melanie Subbiah\u0003\nJared KaplanyPrafulla Dhariwal Arvind Neelakantan Pranav Shyam Girish Sastry\nAmanda Askell Sandhini Agarwal Ariel Herbert-Voss Gretchen Krueger Tom Henighan\nRewon Child Aditya Ramesh Daniel M. Ziegler Jeffrey Wu Clemens Winter\nChristopher Hesse Mark Chen Eric Sigler Mateusz Litwin Scott Gray\nBenjamin Chess Jack Clark Christopher Berner\nSam McCandlish Alec Radford Ilya Sutskever Dario Amodei\nOpenAI\nAbstract\nRecent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training\non a large corpus of text followed by \ufb01ne-tuning on a speci\ufb01c task. While typically task-agnostic\nin architecture, this method still requires task-speci\ufb01c \ufb01ne-tuning datasets of thousands or tens of\nthousands of examples. By contrast, humans can generally perform a new language task from only\na few examples or from simple instructions \u2013 something which current NLP systems still largely\nstruggle to do. Here we show that scaling up language models greatly improves task-agnostic,\nfew-shot performance, sometimes even reaching competitiveness with prior state-of-the-art \ufb01ne-\ntuning approaches. Speci\ufb01cally, we train GPT-3, an autoregressive language model with 175 billion\nparameters, 10x more than any previous non-sparse language model, and test its performance in\nthe few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or \ufb01ne-tuning,\nwith tasks and few-shot demonstrations speci\ufb01ed purely via text interaction with the model. GPT-3\nachieves strong performance on many NLP datasets, including translation, question-answering, and\ncloze tasks, as well as several tasks that require on-the-\ufb02y reasoning or domain adaptation, such as\nunscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same\ntime, we also identify some datasets where GPT-3\u2019s few-shot learning still struggles, as well as some\ndatasets where GPT-3 faces methodological issues related to training on large web corpora. Finally,\nwe \ufb01nd that GPT-3 can generate samples of news articles which human evaluators have dif\ufb01culty\ndistinguishing from articles written by humans. We discuss broader societal impacts of this \ufb01nding\nand of GPT-3 in general.\n\u0003Equal contribution\nyJohns Hopkins University, OpenAI\nAuthor contributions listed at end of paper.arXiv:2005.14165v4  [cs.CL]  22 Jul 2020Contents\n1 Introduction 3\n2 Approach 6\n2.1 Model and Architectures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n2.2 Training Dataset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n2.3 Training Process . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9\n2.4 Evaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n3 Results 10\n3.1 Language Modeling, Cloze, and Completion Tasks . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n3.2 Closed Book Question Answering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n3.3 Translation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n3.4 Winograd-Style Tasks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n3.5 Common Sense Reasoning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n3.6 Reading Comprehension . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n3.7 SuperGLUE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n3.8 NLI . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n3.9 Synthetic and Qualitative Tasks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21\n4 Measuring and Preventing Memorization Of Benchmarks 29\n5 Limitations 33\n6 Broader Impacts 34\n6.1 Misuse of Language Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35\n6.2 Fairness, Bias, and Representation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36\n6.3 Energy Usage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39\n7 Related Work 39\n8 Conclusion 40\nA Details of Common Crawl Filtering 43\nB Details of Model Training 43\nC Details of Test Set Contamination Studies 43\nD Total Compute Used to Train Language Models 46\nE Human Quality Assessment of Synthetic News Articles 46\nF Additional Samples from GPT-3 48\nG Details of Task Phrasing and Speci\ufb01cations 50\nH Results on All Tasks for All Model Sizes 63\n21 Introduction\nRecent years have featured a trend towards pre-trained language representations in NLP systems, applied in increasingly\n\ufb02exible and task-agnostic ways for downstream transfer. First, single-layer representations were learned using word\nvectors [ MCCD13 ,PSM14 ] and fed to task-speci\ufb01c architectures, then RNNs with multiple layers of representations\nand contextual state were used to form stronger representations [ DL15 ,MBXS17 ,PNZtY18 ] (though still applied to\ntask-speci\ufb01c architectures), and more recently pre-trained recurrent or transformer language models [ VSP+17] have\nbeen directly \ufb01ne-tuned, entirely removing the need for task-speci\ufb01c architectures [RNSS18, DCLT18, HR18].\nThis last paradigm has led to substantial progress on many challenging NLP tasks such as reading comprehension,\nquestion answering, textual entailment, and many others, and has continued to advance based on new architectures\nand algorithms [ RSR+19,LOG+19,YDY+19,LCG+19]. However, a major limitation to this approach is that while\nthe architecture is task-agnostic, there is still a need for task-speci\ufb01c datasets and task-speci\ufb01c \ufb01ne-tuning: to achieve\nstrong performance on a desired task typically requires \ufb01ne-tuning on a dataset of thousands to hundreds of thousands\nof examples speci\ufb01c to that task. Removing this limitation would be desirable, for several reasons.\nFirst, from a practical perspective, the need for a large dataset of labeled examples for every new task limits the\napplicability of language models. There exists a very wide range of possible useful language tasks, encompassing\nanything from correcting grammar, to generating examples of an abstract concept, to critiquing a short story. For many\nof these tasks it is dif\ufb01cult to collect a large supervised training dataset, especially when the process must be repeated\nfor every new task.\nSecond, the potential to exploit spurious correlations in training data fundamentally grows with the expressiveness\nof the model and the narrowness of the training distribution. This can create problems for the pre-training plus\n\ufb01ne-tuning paradigm, where models are designed to be large to absorb information during pre-training, but are then\n\ufb01ne-tuned on very narrow task distributions. For instance [ HLW+20] observe that larger models do not necessarily\ngeneralize better out-of-distribution. There is evidence that suggests that the generalization achieved under this paradigm\ncan be poor because the model is overly speci\ufb01c to the training distribution and does not generalize well outside it\n[YdC+19,MPL19 ]. Thus, the performance of \ufb01ne-tuned models on speci\ufb01c benchmarks, even when it is nominally at\nhuman-level, may exaggerate actual performance on the underlying task [GSL+18, NK19].\nThird, humans do not require large supervised datasets to learn most language tasks \u2013 a brief directive in natural\nlanguage (e.g. \u201cplease tell me if this sentence describes something happy or something sad\u201d) or at most a tiny number\nof demonstrations (e.g. \u201chere are two examples of people acting brave; please give a third example of bravery\u201d) is often\nFigure 1.1: Language model meta-learning. During unsupervised pre-training, a language model develops a broad\nset of skills and pattern recognition abilities. It then uses these abilities at inference time to rapidly adapt to or recognize\nthe desired task. We use the term \u201cin-context learning\u201d to describe the inner loop of this process, which occurs within\nthe forward-pass upon each sequence. The sequences in this diagram are not intended to be representative of the data a\nmodel would see during pre-training, but are intended to show that there are sometimes repeated sub-tasks embedded\nwithin a single sequence.\n3Figure 1.2: Larger models make increasingly ef\ufb01cient use of in-context information. We show in-context learning\nperformance on a simple task requiring the model to remove random symbols from a word, both with and without a\nnatural language task description (see Sec. 3.9.2). The steeper \u201cin-context learning curves\u201d for large models demonstrate\nimproved ability to learn a task from contextual information. We see qualitatively similar behavior across a wide range\nof tasks.\nsuf\ufb01cient to enable a human to perform a new task to at least a reasonable degree of competence. Aside from pointing\nto a conceptual limitation in our current NLP techniques, this adaptability has practical advantages \u2013 it allows humans\nto seamlessly mix together or switch between many tasks and skills, for example performing addition during a lengthy\ndialogue. To be broadly useful, we would someday like our NLP systems to have this same \ufb02uidity and generality.\nOne potential route towards addressing these issues is meta-learning1\u2013 which in the context of language models means\nthe model develops a broad set of skills and pattern recognition abilities at training time, and then uses those abilities\nat inference time to rapidly adapt to or recognize the desired task (illustrated in Figure 1.1). Recent work [ RWC+19]\nattempts to do this via what we call \u201cin-context learning\u201d, using the text input of a pretrained language model as a form\nof task speci\ufb01cation: the model is conditioned on a natural language instruction and/or a few demonstrations of the task\nand is then expected to complete further instances of the task simply by predicting what comes next.\nWhile it has shown some initial promise, this approach still achieves results far inferior to \ufb01ne-tuning \u2013 for example\n[RWC+19] achieves only 4% on Natural Questions, and even its 55 F1 CoQa result is now more than 35 points behind\nthe state of the art. Meta-learning clearly requires substantial improvement in order to be viable as a practical method of\nsolving language tasks.\nAnother recent trend in language modeling may offer a way forward. In recent years the capacity of transformer\nlanguage models has increased substantially, from 100 million parameters [ RNSS18 ], to 300 million parameters\n[DCLT18 ], to 1.5 billion parameters [ RWC+19], to 8 billion parameters [ SPP+19], 11 billion parameters [ RSR+19],\nand \ufb01nally 17 billion parameters [ Tur20 ]. Each increase has brought improvements in text synthesis and/or downstream\nNLP tasks, and there is evidence suggesting that log loss, which correlates well with many downstream tasks, follows a\nsmooth trend of improvement with scale [ KMH+20]. Since in-context learning involves absorbing many skills and\ntasks within the parameters of the model, it is plausible that in-context learning abilities might show similarly strong\ngains with scale.\n1In the context of language models this has sometimes been called \u201czero-shot transfer\u201d, but this term is potentially ambiguous:\nthe method is \u201czero-shot\u201d in the sense that no gradient updates are performed, but it often involves providing inference-time\ndemonstrations to the model, so is not truly learning from zero examples. To avoid this confusion, we use the term \u201cmeta-learning\u201d\nto capture the inner-loop / outer-loop structure of the general method, and the term \u201cin context-learning\u201d to refer to the inner\nloop of meta-learning. We further specialize the description to \u201czero-shot\u201d, \u201cone-shot\u201d, or \u201cfew-shot\u201d depending on how many\ndemonstrations are provided at inference time. These terms are intended to remain agnostic on the question of whether the model\nlearns new tasks from scratch at inference time or simply recognizes patterns seen during training \u2013 this is an important issue which\nwe discuss later in the paper, but \u201cmeta-learning\u201d is intended to encompass both possibilities, and simply describes the inner-outer\nloop structure.\n4Figure 1.3: Aggregate performance for all 42 accuracy-denominated benchmarks While zero-shot performance\nimproves steadily with model size, few-shot performance increases more rapidly, demonstrating that larger models are\nmore pro\ufb01cient at in-context learning. See Figure 3.8 for a more detailed analysis on SuperGLUE, a standard NLP\nbenchmark suite.\nIn this paper, we test this hypothesis by training a 175 billion parameter autoregressive language model, which we call\nGPT-3, and measuring its in-context learning abilities. Speci\ufb01cally, we evaluate GPT-3 on over two dozen NLP datasets,\nas well as several novel tasks designed to test rapid adaptation to tasks unlikely to be directly contained in the training\nset. For each task, we evaluate GPT-3 under 3 conditions: (a) \u201cfew-shot learning\u201d, or in-context learning where we\nallow as many demonstrations as will \ufb01t into the model\u2019s context window (typically 10 to 100), (b) \u201cone-shot learning\u201d,\nwhere we allow only one demonstration, and (c) \u201czero-shot\u201d learning, where no demonstrations are allowed and only\nan instruction in natural language is given to the model. GPT-3 could also in principle be evaluated in the traditional\n\ufb01ne-tuning setting, but we leave this to future work.\nFigure 1.2 illustrates the conditions we study, and shows few-shot learning of a simple task requiring the model to\nremove extraneous symbols from a word. Model performance improves with the addition of a natural language task\ndescription, and with the number of examples in the model\u2019s context, K. Few-shot learning also improves dramatically\nwith model size. Though the results in this case are particularly striking, the general trends with both model size and\nnumber of examples in-context hold for most tasks we study. We emphasize that these \u201clearning\u201d curves involve no\ngradient updates or \ufb01ne-tuning, just increasing numbers of demonstrations given as conditioning.\nBroadly, on NLP tasks GPT-3 achieves promising results in the zero-shot and one-shot settings, and in the the few-shot\nsetting is sometimes competitive with or even occasionally surpasses state-of-the-art (despite state-of-the-art being held\nby \ufb01ne-tuned models). For example, GPT-3 achieves 81.5 F1 on CoQA in the zero-shot setting, 84.0 F1 on CoQA in\nthe one-shot setting, 85.0 F1 in the few-shot setting. Similarly, GPT-3 achieves 64.3% accuracy on TriviaQA in the\nzero-shot setting, 68.0% in the one-shot setting, and 71.2% in the few-shot setting, the last of which is state-of-the-art\nrelative to \ufb01ne-tuned models operating in the same closed-book setting.\nGPT-3 also displays one-shot and few-shot pro\ufb01ciency at tasks designed to test rapid adaption or on-the-\ufb02y reasoning,\nwhich include unscrambling words, performing arithmetic, and using novel words in a sentence after seeing them\nde\ufb01ned only once. We also show that in the few-shot setting, GPT-3 can generate synthetic news articles which human\nevaluators have dif\ufb01culty distinguishing from human-generated articles.\nAt the same time, we also \ufb01nd some tasks on which few-shot performance struggles, even at the scale of GPT-3. This\nincludes natural language inference tasks like the ANLI dataset, and some reading comprehension datasets like RACE\nor QuAC. By presenting a broad characterization of GPT-3\u2019s strengths and weaknesses, including these limitations, we\nhope to stimulate study of few-shot learning in language models and draw attention to where progress is most needed.\nA heuristic sense of the overall results can be seen in Figure 1.3, which aggregates the various tasks (though it should\nnot be seen as a rigorous or meaningful benchmark in itself).\n5We also undertake a systematic study of \u201cdata contamination\u201d \u2013 a growing problem when training high capacity models\non datasets such as Common Crawl, which can potentially include content from test datasets simply because such\ncontent often exists on the web. In this paper we develop systematic tools to measure data contamination and quantify\nits distorting effects. Although we \ufb01nd that data contamination has a minimal effect on GPT-3\u2019s performance on most\ndatasets, we do identify a few datasets where it could be in\ufb02ating results, and we either do not report results on these\ndatasets or we note them with an asterisk, depending on the severity.\nIn addition to all the above, we also train a series of smaller models (ranging from 125 million parameters to 13 billion\nparameters) in order to compare their performance to GPT-3 in the zero, one and few-shot settings. Broadly, for most\ntasks we \ufb01nd relatively smooth scaling with model capacity in all three settings; one notable pattern is that the gap\nbetween zero-, one-, and few-shot performance often grows with model capacity, perhaps suggesting that larger models\nare more pro\ufb01cient meta-learners.\nFinally, given the broad spectrum of capabilities displayed by GPT-3, we discuss concerns about bias, fairness, and\nbroader societal impacts, and attempt a preliminary analysis of GPT-3\u2019s characteristics in this regard.\nThe remainder of this paper is organized as follows. In Section 2, we describe our approach and methods for training\nGPT-3 and evaluating it. Section 3 presents results on the full range of tasks in the zero-, one- and few-shot settings.\nSection 4 addresses questions of data contamination (train-test overlap). Section 5 discusses limitations of GPT-3.\nSection 6 discusses broader impacts. Section 7 reviews related work and Section 8 concludes.\n2 Approach\nOur basic pre-training approach, including model, data, and training, is similar to the process described in [ RWC+19],\nwith relatively straightforward scaling up of the model size, dataset size and diversity, and length of training. Our use\nof in-context learning is also similar to [ RWC+19], but in this work we systematically explore different settings for\nlearning within the context. Therefore, we start this section by explicitly de\ufb01ning and contrasting the different settings\nthat we will be evaluating GPT-3 on or could in principle evaluate GPT-3 on. These settings can be seen as lying on a\nspectrum of how much task-speci\ufb01c data they tend to rely on. Speci\ufb01cally, we can identify at least four points on this\nspectrum (see Figure 2.1 for an illustration):\n\u2022Fine-Tuning (FT) has been the most common approach in recent years, and involves updating the weights of\na pre-trained model by training on a supervised dataset speci\ufb01c to the desired task. Typically thousands to\nhundreds of thousands of labeled examples are used. The main advantage of \ufb01ne-tuning is strong performance\non many benchmarks. The main disadvantages are the need for a new large dataset for every task, the potential\nfor poor generalization out-of-distribution [ MPL19 ], and the potential to exploit spurious features of the\ntraining data [ GSL+18,NK19 ], potentially resulting in an unfair comparison with human performance. In\nthis work we do not \ufb01ne-tune GPT-3 because our focus is on task-agnostic performance, but GPT-3 can be\n\ufb01ne-tuned in principle and this is a promising direction for future work.\n\u2022Few-Shot (FS) is the term we will use in this work to refer to the setting where the model is given a few\ndemonstrations of the task at inference time as conditioning [ RWC+19], but no weight updates are allowed.\nAs shown in Figure 2.1, for a typical dataset an example has a context and a desired completion (for example\nan English sentence and the French translation), and few-shot works by giving Kexamples of context and\ncompletion, and then one \ufb01nal example of context, with the model expected to provide the completion. We\ntypically set Kin the range of 10 to 100 as this is how many examples can \ufb01t in the model\u2019s context window\n(nctx= 2048 ). The main advantages of few-shot are a major reduction in the need for task-speci\ufb01c data and\nreduced potential to learn an overly narrow distribution from a large but narrow \ufb01ne-tuning dataset. The main\ndisadvantage is that results from this method have so far been much worse than state-of-the-art \ufb01ne-tuned\nmodels. Also, a small amount of task speci\ufb01c data is still required. As indicated by the name, few-shot\nlearning as described here for language models is related to few-shot learning as used in other contexts in\nML [ HYC01 ,VBL+16] \u2013 both involve learning based on a broad distribution of tasks (in this case implicit in\nthe pre-training data) and then rapidly adapting to a new task.\n\u2022One-Shot (1S) is the same as few-shot except that only one demonstration is allowed, in addition to a natural\nlanguage description of the task, as shown in Figure 1. The reason to distinguish one-shot from few-shot and\nzero-shot (below) is that it most closely matches the way in which some tasks are communicated to humans.\nFor example, when asking humans to generate a dataset on a human worker service (for example Mechanical\nTurk), it is common to give one demonstration of the task. By contrast it is sometimes dif\ufb01cult to communicate\nthe content or format of a task if no examples are given.\n6Figure 2.1: Zero-shot, one-shot and few-shot, contrasted with traditional \ufb01ne-tuning . The panels above show\nfour methods for performing a task with a language model \u2013 \ufb01ne-tuning is the traditional method, whereas zero-, one-,\nand few-shot, which we study in this work, require the model to perform the task with only forward passes at test\ntime. We typically present the model with a few dozen examples in the few shot setting. Exact phrasings for all task\ndescriptions, examples and prompts can be found in Appendix G.\n\u2022Zero-Shot (0S) is the same as one-shot except that no demonstrations are allowed, and the model is only given\na natural language instruction describing the task. This method provides maximum convenience, potential for\nrobustness, and avoidance of spurious correlations (unless they occur very broadly across the large corpus of\npre-training data), but is also the most challenging setting. In some cases it may even be dif\ufb01cult for humans\nto understand the format of the task without prior examples, so this setting is in some cases \u201cunfairly hard\u201d.\nFor example, if someone is asked to \u201cmake a table of world records for the 200m dash\u201d, this request can be\nambiguous, as it may not be clear exactly what format the table should have or what should be included (and\neven with careful clari\ufb01cation, understanding precisely what is desired can be dif\ufb01cult). Nevertheless, for at\nleast some settings zero-shot is closest to how humans perform tasks \u2013 for example, in the translation example\nin Figure 2.1, a human would likely know what to do from just the text instruction.\nFigure 2.1 shows the four methods using the example of translating English to French. In this paper we focus on\nzero-shot, one-shot and few-shot, with the aim of comparing them not as competing alternatives, but as different\nproblem settings which offer a varying trade-off between performance on speci\ufb01c benchmarks and sample ef\ufb01ciency.\nWe especially highlight the few-shot results as many of them are only slightly behind state-of-the-art \ufb01ne-tuned models.\nUltimately, however, one-shot, or even sometimes zero-shot, seem like the fairest comparisons to human performance,\nand are important targets for future work.\nSections 2.1-2.3 below give details on our models, training data, and training process respectively. Section 2.4 discusses\nthe details of how we do few-shot, one-shot, and zero-shot evaluations.\n7Model Name nparamsnlayersdmodelnheadsdhead Batch Size Learning Rate\nGPT-3 Small 125M 12 768 12 64 0.5M 6:0\u000210\u00004\nGPT-3 Medium 350M 24 1024 16 64 0.5M 3:0\u000210\u00004\nGPT-3 Large 760M 24 1536 16 96 0.5M 2:5\u000210\u00004\nGPT-3 XL 1.3B 24 2048 24 128 1M 2:0\u000210\u00004\nGPT-3 2.7B 2.7B 32 2560 32 80 1M 1:6\u000210\u00004\nGPT-3 6.7B 6.7B 32 4096 32 128 2M 1:2\u000210\u00004\nGPT-3 13B 13.0B 40 5140 40 128 2M 1:0\u000210\u00004\nGPT-3 175B or \u201cGPT-3\u201d 175.0B 96 12288 96 128 3.2M 0:6\u000210\u00004\nTable 2.1: Sizes, architectures, and learning hyper-parameters (batch size in tokens and learning rate) of the models\nwhich we trained. All models were trained for a total of 300 billion tokens.\n2.1 Model and Architectures\nWe use the same model and architecture as GPT-2 [ RWC+19], including the modi\ufb01ed initialization, pre-normalization,\nand reversible tokenization described therein, with the exception that we use alternating dense and locally banded sparse\nattention patterns in the layers of the transformer, similar to the Sparse Transformer [ CGRS19 ]. To study the dependence\nof ML performance on model size, we train 8 different sizes of model, ranging over three orders of magnitude from 125\nmillion parameters to 175 billion parameters, with the last being the model we call GPT-3. Previous work [ KMH+20]\nsuggests that with enough training data, scaling of validation loss should be approximately a smooth power law as a\nfunction of size; training models of many different sizes allows us to test this hypothesis both for validation loss and for\ndownstream language tasks.\nTable 2.1 shows the sizes and architectures of our 8 models. Here nparams is the total number of trainable parameters,\nnlayers is the total number of layers, dmodel is the number of units in each bottleneck layer (we always have the\nfeedforward layer four times the size of the bottleneck layer, d\u000b= 4\u0003dmodel ), anddhead is the dimension of each\nattention head. All models use a context window of nctx= 2048 tokens. We partition the model across GPUs along\nboth the depth and width dimension in order to minimize data-transfer between nodes. The precise architectural\nparameters for each model are chosen based on computational ef\ufb01ciency and load-balancing in the layout of models\nacross GPU\u2019s. Previous work [ KMH+20] suggests that validation loss is not strongly sensitive to these parameters\nwithin a reasonably broad range.\n2.2 Training Dataset\nDatasets for language models have rapidly expanded, culminating in the Common Crawl dataset2[RSR+19] constituting\nnearly a trillion words. This size of dataset is suf\ufb01cient to train our largest models without ever updating on the same\nsequence twice. However, we have found that un\ufb01ltered or lightly \ufb01ltered versions of Common Crawl tend to have\nlower quality than more curated datasets. Therefore, we took 3 steps to improve the average quality of our datasets:\n(1) we downloaded and \ufb01ltered a version of CommonCrawl based on similarity to a range of high-quality reference\ncorpora, (2) we performed fuzzy deduplication at the document level, within and across datasets, to prevent redundancy\nand preserve the integrity of our held-out validation set as an accurate measure of over\ufb01tting, and (3) we also added\nknown high-quality reference corpora to the training mix to augment CommonCrawl and increase its diversity.\nDetails of the \ufb01rst two points (processing of Common Crawl) are described in Appendix A. For the third, we added\nseveral curated high-quality datasets, including an expanded version of the WebText dataset [ RWC+19], collected\nby scraping links over a longer period of time, and \ufb01rst described in [ KMH+20], two internet-based books corpora\n(Books1 and Books2) and English-language Wikipedia.\nTable 2.2 shows the \ufb01nal mixture of datasets that we used in training. The CommonCrawl data was downloaded from\n41 shards of monthly CommonCrawl covering 2016 to 2019, constituting 45TB of compressed plaintext before \ufb01ltering\nand 570GB after \ufb01ltering, roughly equivalent to 400 billion byte-pair-encoded tokens. Note that during training, datasets\nare not sampled in proportion to their size, but rather datasets we view as higher-quality are sampled more frequently,\nsuch that CommonCrawl and Books2 datasets are sampled less than once during training, but the other datasets are\nsampled 2-3 times. This essentially accepts a small amount of over\ufb01tting in exchange for higher quality training data.\n2https://commoncrawl.org/the-data/\n8Figure 2.2: Total compute used during training . Based on the analysis in Scaling Laws For Neural Language Models\n[KMH+20] we train much larger models on many fewer tokens than is typical. As a consequence, although GPT-3 3B\nis almost 10x larger than RoBERTa-Large (355M params), both models took roughly 50 peta\ufb02op/s-days of compute\nduring pre-training. Methodology for these calculations can be found in Appendix D.\nDatasetQuantity\n(tokens)Weight in\ntraining mixEpochs elapsed when\ntraining for 300B tokens\nCommon Crawl (\ufb01ltered) 410 billion 60% 0.44\nWebText2 19 billion 22% 2.9\nBooks1 12 billion 8% 1.9\nBooks2 55 billion 8% 0.43\nWikipedia 3 billion 3% 3.4\nTable 2.2: Datasets used to train GPT-3 . \u201cWeight in training mix\u201d refers to the fraction of examples during training\nthat are drawn from a given dataset, which we intentionally do not make proportional to the size of the dataset. As a\nresult, when we train for 300 billion tokens, some datasets are seen up to 3.4 times during training while other datasets\nare seen less than once.\nA major methodological concern with language models pretrained on a broad swath of internet data, particularly large\nmodels with the capacity to memorize vast amounts of content, is potential contamination of downstream tasks by\nhaving their test or development sets inadvertently seen during pre-training. To reduce such contamination, we searched\nfor and attempted to remove any overlaps with the development and test sets of all benchmarks studied in this paper.\nUnfortunately, a bug in the \ufb01ltering caused us to ignore some overlaps, and due to the cost of training it was not feasible\nto retrain the model. In Section 4 we characterize the impact of the remaining overlaps, and in future work we will\nmore aggressively remove data contamination.\n2.3 Training Process\nAs found in [ KMH+20,MKAT18 ], larger models can typically use a larger batch size, but require a smaller learning\nrate. We measure the gradient noise scale during training and use it to guide our choice of batch size [ MKAT18 ]. Table\n2.1 shows the parameter settings we used. To train the larger models without running out of memory, we use a mixture\nof model parallelism within each matrix multiply and model parallelism across the layers of the network. All models\nwere trained on V100 GPU\u2019s on part of a high-bandwidth cluster provided by Microsoft. Details of the training process\nand hyperparameter settings are described in Appendix B.\n92.4 Evaluation\nFor few-shot learning, we evaluate each example in the evaluation set by randomly drawing Kexamples from that\ntask\u2019s training set as conditioning, delimited by 1 or 2 newlines depending on the task. For LAMBADA and Storycloze\nthere is no supervised training set available so we draw conditioning examples from the development set and evaluate\non the test set. For Winograd (the original, not SuperGLUE version) there is only one dataset, so we draw conditioning\nexamples directly from it.\nKcan be any value from 0 to the maximum amount allowed by the model\u2019s context window, which is nctx= 2048\nfor all models and typically \ufb01ts 10to100examples. Larger values of Kare usually but not always better, so when a\nseparate development and test set are available, we experiment with a few values of Kon the development set and then\nrun the best value on the test set. For some tasks (see Appendix G) we also use a natural language prompt in addition to\n(or forK= 0, instead of) demonstrations.\nOn tasks that involve choosing one correct completion from several options (multiple choice), we provide Kexamples\nof context plus correct completion, followed by one example of context only, and compare the LM likelihood of\neach completion. For most tasks we compare the per-token likelihood (to normalize for length), however on a small\nnumber of datasets (ARC, OpenBookQA, and RACE) we gain additional bene\ufb01t as measured on the development set\nby normalizing by the unconditional probability of each completion, by computingP(completionjcontext)\nP(completionjanswer context), where\nanswer context is the string \"Answer: \" or\"A: \" and is used to prompt that the completion should be an answer\nbut is otherwise generic.\nOn tasks that involve binary classi\ufb01cation, we give the options more semantically meaningful names (e.g. \u201cTrue\u201d or\n\u201cFalse\u201d rather than 0 or 1) and then treat the task like multiple choice; we also sometimes frame the task similar to what\nis done by [RSR+19] (see Appendix G) for details.\nOn tasks with free-form completion, we use beam search with the same parameters as [ RSR+19]: a beam width of 4\nand a length penalty of \u000b= 0:6. We score the model using F1 similarity score, BLEU, or exact match, depending on\nwhat is standard for the dataset at hand.\nFinal results are reported on the test set when publicly available, for each model size and learning setting (zero-, one-,\nand few-shot). When the test set is private, our model is often too large to \ufb01t on the test server, so we report results on\nthe development set. We do submit to the test server on a small number of datasets (SuperGLUE, TriviaQA, PiQa)\nwhere we were able to make submission work, and we submit only the 200B few-shot results, and report development\nset results for everything else.\n3 Results\nIn Figure 3.1 we display training curves for the 8 models described in Section 2. For this graph we also include 6\nadditional extra-small models with as few as 100,000 parameters. As observed in [ KMH+20], language modeling\nperformance follows a power-law when making ef\ufb01cient use of training compute. After extending this trend by two\nmore orders of magnitude, we observe only a slight (if any) departure from the power-law. One might worry that these\nimprovements in cross-entropy loss come only from modeling spurious details of our training corpus. However, we will\nsee in the following sections that improvements in cross-entropy loss lead to consistent performance gains across a\nbroad spectrum of natural language tasks.\nBelow, we evaluate the 8 models described in Section 2 (the 175 billion parameter parameter GPT-3 and 7 smaller\nmodels) on a wide range of datasets. We group the datasets into 9 categories representing roughly similar tasks.\nIn Section 3.1 we evaluate on traditional language modeling tasks and tasks that are similar to language modeling,\nsuch as Cloze tasks and sentence/paragraph completion tasks. In Section 3.2 we evaluate on \u201cclosed book\u201d question\nanswering tasks: tasks which require using the information stored in the model\u2019s parameters to answer general\nknowledge questions. In Section 3.3 we evaluate the model\u2019s ability to translate between languages (especially one-shot\nand few-shot). In Section 3.4 we evaluate the model\u2019s performance on Winograd Schema-like tasks. In Section 3.5 we\nevaluate on datasets that involve commonsense reasoning or question answering. In Section 3.6 we evaluate on reading\ncomprehension tasks, in Section 3.7 we evaluate on the SuperGLUE benchmark suite, and in 3.8 we brie\ufb02y explore\nNLI. Finally, in Section 3.9, we invent some additional tasks designed especially to probe in-context learning abilities \u2013\nthese tasks focus on on-the-\ufb02y reasoning, adaptation skills, or open-ended text synthesis. We evaluate all tasks in the\nfew-shot, one-shot, and zero-shot settings.\n10Figure 3.1: Smooth scaling of performance with compute. Performance (measured in terms of cross-entropy\nvalidation loss) follows a power-law trend with the amount of compute used for training. The power-law behavior\nobserved in [ KMH+20] continues for an additional two orders of magnitude with only small deviations from the\npredicted curve. For this \ufb01gure, we exclude embedding parameters from compute and parameter counts.\nSetting PTB\nSOTA (Zero-Shot) 35.8a\nGPT-3 Zero-Shot 20.5\nTable 3.1: Zero-shot results on PTB language modeling dataset. Many other common language modeling datasets\nare omitted because they are derived from Wikipedia or other sources which are included in GPT-3\u2019s training data.\na[RWC+19]\n3.1 Language Modeling, Cloze, and Completion Tasks\nIn this section we test GPT-3\u2019s performance on the traditional task of language modeling, as well as related tasks\nthat involve predicting a single word of interest, completing a sentence or paragraph, or choosing between possible\ncompletions of a piece of text.\n3.1.1 Language Modeling\nWe calculate zero-shot perplexity on the Penn Tree Bank (PTB) [ MKM+94] dataset measured in [ RWC+19]. We omit\nthe 4 Wikipedia-related tasks in that work because they are entirely contained in our training data, and we also omit the\none-billion word benchmark due to a high fraction of the dataset being contained in our training set. PTB escapes these\nissues due to predating the modern internet. Our largest model sets a new SOTA on PTB by a substantial margin of 15\npoints, achieving a perplexity of 20.50. Note that since PTB is a traditional language modeling dataset it does not have\na clear separation of examples to de\ufb01ne one-shot or few-shot evaluation around, so we measure only zero-shot.\n3.1.2 LAMBADA\nThe LAMBADA dataset [ PKL+16] tests the modeling of long-range dependencies in text \u2013 the model is asked to\npredict the last word of sentences which require reading a paragraph of context. It has recently been suggested that the\ncontinued scaling of language models is yielding diminishing returns on this dif\ufb01cult benchmark. [ BHT+20] re\ufb02ect on\nthe small 1.5% improvement achieved by a doubling of model size between two recent state of the art results ([ SPP+19]\n11SettingLAMBADA\n(acc)LAMBADA\n(ppl)StoryCloze\n(acc)HellaSwag\n(acc)\nSOTA 68.0a8.63b91.8c85.6d\nGPT-3 Zero-Shot 76.2 3.00 83.2 78.9\nGPT-3 One-Shot 72.5 3.35 84.7 78.1\nGPT-3 Few-Shot 86.4 1.92 87.7 79.3\nTable 3.2: Performance on cloze and completion tasks. GPT-3 signi\ufb01cantly improves SOTA on LAMBADA while\nachieving respectable performance on two dif\ufb01cult completion prediction datasets.a[Tur20 ]b[RWC+19]c[LDL19 ]\nd[LCH+20]\nFigure 3.2: On LAMBADA, the few-shot capability of language models results in a strong boost to accuracy. GPT-3\n2.7B outperforms the SOTA 17B parameter Turing-NLG [ Tur20 ] in this setting, and GPT-3 175B advances the state of\nthe art by 18%. Note zero-shot uses a different format from one-shot and few-shot as described in the text.\nand [ Tur20 ]) and argue that \u201ccontinuing to expand hardware and data sizes by orders of magnitude is not the path\nforward\u201d. We \ufb01nd that path is still promising and in a zero-shot setting GPT-3 achieves 76% on LAMBADA, a gain of\n8% over the previous state of the art.\nLAMBADA is also a demonstration of the \ufb02exibility of few-shot learning as it provides a way to address a problem that\nclassically occurs with this dataset. Although the completion in LAMBADA is always the last word in a sentence, a\nstandard language model has no way of knowing this detail. It thus assigns probability not only to the correct ending but\nalso to other valid continuations of the paragraph. This problem has been partially addressed in the past with stop-word\n\ufb01lters [ RWC+19] (which ban \u201ccontinuation\u201d words). The few-shot setting instead allows us to \u201cframe\u201d the task as a\ncloze-test and allows the language model to infer from examples that a completion of exactly one word is desired. We\nuse the following \ufb01ll-in-the-blank format:\nAlice was friends with Bob. Alice went to visit her friend .!Bob\nGeorge bought some baseball equipment, a ball, a glove, and a .!\nWhen presented with examples formatted this way, GPT-3 achieves 86.4% accuracy in the few-shot setting, an increase\nof over 18% from the previous state-of-the-art. We observe that few-shot performance improves strongly with model\nsize. While this setting decreases the performance of the smallest model by almost 20%, for GPT-3 it improves accuracy\nby 10%. Finally, the \ufb01ll-in-blank method is not effective one-shot, where it always performs worse than the zero-shot\nsetting. Perhaps this is because all models still require several examples to recognize the pattern.\n12Setting NaturalQS WebQS TriviaQA\nRAG (Fine-tuned, Open-Domain) [LPP+20] 44.5 45.5 68.0\nT5-11B+SSM (Fine-tuned, Closed-Book) [RRS20] 36.6 44.7 60.5\nT5-11B (Fine-tuned, Closed-Book) 34.5 37.4 50.1\nGPT-3 Zero-Shot 14.6 14.4 64.3\nGPT-3 One-Shot 23.0 25.3 68.0\nGPT-3 Few-Shot 29.9 41.5 71.2\nTable 3.3: Results on three Open-Domain QA tasks. GPT-3 is shown in the few-, one-, and zero-shot settings, as\ncompared to prior SOTA results for closed book and open domain settings. TriviaQA few-shot result is evaluated on the\nwiki split test server.\nOne note of caution is that an analysis of test set contamination identi\ufb01ed that a signi\ufb01cant minority of the LAMBADA\ndataset appears to be present in our training data \u2013 however analysis performed in Section 4 suggests negligible impact\non performance.\n3.1.3 HellaSwag\nThe HellaSwag dataset [ ZHB+19] involves picking the best ending to a story or set of instructions. The examples were\nadversarially mined to be dif\ufb01cult for language models while remaining easy for humans (who achieve 95.6% accuracy).\nGPT-3 achieves 78.1% accuracy in the one-shot setting and 79.3% accuracy in the few-shot setting, outperforming the\n75.4% accuracy of a \ufb01ne-tuned 1.5B parameter language model [ ZHR+19] but still a fair amount lower than the overall\nSOTA of 85.6% achieved by the \ufb01ne-tuned multi-task model ALUM.\n3.1.4 StoryCloze\nWe next evaluate GPT-3 on the StoryCloze 2016 dataset [ MCH+16], which involves selecting the correct ending\nsentence for \ufb01ve-sentence long stories. Here GPT-3 achieves 83.2% in the zero-shot setting and 87.7% in the few-shot\nsetting (with K= 70 ). This is still 4.1% lower than the \ufb01ne-tuned SOTA using a BERT based model [ LDL19 ] but\nimproves over previous zero-shot results by roughly 10%.\n3.2 Closed Book Question Answering\nIn this section we measure GPT-3\u2019s ability to answer questions about broad factual knowledge. Due to the immense\namount of possible queries, this task has normally been approached by using an information retrieval system to \ufb01nd\nrelevant text in combination with a model which learns to generate an answer given the question and the retrieved\ntext. Since this setting allows a system to search for and condition on text which potentially contains the answer it\nis denoted \u201copen-book\u201d. [ RRS20 ] recently demonstrated that a large language model can perform surprisingly well\ndirectly answering the questions without conditioning on auxilliary information. They denote this more restrictive\nevaluation setting as \u201cclosed-book\u201d. Their work suggests that even higher-capacity models could perform even better\nand we test this hypothesis with GPT-3. We evaluate GPT-3 on the 3 datasets in [ RRS20 ]: Natural Questions [ KPR+19],\nWebQuestions [BCFL13], and TriviaQA [JCWZ17], using the same splits. Note that in addition to all results being in\nthe closed-book setting, our use of few-shot, one-shot, and zero-shot evaluations represent an even stricter setting than\nprevious closed-book QA work: in addition to external content not being allowed, \ufb01ne-tuning on the Q&A dataset itself\nis also not permitted.\nThe results for GPT-3 are shown in Table 3.3. On TriviaQA, we achieve 64.3% in the zero-shot setting, 68.0% in the\none-shot setting, and 71.2% in the few-shot setting. The zero-shot result already outperforms the \ufb01ne-tuned T5-11B by\n14.2%, and also outperforms a version with Q&A tailored span prediction during pre-training by 3.8%. The one-shot\nresult improves by 3.7% and matches the SOTA for an open-domain QA system which not only \ufb01ne-tunes but also\nmakes use of a learned retrieval mechanism over a 15.3B parameter dense vector index of 21M documents [ LPP+20].\nGPT-3\u2019s few-shot result further improves performance another 3.2% beyond this.\nOn WebQuestions (WebQs), GPT-3 achieves 14.4% in the zero-shot setting, 25.3% in the one-shot setting, and 41.5%\nin the few-shot setting. This compares to 37.4% for \ufb01ne-tuned T5-11B, and 44.7% for \ufb01ne-tuned T5-11B+SSM,\nwhich uses a Q&A-speci\ufb01c pre-training procedure. GPT-3 in the few-shot setting approaches the performance of\nstate-of-the-art \ufb01ne-tuned models. Notably, compared to TriviaQA, WebQS shows a much larger gain from zero-shot to\nfew-shot (and indeed its zero-shot and one-shot performance are poor), perhaps suggesting that the WebQs questions\n13Figure 3.3: On TriviaQA GPT3\u2019s performance grows smoothly with model size, suggesting that language models\ncontinue to absorb knowledge as their capacity increases. One-shot and few-shot performance make signi\ufb01cant gains\nover zero-shot behavior, matching and exceeding the performance of the SOTA \ufb01ne-tuned open-domain model, RAG\n[LPP+20]\nand/or the style of their answers are out-of-distribution for GPT-3. Nevertheless, GPT-3 appears able to adapt to this\ndistribution, recovering strong performance in the few-shot setting.\nOn Natural Questions (NQs) GPT-3 achieves 14.6% in the zero-shot setting, 23.0% in the one-shot setting, and 29.9% in\nthe few-shot setting, compared to 36.6% for \ufb01ne-tuned T5 11B+SSM. Similar to WebQS, the large gain from zero-shot\nto few-shot may suggest a distribution shift, and may also explain the less competitive performance compared to\nTriviaQA and WebQS. In particular, the questions in NQs tend towards very \ufb01ne-grained knowledge on Wikipedia\nspeci\ufb01cally which could be testing the limits of GPT-3\u2019s capacity and broad pretraining distribution.\nOverall, on one of the three datasets GPT-3\u2019s one-shot matches the open-domain \ufb01ne-tuning SOTA. On the other two\ndatasets it approaches the performance of the closed-book SOTA despite not using \ufb01ne-tuning. On all 3 datasets, we\n\ufb01nd that performance scales very smoothly with model size (Figure 3.3 and Appendix H Figure H.7), possibly re\ufb02ecting\nthe idea that model capacity translates directly to more \u2018knowledge\u2019 absorbed in the parameters of the model.\n3.3 Translation\nFor GPT-2 a \ufb01lter was used on a multilingual collection of documents to produce an English only dataset due to capacity\nconcerns. Even with this \ufb01ltering GPT-2 showed some evidence of multilingual capability and performed non-trivially\nwhen translating between French and English despite only training on 10 megabytes of remaining French text. Since we\nincrease the capacity by over two orders of magnitude from GPT-2 to GPT-3, we also expand the scope of the training\ndataset to include more representation of other languages, though this remains an area for further improvement. As\ndiscussed in 2.2 the majority of our data is derived from raw Common Crawl with only quality-based \ufb01ltering. Although\nGPT-3\u2019s training data is still primarily English (93% by word count), it also includes 7% of text in other languages.\nThese languages are documented in the supplemental material. In order to better understand translation capability, we\nalso expand our analysis to include two additional commonly studied languages, German and Romanian.\nExisting unsupervised machine translation approaches often combine pretraining on a pair of monolingual datasets\nwith back-translation [ SHB15 ] to bridge the two languages in a controlled way. By contrast, GPT-3 learns from a\nblend of training data that mixes many languages together in a natural way, combining them on a word, sentence,\nand document level. GPT-3 also uses a single training objective which is not customized or designed for any task in\nparticular. However, our one / few-shot settings aren\u2019t strictly comparable to prior unsupervised work since they make\nuse of a small amount of paired examples (1 or 64). This corresponds to up to a page or two of in-context training data.\nResults are shown in Table 3.4. Zero-shot GPT-3, which only receives on a natural language description of the task,\nstill underperforms recent unsupervised NMT results. However, providing only a single example demonstration for\n14Setting En !Fr Fr!En En!De De!En En!Ro Ro!En\nSOTA (Supervised) 45.6a35.0b41.2c40.2d38.5e39.9e\nXLM [LC19] 33.4 33.3 26.4 34.3 33.3 31.8\nMASS [STQ+19] 37.5 34.9 28.3 35.2 35.2 33.1\nmBART [LGG+20] - - 29.8 34.0 35.0 30.5\nGPT-3 Zero-Shot 25.2 21.2 24.6 27.2 14.1 19.9\nGPT-3 One-Shot 28.3 33.7 26.2 30.4 20.6 38.6\nGPT-3 Few-Shot 32.6 39.2 29.7 40.6 21.0 39.5\nTable 3.4: Few-shot GPT-3 outperforms previous unsupervised NMT work by 5 BLEU when translating\ninto English re\ufb02ecting its strength as an English LM. We report BLEU scores on the WMT\u201914 Fr $En,\nWMT\u201916 De$En, and WMT\u201916 Ro $En datasets as measured by multi-bleu.perl with XLM\u2019s tokeniza-\ntion in order to compare most closely with prior unsupervised NMT work. SacreBLEUf[Pos18 ] results re-\nported in Appendix H. Underline indicates an unsupervised or few-shot SOTA, bold indicates supervised SOTA\nwith relative con\ufb01dence.a[EOAG18 ]b[DHKH14 ]c[WXH+18]d[oR16 ]e[LGG+20]f[SacreBLEU signature:\nBLEU+case.mixed+numrefs.1+smooth.exp+tok.intl+version.1.2.20]\nFigure 3.4: Few-shot translation performance on 6 language pairs as model capacity increases. There is a consistent\ntrend of improvement across all datasets as the model scales, and as well as tendency for translation into English to be\nstronger than translation from English.\n15Setting Winograd Winogrande (XL)\nFine-tuned SOTA 90.1a84.6b\nGPT-3 Zero-Shot 88.3* 70.2\nGPT-3 One-Shot 89.7* 73.2\nGPT-3 Few-Shot 88.6* 77.7\nTable 3.5: Results on the WSC273 version of Winograd schemas and the adversarial Winogrande dataset. See Section\n4 for details on potential contamination of the Winograd test set.a[SBBC19]b[LYN+20]\nFigure 3.5: Zero-, one-, and few-shot performance on the adversarial Winogrande dataset as model capacity scales.\nScaling is relatively smooth with the gains to few-shot learning increasing with model size, and few-shot GPT-3 175B\nis competitive with a \ufb01ne-tuned RoBERTA-large.\neach translation task improves performance by over 7 BLEU and nears competitive performance with prior work.\nGPT-3 in the full few-shot setting further improves another 4 BLEU resulting in similar average performance to prior\nunsupervised NMT work. GPT-3 has a noticeable skew in its performance depending on language direction. For the\nthree input languages studied, GPT-3 signi\ufb01cantly outperforms prior unsupervised NMT work when translating into\nEnglish but underperforms when translating in the other direction. Performance on En-Ro is a noticeable outlier at\nover 10 BLEU worse than prior unsupervised NMT work. This could be a weakness due to reusing the byte-level BPE\ntokenizer of GPT-2 which was developed for an almost entirely English training dataset. For both Fr-En and De-En,\nfew shot GPT-3 outperforms the best supervised result we could \ufb01nd but due to our unfamiliarity with the literature and\nthe appearance that these are un-competitive benchmarks we do not suspect those results represent true state of the art.\nFor Ro-En, few shot GPT-3 performs within 0.5 BLEU of the overall SOTA which is achieved by a combination of\nunsupervised pretraining, supervised \ufb01netuning on 608K labeled examples, and backtranslation [LHCG19b].\nFinally, across all language pairs and across all three settings (zero-, one-, and few-shot), there is a smooth trend of\nimprovement with model capacity. This is shown in Figure 3.4 in the case of few-shot results, and scaling for all three\nsettings is shown in Appendix H.\n3.4 Winograd-Style Tasks\nThe Winograd Schemas Challenge [ LDM12 ] is a classical task in NLP that involves determining which word a pronoun\nrefers to, when the pronoun is grammatically ambiguous but semantically unambiguous to a human. Recently \ufb01ne-tuned\nlanguage models have achieved near-human performance on the original Winograd dataset, but more dif\ufb01cult versions\n16Setting PIQA ARC (Easy) ARC (Challenge) OpenBookQA\nFine-tuned SOTA 79.4 92.0[KKS+20] 78.5[KKS+20] 87.2[KKS+20]\nGPT-3 Zero-Shot 80.5* 68.8 51.4 57.6\nGPT-3 One-Shot 80.5* 71.2 53.2 58.8\nGPT-3 Few-Shot 82.8* 70.1 51.5 65.4\nTable 3.6: GPT-3 results on three commonsense reasoning tasks, PIQA, ARC, and OpenBookQA. GPT-3 Few-Shot\nPIQA result is evaluated on the test server. See Section 4 for details on potential contamination issues on the PIQA test\nset.\nFigure 3.6: GPT-3 results on PIQA in the zero-shot, one-shot, and few-shot settings. The largest model achieves a\nscore on the development set in all three conditions that exceeds the best recorded score on the task.\nsuch as the adversarially-mined Winogrande dataset [ SBBC19 ] still signi\ufb01cantly lag human performance. We test\nGPT-3\u2019s performance on both Winograd and Winogrande, as usual in the zero-, one-, and few-shot setting.\nOn Winograd we test GPT-3 on the original set of 273 Winograd schemas, using the same \u201cpartial evaluation\u201d method\ndescribed in [ RWC+19]. Note that this setting differs slightly from the WSC task in the SuperGLUE benchmark, which\nis presented as binary classi\ufb01cation and requires entity extraction to convert to the form described in this section. On\nWinograd GPT-3 achieves 88.3%, 89.7%, and 88.6% in the zero-shot, one-shot, and few-shot settings, showing no clear\nin-context learning but in all cases achieving strong results just a few points below state-of-the-art and estimated human\nperformance. We note that contamination analysis found some Winograd schemas in the training data but this appears\nto have only a small effect on results (see Section 4).\nOn the more dif\ufb01cult Winogrande dataset, we do \ufb01nd gains to in-context learning: GPT-3 achieves 70.2% in the\nzero-shot setting, 73.2% in the one-shot setting, and 77.7% in the few-shot setting. For comparison a \ufb01ne-tuned\nRoBERTA model achieves 79%, state-of-the-art is 84.6% achieved with a \ufb01ne-tuned high capacity model (T5), and\nhuman performance on the task as reported by [SBBC19] is 94.0%.\n3.5 Common Sense Reasoning\nNext we consider three datasets which attempt to capture physical or scienti\ufb01c reasoning, as distinct from sentence\ncompletion, reading comprehension, or broad knowledge question answering. The \ufb01rst, PhysicalQA (PIQA) [ BZB+19],\nasks common sense questions about how the physical world works and is intended as a probe of grounded understanding\nof the world. GPT-3 achieves 81.0% accuracy zero-shot, 80.5% accuracy one-shot, and 82.8% accuracy few-shot\n(the last measured on PIQA\u2019s test server). This compares favorably to the 79.4% accuracy prior state-of-the-art of a\n17Setting CoQA DROP QuAC SQuADv2 RACE-h RACE-m\nFine-tuned SOTA 90.7a89.1b74.4c93.0d90.0e93.1e\nGPT-3 Zero-Shot 81.5 23.6 41.5 59.5 45.5 58.4\nGPT-3 One-Shot 84.0 34.3 43.3 65.4 45.9 57.4\nGPT-3 Few-Shot 85.0 36.5 44.3 69.8 46.8 58.1\nTable 3.7: Results on reading comprehension tasks. All scores are F1 except results for RACE which report accuracy.\na[JZC+19]b[JN20]c[AI19]d[QIA20]e[SPP+19]\n\ufb01ne-tuned RoBERTa. PIQA shows relatively shallow scaling with model size and is still over 10% worse than human\nperformance, but GPT-3\u2019s few-shot and even zero-shot result outperform the current state-of-the-art. Our analysis\n\ufb02agged PIQA for a potential data contamination issue (despite hidden test labels), and we therefore conservatively mark\nthe result with an asterisk. See Section 4 for details.\nARC [ CCE+18] is a dataset of multiple-choice questions collected from 3rd to 9th grade science exams. On the\n\u201cChallenge\u201d version of the dataset which has been \ufb01ltered to questions which simple statistical or information retrieval\nmethods are unable to correctly answer, GPT-3 achieves 51.4% accuracy in the zero-shot setting, 53.2% in the one-shot\nsetting, and 51.5% in the few-shot setting. This is approaching the performance of a \ufb01ne-tuned RoBERTa baseline\n(55.9%) from Uni\ufb01edQA [ KKS+20]. On the \u201cEasy\u201d version of the dataset (questions which either of the mentioned\nbaseline approaches answered correctly), GPT-3 achieves 68.8%, 71.2%, and 70.1% which slightly exceeds a \ufb01ne-tuned\nRoBERTa baseline from [ KKS+20]. However, both of these results are still much worse than the overall SOTAs\nachieved by the Uni\ufb01edQA which exceeds GPT-3\u2019s few-shot results by 27% on the challenge set and 22% on the easy\nset.\nOn OpenBookQA [ MCKS18 ], GPT-3 improves signi\ufb01cantly from zero to few shot settings but is still over 20 points\nshort of the overall SOTA. GPT-3\u2019s few-shot performance is similar to a \ufb01ne-tuned BERT Large baseline on the\nleaderboard.\nOverall, in-context learning with GPT-3 shows mixed results on commonsense reasoning tasks, with only small and\ninconsistent gains observed in the one and few-shot learning settings for both PIQA and ARC, but a signi\ufb01cant\nimprovement is observed on OpenBookQA. GPT-3 sets SOTA on the new PIQA dataset in all evaluation settings.\n3.6 Reading Comprehension\nNext we evaluate GPT-3 on the task of reading comprehension. We use a suite of 5 datasets including abstractive,\nmultiple choice, and span based answer formats in both dialog and single question settings. We observe a wide spread\nin GPT-3\u2019s performance across these datasets suggestive of varying capability with different answer formats. In general\nwe observe GPT-3 is on par with initial baselines and early results trained using contextual representations on each\nrespective dataset.\nGPT-3 performs best (within 3 points of the human baseline) on CoQA [ RCM19 ] a free-form conversational dataset\nand performs worst (13 F1 below an ELMo baseline) on QuAC [ CHI+18] a dataset which requires modeling structured\ndialog acts and answer span selections of teacher-student interactions. On DROP [ DWD+19], a dataset testing discrete\nreasoning and numeracy in the context of reading comprehension, GPT-3 in a few-shot setting outperforms the \ufb01ne-tuned\nBERT baseline from the original paper but is still well below both human performance and state-of-the-art approaches\nwhich augment neural networks with symbolic systems [ RLL+19]. On SQuAD 2.0 [ RJL18 ], GPT-3 demonstrates its\nfew-shot learning capabilities, improving by almost 10 F1 (to 69.8) compared to a zero-shot setting. This allows it to\nslightly outperform the best \ufb01ne-tuned result in the original paper. On RACE [ LXL+17], a multiple choice dataset of\nmiddle school and high school english examinations, GPT-3 performs relatively weakly and is only competitive with\nthe earliest work utilizing contextual representations and is still 45% behind SOTA.\n3.7 SuperGLUE\nIn order to better aggregate results on NLP tasks and compare to popular models such as BERT and RoBERTa in a\nmore systematic way, we also evaluate GPT-3 on a standardized collection of datasets, the SuperGLUE benchmark\n[WPN+19] [WPN+19] [CLC+19] [DMST19 ] [RBG11 ] [KCR+18] [ZLL+18] [DGM06 ] [BHDD+06] [GMDD07 ]\n[BDD+09] [PCC18 ] [PHR+18]. GPT-3\u2019s test-set performance on the SuperGLUE dataset is shown in Table 3.8. In the\nfew-shot setting, we used 32 examples for all tasks, sampled randomly from the training set. For all tasks except WSC\n18Figure 3.7: GPT-3 results on CoQA reading comprehension task. GPT-3 175B achieves 85 F1 in the few-shot setting,\nonly a few points behind measured human performance and state-of-the-art \ufb01ne-tuned models. Zero-shot and one-shot\nperformance is a few points behind, with the gains to few-shot being largest for bigger models.\nSuperGLUE BoolQ CB CB COPA RTE\nAverage Accuracy Accuracy F1 Accuracy Accuracy\nFine-tuned SOTA 89.0 91.0 96.9 93.9 94.8 92.5\nFine-tuned BERT-Large 69.0 77.4 83.6 75.7 70.6 71.7\nGPT-3 Few-Shot 71.8 76.4 75.6 52.0 92.0 69.0\nWiC WSC MultiRC MultiRC ReCoRD ReCoRD\nAccuracy Accuracy Accuracy F1a Accuracy F1\nFine-tuned SOTA 76.1 93.8 62.3 88.2 92.5 93.3\nFine-tuned BERT-Large 69.6 64.6 24.1 70.0 71.3 72.0\nGPT-3 Few-Shot 49.4 80.1 30.5 75.4 90.2 91.1\nTable 3.8: Performance of GPT-3 on SuperGLUE compared to \ufb01ne-tuned baselines and SOTA. All results are reported\non the test set. GPT-3 few-shot is given a total of 32 examples within the context of each task and performs no gradient\nupdates.\n19Figure 3.8: Performance on SuperGLUE increases with model size and number of examples in context. A value\nofK= 32 means that our model was shown 32 examples per task, for 256 examples total divided across the 8 tasks in\nSuperGLUE. We report GPT-3 values on the dev set, so our numbers are not directly comparable to the dotted reference\nlines (our test set results are in Table 3.8). The BERT-Large reference model was \ufb01ne-tuned on the SuperGLUE training\nset (125K examples), whereas BERT++ was \ufb01rst \ufb01ne-tuned on MultiNLI (392K examples) and SWAG (113K examples)\nbefore further \ufb01ne-tuning on the SuperGLUE training set (for a total of 630K \ufb01ne-tuning examples). We \ufb01nd the\ndifference in performance between the BERT-Large and BERT++ to be roughly equivalent to the difference between\nGPT-3 with one example per context versus eight examples per context.\nand MultiRC, we sampled a new set of examples to use in the context for each problem. For WSC and MultiRC, we\nused the same set of randomly drawn examples from the training set as context for all of the problems we evaluated.\nWe observe a wide range in GPT-3\u2019s performance across tasks. On COPA and ReCoRD GPT-3 achieves near-SOTA\nperformance in the one-shot and few-shot settings, with COPA falling only a couple points short and achieving\nsecond place on the leaderboard, where \ufb01rst place is held by a \ufb01ne-tuned 11 billion parameter model (T5). On WSC,\nperformance is still relatively strong, achieving 80.1% in the few-shot setting (note that GPT-3 achieves 88.6% on the\noriginal Winograd dataset as described in Section 3.4). On BoolQ, MultiRC, and RTE, performance is reasonable,\nroughly matching that of a \ufb01ne-tuned BERT-Large. On CB, we see signs of life at 75.6% in the few-shot setting.\nWiC is a notable weak spot with few-shot performance at 49.4% (at random chance). We tried a number of different\nphrasings and formulations for WiC (which involves determining if a word is being used with the same meaning in two\nsentences), none of which was able to achieve strong performance. This hints at a phenomenon that will become clearer\nin the next section (which discusses the ANLI benchmark) \u2013 GPT-3 appears to be weak in the few-shot or one-shot\nsetting at some tasks that involve comparing two sentences or snippets, for example whether a word is used the same\nway in two sentences (WiC), whether one sentence is a paraphrase of another, or whether one sentence implies another.\nThis could also explain the comparatively low scores for RTE and CB, which also follow this format. Despite these\nweaknesses, GPT-3 still outperforms a \ufb01ne-tuned BERT-large on four of eight tasks and on two tasks GPT-3 is close to\nthe state-of-the-art held by a \ufb01ne-tuned 11 billion parameter model.\nFinally, we note that the few-shot SuperGLUE score steadily improves with both model size and with number of\nexamples in the context showing increasing bene\ufb01ts from in-context learning (Figure 3.8). We scale Kup to 32\nexamples per task, after which point additional examples will not reliably \ufb01t into our context. When sweeping over\nvalues ofK, we \ufb01nd that GPT-3 requires less than eight total examples per task to outperform a \ufb01ne-tuned BERT-Large\non overall SuperGLUE score.\n3.8 NLI\nNatural Language Inference (NLI) [ Fyo00 ] concerns the ability to understand the relationship between two sentences.\nIn practice, this task is usually structured as a two or three class classi\ufb01cation problem where the model classi\ufb01es\n20Figure 3.9: Performance of GPT-3 on ANLI Round 3. Results are on the dev-set, which has only 1500 examples\nand therefore has high variance (we estimate a standard deviation of 1.2%). We \ufb01nd that smaller models hover around\nrandom chance, while few-shot GPT-3 175B closes almost half the gap from random chance to SOTA. Results for\nANLI rounds 1 and 2 are shown in the appendix.\nwhether the second sentence logically follows from the \ufb01rst, contradicts the \ufb01rst sentence, or is possibly true (neutral).\nSuperGLUE includes an NLI dataset, RTE, which evaluates the binary version of the task. On RTE, only the largest\nversion of GPT-3 performs convincingly better than random (56%) in any evaluation setting, but in a few-shot setting\nGPT-3 performs similarly to a single-task \ufb01ne-tuned BERT Large. We also evaluate on the recently introduced\nAdversarial Natural Language Inference (ANLI) dataset [ NWD+19]. ANLI is a dif\ufb01cult dataset employing a series of\nadversarially mined natural language inference questions in three rounds (R1, R2, and R3). Similar to RTE, all of our\nmodels smaller than GPT-3 perform at almost exactly random chance on ANLI, even in the few-shot setting ( \u001833%),\nwhereas GPT-3 itself shows signs of life on Round 3. Results for ANLI R3 are highlighted in Figure 3.9 and full results\nfor all rounds can be found in Appendix H. These results on both RTE and ANLI suggest that NLI is still a very dif\ufb01cult\ntask for language models and they are only just beginning to show signs of progress.\n3.9 Synthetic and Qualitative Tasks\nOne way to probe GPT-3\u2019s range of abilities in the few-shot (or zero- and one-shot) setting is to give it tasks which\nrequire it to perform simple on-the-\ufb02y computational reasoning, recognize a novel pattern that is unlikely to have\noccurred in training, or adapt quickly to an unusual task. We devise several tasks to test this class of abilities. First, we\ntest GPT-3\u2019s ability to perform arithmetic. Second, we create several tasks that involve rearranging or unscrambling the\nletters in a word, tasks which are unlikely to have been exactly seen during training. Third, we test GPT-3\u2019s ability to\nsolve SAT-style analogy problems few-shot. Finally, we test GPT-3 on several qualitative tasks, including using new\nwords in a sentence, correcting English grammar, and news article generation. We will release the synthetic datasets\nwith the hope of stimulating further study of test-time behavior of language models.\n3.9.1 Arithmetic\nTo test GPT-3\u2019s ability to perform simple arithmetic operations without task-speci\ufb01c training, we developed a small\nbattery of 10 tests that involve asking GPT-3 a simple arithmetic problem in natural language:\n\u20222 digit addition (2D+) \u2013 The model is asked to add two integers sampled uniformly from [0;100) , phrased in\nthe form of a question, e.g. \u201cQ: What is 48 plus 76? A: 124.\u201d\n\u20222 digit subtraction (2D-) \u2013 The model is asked to subtract two integers sampled uniformly from [0;100) ; the\nanswer may be negative. Example: \u201cQ: What is 34 minus 53? A: -19\u201d.\n\u20223 digit addition (3D+) \u2013 Same as 2 digit addition, except numbers are uniformly sampled from [0;1000) .\n21Figure 3.10: Results on all 10 arithmetic tasks in the few-shot settings for models of different sizes. There is a\nsigni\ufb01cant jump from the second largest model (GPT-3 13B) to the largest model (GPT-3 175), with the latter being\nable to reliably accurate 2 digit arithmetic, usually accurate 3 digit arithmetic, and correct answers a signi\ufb01cant fraction\nof the time on 4-5 digit arithmetic, 2 digit multiplication, and compound operations. Results for one-shot and zero-shot\nare shown in the appendix.\n\u20223 digit subtraction (3D-) \u2013 Same as 2 digit subtraction, except numbers are uniformly sampled from [0;1000) .\n\u20224 digit addition (4D+) \u2013 Same as 3 digit addition, except uniformly sampled from [0;10000) .\n\u20224 digit subtraction (4D-) \u2013 Same as 3 digit subtraction, except uniformly sampled from [0;10000) .\n\u20225 digit addition (5D+) \u2013 Same as 3 digit addition, except uniformly sampled from [0;100000) .\n\u20225 digit subtraction (5D-) \u2013 Same as 3 digit subtraction, except uniformly sampled from [0;100000) .\n\u20222 digit multiplication (2Dx) \u2013 The model is asked to multiply two integers sampled uniformly from [0;100) ,\ne.g. \u201cQ: What is 24 times 42? A: 1008\u201d.\n\u2022One-digit composite (1DC) \u2013 The model is asked to perform a composite operation on three 1 digit numbers,\nwith parentheses around the last two. For example, \u201cQ: What is 6+(4*8)? A: 38\u201d. The three 1 digit numbers\nare selected uniformly on [0;10)and the operations are selected uniformly from f+,-,*g.\nIn all 10 tasks the model must generate the correct answer exactly. For each task we generate a dataset of 2,000 random\ninstances of the task and evaluate all models on those instances.\nFirst we evaluate GPT-3 in the few-shot setting, for which results are shown in Figure 3.10. On addition and subtraction,\nGPT-3 displays strong pro\ufb01ciency when the number of digits is small, achieving 100% accuracy on 2 digit addition,\n98.9% at 2 digit subtraction, 80.2% at 3 digit addition, and 94.2% at 3-digit subtraction. Performance decreases as the\nnumber of digits increases, but GPT-3 still achieves 25-26% accuracy on four digit operations and 9-10% accuracy on\n\ufb01ve digit operations, suggesting at least some capacity to generalize to larger numbers of digits. GPT-3 also achieves\n29.2% accuracy at 2 digit multiplication, an especially computationally intensive operation. Finally, GPT-3 achieves\n21.3% accuracy at single digit combined operations (for example, 9*(7+5)), suggesting that it has some robustness\nbeyond just single operations.\nAs Figure 3.10 makes clear, small models do poorly on all of these tasks \u2013 even the 13 billion parameter model (the\nsecond largest after the 175 billion full GPT-3) can solve 2 digit addition and subtraction only half the time, and all\nother operations less than 10% of the time.\nOne-shot and zero-shot performance are somewhat degraded relative to few-shot performance, suggesting that adaptation\nto the task (or at the very least recognition of the task) is important to performing these computations correctly.\nNevertheless, one-shot performance is still quite strong, and even zero-shot performance of the full GPT-3 signi\ufb01cantly\n22Setting 2D+ 2D- 3D+ 3D- 4D+ 4D- 5D+ 5D- 2Dx 1DC\nGPT-3 Zero-shot 76.9 58.0 34.2 48.3 4.0 7.5 0.7 0.8 19.8 9.8\nGPT-3 One-shot 99.6 86.4 65.5 78.7 14.0 14.0 3.5 3.8 27.4 14.3\nGPT-3 Few-shot 100.0 98.9 80.4 94.2 25.5 26.8 9.3 9.9 29.2 21.3\nTable 3.9: Results on basic arithmetic tasks for GPT-3 175B. f2,3,4,5gDf+,-gis 2, 3, 4, and 5 digit addition or\nsubtraction, 2Dx is 2 digit multiplication. 1DC is 1 digit composite operations. Results become progressively stronger\nmoving from the zero-shot to one-shot to few-shot setting, but even the zero-shot shows signi\ufb01cant arithmetic abilities.\nSetting CL A1 A2 RI RW\nGPT-3 Zero-shot 3.66 2.28 8.91 8.26 0.09\nGPT-3 One-shot 21.7 8.62 25.9 45.4 0.48\nGPT-3 Few-shot 37.9 15.1 39.7 67.2 0.44\nTable 3.10: GPT-3 175B performance on various word unscrambling and word manipulation tasks, in zero-, one-, and\nfew-shot settings. CL is \u201ccycle letters in word\u201d, A1 is anagrams of but the \ufb01rst and last letters, A2 is anagrams of all but\nthe \ufb01rst and last two letters, RI is \u201cRandom insertion in word\u201d, RW is \u201creversed words\u201d.\noutperforms few-shot learning for all smaller models. All three settings for the full GPT-3 are shown in Table 3.9, and\nmodel capacity scaling for all three settings is shown in Appendix H.\nTo spot-check whether the model is simply memorizing speci\ufb01c arithmetic problems, we took the 3-digit arithmetic\nproblems in our test set and searched for them in our training data in both the forms \"<NUM1> + <NUM2> =\" and\n\"<NUM1> plus <NUM2>\" . Out of 2,000 addition problems we found only 17 matches (0.8%) and out of 2,000\nsubtraction problems we found only 2 matches (0.1%), suggesting that only a trivial fraction of the correct answers\ncould have been memorized. In addition, inspection of incorrect answers reveals that the model often makes mistakes\nsuch as not carrying a \u201c1\u201d, suggesting it is actually attempting to perform the relevant computation rather than\nmemorizing a table.\nOverall, GPT-3 displays reasonable pro\ufb01ciency at moderately complex arithmetic in few-shot, one-shot, and even\nzero-shot settings.\n3.9.2 Word Scrambling and Manipulation Tasks\nTo test GPT-3\u2019s ability to learn novel symbolic manipulations from a few examples, we designed a small battery of\n5 \u201ccharacter manipulation\u201d tasks. Each task involves giving the model a word distorted by some combination of\nscrambling, addition, or deletion of characters, and asking it to recover the original word. The 5 tasks are:\n\u2022Cycle letters in word (CL) \u2013 The model is given a word with its letters cycled, then the \u201c=\u201d symbol, and\nis expected to generate the original word. For example, it might be given \u201clyinevitab\u201d and should output\n\u201cinevitably\u201d.\n\u2022Anagrams of all but \ufb01rst and last characters (A1) \u2013 The model is given a word where every letter except\nthe \ufb01rst and last have been scrambled randomly, and must output the original word. Example: criroptuon =\ncorruption.\n\u2022Anagrams of all but \ufb01rst and last 2 characters (A2) \u2013 The model is given a word where every letter except\nthe \ufb01rst 2 and last 2 have been scrambled randomly, and must recover the original word. Example: opoepnnt\n!opponent.\n\u2022Random insertion in word (RI) \u2013 A random punctuation or space character is inserted between each letter\nof a word, and the model must output the original word. Example: s.u!c/c!e.s s i/o/n = succession.\n\u2022Reversed words (RW) \u2013 The model is given a word spelled backwards, and must output the original word.\nExample: stcejbo!objects.\nFor each task we generate 10,000 examples, which we chose to be the top 10,000 most frequent words as measured by\n[Nor09 ] of length more than 4 characters and less than 15 characters. The few-shot results are shown in Figure 3.11.\nTask performance tends to grow smoothly with model size, with the full GPT-3 model achieving 66.9% on removing\n23Figure 3.11: Few-shot performance on the \ufb01ve word scrambling tasks for different sizes of model. There is generally\nsmooth improvement with model size although the random insertion task shows an upward slope of improvement with\nthe 175B model solving the task the majority of the time. Scaling of one-shot and zero-shot performance is shown in\nthe appendix. All tasks are done with K= 100 .\nrandom insertions, 38.6% on cycling letters, 40.2% on the easier anagram task, and 15.1% on the more dif\ufb01cult anagram\ntask (where only the \ufb01rst and last letters are held \ufb01xed). None of the models can reverse the letters in a word.\nIn the one-shot setting, performance is signi\ufb01cantly weaker (dropping by half or more), and in the zero-shot setting the\nmodel can rarely perform any of the tasks (Table 3.10). This suggests that the model really does appear to learn these\ntasks at test time, as the model cannot perform them zero-shot and their arti\ufb01cial nature makes them unlikely to appear\nin the pre-training data (although we cannot con\ufb01rm this with certainty).\nWe can further quantify performance by plotting \u201cin-context learning curves\u201d, which show task performance as a\nfunction of the number of in-context examples. We show in-context learning curves for the Symbol Insertion task\nin Figure 1.2. We can see that larger models are able to make increasingly effective use of in-context information,\nincluding both task examples and natural language task descriptions.\nFinally, it is worth adding that solving these tasks requires character-level manipulations, whereas our BPE encoding\noperates on signi\ufb01cant fractions of a word (on average \u00180:7words per token), so from the LM\u2019s perspective succeeding\nat these tasks involves not just manipulating BPE tokens but understanding and pulling apart their substructure. Also,\nCL, A1, and A2 are not bijective (that is, the unscrambled word is not a deterministic function of the scrambled word),\nrequiring the model to perform some search to \ufb01nd the correct unscrambling. Thus, the skills involved appear to require\nnon-trivial pattern-matching and computation.\n3.9.3 SAT Analogies\nTo test GPT-3 on another task that is somewhat unusual relative to the typical distribution of text, we collected a set of\n374 \u201cSAT analogy\u201d problems [ TLBS03 ]. Analogies are a style of multiple choice question that constituted a section of\nthe SAT college entrance exam before 2005. A typical example is \u201caudacious is to boldness as (a) sanctimonious is to\nhypocrisy, (b) anonymous is to identity, (c) remorseful is to misdeed, (d) deleterious is to result, (e) impressionable is to\ntemptation\u201d. The student is expected to choose which of the \ufb01ve word pairs has the same relationship as the original\nword pair; in this example the answer is \u201csanctimonious is to hypocrisy\u201d. On this task GPT-3 achieves 65.2% in the\nfew-shot setting, 59.1% in the one-shot setting, and 53.7% in the zero-shot setting, whereas the average score among\ncollege applicants was 57% [ TL05 ] (random guessing yields 20%). As shown in Figure 3.12, the results improve with\nscale, with the the full 175 billion model improving by over 10% compared to the 13 billion parameter model.\n24Figure 3.12: Zero-, one-,and few-shot performance on SAT analogy tasks, for different sizes of model. The largest\nmodel achieves 65% accuracy in the few-shot setting, and also demonstrates signi\ufb01cant gains to in-context learning\nwhich are not present in smaller models.\n3.9.4 News Article Generation\nPrevious work on generative language models qualitatively tested their ability to generate synthetic \u201cnews articles\u201d by\nconditional sampling from the model given a human-written prompt consisting of a plausible \ufb01rst sentence for a news\nstory [ RWC+19]. Relative to [ RWC+19], the dataset used to train GPT-3 is much less weighted towards news articles,\nso trying to generate news articles via raw unconditional samples is less effective \u2013 for example GPT-3 often interprets\nthe proposed \ufb01rst sentence of a \u201cnews article\u201d as a tweet and then posts synthetic responses or follow-up tweets. To\nsolve this problem we employed GPT-3\u2019s few-shot learning abilities by providing three previous news articles in the\nmodel\u2019s context to condition it. With the title and subtitle of a proposed next article, the model is able to reliably\ngenerate short articles in the \u201cnews\u201d genre.\nTo gauge the quality of news article generation from GPT-3 (which we believe is likely to be correlated with conditional\nsample generation quality in general), we decided to measure human ability to distinguish GPT-3-generated articles\nfrom real ones. Similar work has been carried out by Kreps et al. [ KMB20 ] and Zellers et al. [ ZHR+19]. Generative\nlanguage models are trained to match the distribution of content generated by humans, so the (in)ability of humans to\ndistinguish the two is a potentially important measure of quality.3\nIn order to see how well humans can detect model generated text, we arbitrarily selected 25 article titles and subtitles\nfrom the website newser.com (mean length: 215 words). We then generated completions of these titles and subtitles\nfrom four language models ranging in size from 125M to 175B (GPT-3) parameters (mean length: 200 words). For each\nmodel, we presented around 80 US-based participants with a quiz consisting of these real titles and subtitles followed\nby either the human written article or the article generated by the model4. Participants were asked to select whether the\narticle was \u201cvery likely written by a human\u201d, \u201cmore likely written by a human\u201d, \u201cI don\u2019t know\u201d, \u201cmore likely written by\na machine\u201d, or \u201cvery likely written by a machine\u201d.\nThe articles we selected were not in the models\u2019 training data and the model outputs were formatted and selected\nprogrammatically to prevent human cherry-picking. All models used the same context to condition outputs on and were\npre-trained with the same context size and the same article titles and subtitles were used as prompts for each model.\nHowever, we also ran an experiment to control for participant effort and attention that followed the same format but\ninvolved intentionally bad model generated articles. This was done by generating articles from a \u201ccontrol model\u201d: a\n160M parameter model with no context and increased output randomness.\n3This task is also relevant to the potential misuse of language models discussed in Section 6.1.\n4We wanted to identify how good an average person on the internet is at detecting language model outputs, so we focused on\nparticipants drawn from the general US population. See Appendix E for details.\n25Mean accuracy95% Con\ufb01dence\nInterval (low, hi)tcompared to\ncontrol (p-value)\u201cI don\u2019t know\u201d\nassignments\nControl (deliberately bad model) 86% 83%\u201390% - 3.6 %\nGPT-3 Small 76% 72%\u201380% 3.9 (2 e-4) 4.9%\nGPT-3 Medium 61% 58%\u201365% 10.3 (7 e-21) 6.0%\nGPT-3 Large 68% 64%\u201372% 7.3 (3 e-11) 8.7%\nGPT-3 XL 62% 59%\u201365% 10.7 (1 e-19) 7.5%\nGPT-3 2.7B 62% 58%\u201365% 10.4 (5 e-19) 7.1%\nGPT-3 6.7B 60% 56%\u201363% 11.2 (3 e-21) 6.2%\nGPT-3 13B 55% 52%\u201358% 15.3 (1 e-32) 7.1%\nGPT-3 175B 52% 49%\u201354% 16.9 (1 e-34) 7.8%\nTable 3.11: Human accuracy in identifying whether short ( \u0018200 word) news articles are model generated . We\n\ufb01nd that human accuracy (measured by the ratio of correct assignments to non-neutral assignments) ranges from 86%\non the control model to 52% on GPT-3 175B. This table compares mean accuracy between \ufb01ve different models, and\nshows the results of a two-sample T-Test for the difference in mean accuracy between each model and the control model\n(an unconditional GPT-3 Small model with increased output randomness).\nMean human accuracy (the ratio of correct assignments to non-neutral assignments per participant) at detecting that\nthe intentionally bad articles were model generated was \u001886% where 50% is chance level performance. By contrast,\nmean human accuracy at detecting articles that were produced by the 175B parameter model was barely above chance\nat\u001852% (see Table 3.11).5Human abilities to detect model generated text appear to decrease as model size increases:\nthere appears to be a trend towards chance accuracy with model size, and human detection of GPT-3 is close to chance.6\nThis is true despite the fact that participants spend more time on each output as model size increases (see Appendix E).\nExamples of synthetic articles from GPT-3 are given in Figures 3.14 and 3.15.7Much of the text is\u2014as indicated by the\nevaluations\u2014dif\ufb01cult for humans to distinguish from authentic human content. Factual inaccuracies can be an indicator\nthat an article is model generated since, unlike human authors, the models have no access to the speci\ufb01c facts that the\narticle titles refer to or when the article was written. Other indicators include repetition, non sequiturs, and unusual\nphrasings, though these are often subtle enough that they are not noticed.\nRelated work on language model detection by Ippolito et al. [ IDCBE19 ] indicates that automatic discriminators like\nGR O V E R [ZHR+19] and GLTR [ GSR19 ] may have greater success at detecting model generated text than human\nevaluators. Automatic detection of these models may be a promising area of future research.\nIppolito et al. [ IDCBE19 ] also note that human accuracy at detecting model generated text increases as humans observe\nmore tokens. To do a preliminary investigation of how good humans are at detecting longer news articles generated\nby GPT-3 175B, we selected 12 world news articles from Reuters with an average length of 569 words and generated\ncompletions of these articles from GPT-3 with an average length of 498 words (298 words longer than our initial\nexperiments). Following the methodology above, we ran two experiments, each on around 80 US-based participants, to\ncompare human abilities to detect the articles generated by GPT-3 and a control model.\nWe found that mean human accuracy at detecting the intentionally bad longer articles from the control model was\n\u001888%, while mean human accuracy at detecting the longer articles that were produced by GPT-3 175B was still barely\nabove chance at\u001852% (see Table 3.12). This indicates that, for news articles that are around 500 words long, GPT-3\ncontinues to produce articles that humans \ufb01nd dif\ufb01cult to distinguish from human written news articles.\n3.9.5 Learning and Using Novel Words\nA task studied in developmental linguistics [ CB78 ] is the ability to learn and utilize new words, for example using a\nword in a sentence after seeing it de\ufb01ned only once, or conversely inferring a word\u2019s meaning from only one usage. Here\nwe qualitatively test GPT-3\u2019s ability to do the former. Speci\ufb01cally, we give GPT-3 the de\ufb01nition of a nonexistent word,\nsuch as \u201cGigamuru\u201d, and then ask it to use it in a sentence. We provide one to \ufb01ve previous examples of a (separate)\n5We use a two-sample Student\u2019s T-Test to test for signi\ufb01cant difference between the means of the participant accuracies of each\nmodel and the control model and report the normalized difference in the means (as the t-statistic) and the p-value.\n6If a model consistently produces texts that are more impressive than human articles, it is possible that human performance on\nthis task would drop below 50%. Indeed, many individual participants scored below 50% on this task.\n7Additional non-news samples can be found in Appendix F.\n26Figure 3.13: People\u2019s ability to identify whether news articles are model-generated (measured by the ratio of correct\nassignments to non-neutral assignments) decreases as model size increases. Accuracy on the outputs on the deliberately-\nbad control model (an unconditioned GPT-3 Small model with higher output randomness) is indicated with the dashed\nline at the top, and the random chance (50%) is indicated with the dashed line at the bottom. Line of best \ufb01t is a power\nlaw with 95% con\ufb01dence intervals.\nMean accuracy95% Con\ufb01dence\nInterval (low, hi)tcompared to\ncontrol (p-value)\u201cI don\u2019t know\u201d\nassignments\nControl 88% 84%\u201391% - 2.7%\nGPT-3 175B 52% 48%\u201357% 12.7 (3.2 e-23) 10.6%\nTable 3.12: People\u2019s ability to identify whether \u0018500word articles are model generated (as measured by the ratio of\ncorrect assignments to non-neutral assignments) was 88% on the control model and 52% on GPT-3 175B. This table\nshows the results of a two-sample T-Test for the difference in mean accuracy between GPT-3 175B and the control\nmodel (an unconditional GPT-3 Small model with increased output randomness).\n27Title: United Methodists Agree to Historic Split\nSubtitle: Those who oppose gay marriage will form their own denomination\nArticle: After two days of intense debate, the United Methodist Church\nhas agreed to a historic split - one that is expected to end in the\ncreation of a new denomination, one that will be \"theologically and\nsocially conservative,\" according to The Washington Post. The majority of\ndelegates attending the church's annual General Conference in May voted to\nstrengthen a ban on the ordination of LGBTQ clergy and to write new rules\nthat will \"discipline\" clergy who officiate at same-sex weddings. But\nthose who opposed these measures have a new plan: They say they will form a\nseparate denomination by 2020, calling their church the Christian Methodist\ndenomination.\nThe Post notes that the denomination, which claims 12.5 million members, was\nin the early 20th century the \"largest Protestant denomination in the U.S.,\"\nbut that it has been shrinking in recent decades. The new split will be the\nsecond in the church's history. The first occurred in 1968, when roughly\n10 percent of the denomination left to form the Evangelical United Brethren\nChurch. The Post notes that the proposed split \"comes at a critical time\nfor the church, which has been losing members for years,\" which has been\n\"pushed toward the brink of a schism over the role of LGBTQ people in the\nchurch.\" Gay marriage is not the only issue that has divided the church. In\n2016, the denomination was split over ordination of transgender clergy, with\nthe North Pacific regional conference voting to ban them from serving as\nclergy, and the South Pacific regional conference voting to allow them.\nFigure 3.14: The GPT-3 generated news article that humans had the greatest dif\ufb01culty distinguishing from a human\nwritten article (accuracy: 12%).\nTitle: Star's Tux Promise Draws Megyn Kelly's Sarcasm\nSubtitle: Joaquin Phoenix pledged to not change for each awards event\nArticle: A year ago, Joaquin Phoenix made headlines when he appeared on\nthe red carpet at the Golden Globes wearing a tuxedo with a paper bag over\nhis head that read, \"I am a shape-shifter. I can't change the world. I\ncan only change myself.\" It was a promise to not change to fit into the\nHollywood mold: \"I think that's a really special thing, to not change\nyourself. I think it's a really special thing to say, `This is what's\ninside of me, I'm proud of it, and I'm not going to be ashamed because of\nthe way that someone else thinks I should be.'\" Now, it's the Oscars, and\nPhoenix is at it again. But this time, his publicist is saying he'll be\nwearing a tux no matter what.\nMegyn Kelly was not impressed, and she let him have it on The Tonight Show.\n\"You know, I feel like, I feel like you could have worn the tux,\" she says.\n\"But you're saying you're a shape-shifter. I don't know if you can change\nyour tux, but you can change your mind. You can change your mind. You can\nchange your mind.\" Phoenix says he did, but it didn't stick. \"I was like,\n`Okay, I'm going to wear a tuxedo to this thing.' And then I thought, `I\ndon't want to wear a tuxedo to this thing.'\" Kelly goes on to encourage him\nto change his mind again, but Phoenix says it's too late: \"I'm committed to\nwearing this.\"\nFigure 3.15: The GPT-3 generated news article that humans found the easiest to distinguish from a human written\narticle (accuracy: 61%).\n28A \"whatpu\" is a small, furry animal native to Tanzania. An example of a sentence that uses\nthe word whatpu is:\nWe were traveling in Africa and we saw these very cute whatpus.\nTo do a \"farduddle\" means to jump up and down really fast. An example of a sentence that uses\nthe word farduddle is:\nOne day when I was playing tag with my little sister, she got really excited and she\nstarted doing these crazy farduddles.\nA \"yalubalu\" is a type of vegetable that looks like a big pumpkin. An example of a sentence\nthat uses the word yalubalu is:\nI was on a trip to Africa and I tried this yalubalu vegetable that was grown in a garden\nthere. It was delicious.\nA \"Burringo\" is a car with very fast acceleration. An example of a sentence that uses the\nword Burringo is:\nIn our garage we have a Burringo that my father drives to work every day.\nA \"Gigamuru\" is a type of Japanese musical instrument. An example of a sentence that uses the\nword Gigamuru is:\nI have a Gigamuru that my uncle gave me as a gift. I love to play it at home.\nTo \"screeg\" something is to swing a sword at it. An example of a sentence that uses the word\nscreeg is:\nWe screeghed at each other for several minutes and then we went outside and ate ice cream.\nFigure 3.16: Representative GPT-3 completions for the few-shot task of using a new word in a sentence. Boldface is\nGPT-3\u2019s completions, plain text is human prompts. In the \ufb01rst example both the prompt and the completion are provided\nby a human; this then serves as conditioning for subsequent examples where GPT-3 receives successive additional\nprompts and provides the completions. Nothing task-speci\ufb01c is provided to GPT-3 other than the conditioning shown\nhere.\nnonexistent word being de\ufb01ned and used in a sentence, so the task is few-shot in terms of previous examples of the\nbroad task and one-shot in terms of the speci\ufb01c word. Table 3.16 shows the 6 examples we generated; all de\ufb01nitions\nwere human-generated, and the \ufb01rst answer was human-generated as conditioning while the subsequent answers were\ngenerated by GPT-3. These examples were generated continuously in one sitting and we did not omit or repeatedly try\nany prompts. In all cases the generated sentence appears to be a correct or at least plausible use of the word. In the \ufb01nal\nsentence the model generates a plausible conjugation for the word \u201cscreeg\u201d (namely \u201cscreeghed\u201d), although the use of\nthe word is slightly awkward (\u201cscreeghed at each other\u201d) despite being plausible in the sense that it could describe a toy\nsword \ufb01ght. Overall, GPT-3 appears to be at least pro\ufb01cient at the task of using novel words in a sentence.\n3.9.6 Correcting English Grammar\nAnother task well suited for few-shot learning is correcting English grammar. We test this with GPT-3 in the few-\nshot setting by giving prompts of the form \"Poor English Input: <sentence> nn Good English Output:\n<sentence>\" . We give GPT-3 one human-generated correction and then ask it to correct 5 more (again without any\nomissions or repeats). Results are shown in Figure 3.17.\n4 Measuring and Preventing Memorization Of Benchmarks\nSince our training dataset is sourced from the internet, it is possible that our model was trained on some of our\nbenchmark test sets. Accurately detecting test contamination from internet-scale datasets is a new area of research\nwithout established best practices. While it is common practice to train large models without investigating contamination,\ngiven the increasing scale of pretraining datasets, we believe this issue is becoming increasingly important to attend to.\nThis concern is not just hypothetical. One of the \ufb01rst papers to train a language model on Common Crawl data [ TL18 ]\ndetected and removed a training document which overlapped with one of their evaluation datasets. Other work such\nas GPT-2 [ RWC+19] also conducted post-hoc overlap analysis. Their study was relatively encouraging, \ufb01nding that\n29Poor English input: I eated the purple berries.\nGood English output: I ate the purple berries.\nPoor English input: Thank you for picking me as your designer. I'd appreciate it.\nGood English output: Thank you for choosing me as your designer. I appreciate it.\nPoor English input: The mentioned changes have done. or I did the alteration that you\nrequested. or I changed things you wanted and did the modifications.\nGood English output: The requested changes have been made. or I made the alteration that you\nrequested. or I changed things you wanted and made the modifications.\nPoor English input: I'd be more than happy to work with you in another project.\nGood English output: I'd be more than happy to work with you on another project.\nPoor English input: Please provide me with a short brief of the design you're looking for and\nthat'd be nice if you could share some examples or project you did before.\nGood English output: Please provide me with a brief description of the design you're\nlooking for and that would be nice if you could share some examples or projects you have\ndone before.\nPoor English input: The patient was died.\nGood English output: The patient died.\nPoor English input: We think that Leslie likes ourselves.\nGood English output: We think that Leslie likes us.\nPoor English input: Janet broke Bill on the finger.\nGood English output: Janet broke Bill's finger.\nPoor English input: Mary arranged for, in St. Louis, John to rent a house cheap.\nGood English output: Mary arranged for John to rent a house in St. Louis.\nPoor English input: Today I have went to the store to to buys some many bottle of water.\nGood English output: Today I went to the store to buy some bottles of water.\nPoor English input: I have tried to hit ball with bat, but my swing is has miss.\nGood English output: I tried to hit the ball with the bat, but my swing missed.\nFigure 3.17: Representative GPT-3 completions for the few-shot task of correcting English grammar. Boldface\nis GPT-3\u2019s completions, plain text is human prompts. In the \ufb01rst few examples example both the prompt and the\ncompletion are provided by a human; this then serves as conditioning for subsequent examples where GPT-3 receives\nsuccessive additional prompts and provides the completions. Nothing task-speci\ufb01c is provided to GPT-3 aside from\nthe \ufb01rst few examples as conditioning and the \u201cPoor English input/Good English output\u201d framing. We note that the\ndistinction between \u201dpoor\u201d and \u201dgood\u201d English (and the terms themselves) is complex, contextual, and contested. As\nthe example mentioning the rental of a house shows, assumptions that the model makes about what \u201cgood\u201d is can even\nlead it to make errors (here, the model not only adjusts grammar, but also removes the word \u201dcheap\u201d in a way that alters\nmeaning).\n30Figure 4.1: GPT-3 Training Curves We measure model performance during training on a deduplicated validation\nsplit of our training distribution. Though there is some gap between training and validation performance, the gap grows\nonly minimally with model size and training time, suggesting that most of the gap comes from a difference in dif\ufb01culty\nrather than over\ufb01tting.\nalthough models did perform moderately better on data that overlapped between training and testing, this did not\nsigni\ufb01cantly impact reported results due to the small fraction of data which was contaminated (often only a few percent).\nGPT-3 operates in a somewhat different regime. On the one hand, the dataset and model size are about two orders of\nmagnitude larger than those used for GPT-2, and include a large amount of Common Crawl, creating increased potential\nfor contamination and memorization. On the other hand, precisely due to the large amount of data, even GPT-3 175B\ndoes not over\ufb01t its training set by a signi\ufb01cant amount, measured relative to a held-out validation set with which it was\ndeduplicated (Figure 4.1). Thus, we expect that contamination is likely to be frequent, but that its effects may not be as\nlarge as feared.\nWe initially tried to address the issue of contamination by proactively searching for and attempting to remove any overlap\nbetween our training data and the development and test sets of all benchmarks studied in this paper. Unfortunately, a\nbug resulted in only partial removal of all detected overlaps from the training data. Due to the cost of training, it wasn\u2019t\nfeasible to retrain the model. To address this, we investigate in detail how the remaining detected overlap impacts\nresults.\nFor each benchmark, we produce a \u2018clean\u2019 version which removes all potentially leaked examples, de\ufb01ned roughly as\nexamples that have a 13-gram overlap with anything in the pretraining set (or that overlap with the whole example when\nit is shorter than 13-grams). The goal is to very conservatively \ufb02ag anything that could potentially be contamination,\nso as to produce a clean subset that is free of contamination with high con\ufb01dence. The exact procedure is detailed in\nAppendix C.\nWe then evaluate GPT-3 on these clean benchmarks, and compare to the original score. If the score on the clean\nsubset is similar to the score on the entire dataset, this suggests that contamination, even if present, does not have a\nsigni\ufb01cant effect on reported results. If the score on the clean subset is lower, this suggests contamination may be\nin\ufb02ating the results. The results are summarized in Figure 4.2. Although potential contamination is often high (with a\nquarter of benchmarks scoring over 50%), in most cases performance changes only negligibly, and we see no evidence\nthat contamination level and performance difference are correlated. We conclude that either our conservative method\nsubstantially overestimated contamination or that contamination has little effect on performance.\nBelow, we review in more detail the few speci\ufb01c cases where either (1) the model performs signi\ufb01cantly worse on\nthe cleaned version, or (2) potential contamination is very high, which makes measuring the performance difference\ndif\ufb01cult.\nOur analysis \ufb02agged six groups of benchmarks for further investigation: Word Scrambling, Reading Comprehension\n(QuAC, SQuAD2, DROP), PIQA, Winograd, language modeling tasks (Wikitext tasks, 1BW), and German to English\n31Figure 4.2: Benchmark contamination analysis We constructed cleaned versions of each of our benchmarks to\ncheck for potential contamination in our training set. The x-axis is a conservative lower bound for how much of the\ndataset is known with high con\ufb01dence to be clean, and the y-axis shows the difference in performance when evaluating\nonly on the veri\ufb01ed clean subset. Performance on most benchmarks changed negligibly, but some were \ufb02agged for\nfurther review. On inspection we \ufb01nd some evidence for contamination of the PIQA and Winograd results, and we mark\nthe corresponding results in Section 3 with an asterisk. We \ufb01nd no evidence that other benchmarks are affected.\ntranslation. Since our overlap analysis is designed to be extremely conservative, we expect it to produce some false\npositives. We summarize the results for each group of tasks below:\n\u2022Reading Comprehension: Our initial analysis \ufb02agged >90% of task examples from QuAC, SQuAD2, and\nDROP as potentially contaminated, so large that even measuring the differential on a clean subset was dif\ufb01cult.\nUpon manual inspection, however, we found that for every overlap we inspected, in all 3 datasets, the source\ntext was present in our training data but the question/answer pairs were not, meaning the model gains only\nbackground information and cannot memorize the answer to a speci\ufb01c question.\n\u2022German translation: We found 25% of the examples in the WMT16 German-English test set were marked\nas potentially contaminated, with an associated total effect size of 1-2 BLEU. Upon inspection, none of the\n\ufb02agged examples contain paired sentences resembling NMT training data and collisions were monolingual\nmatches mostly of snippets of events discussed in the news.\n\u2022Reversed Words and Anagrams: Recall that these tasks are of the form \u201c alaok = koala \u201d. Due to the\nshort length of these tasks, we used 2-grams for \ufb01ltering (ignoring punctuation). After inspecting the \ufb02agged\noverlaps, we found that they were not typically instances of real reversals or unscramblings in the training set,\nbut rather palindromes or trivial unscramblings, e.g \u201c kayak = kayak \u201d. The amount of overlap was small,\nbut removing the trivial tasks lead to an increase in dif\ufb01culty and thus a spurious signal. Related to this, the\nsymbol insertion task shows high overlap but no effect on performance \u2013 this is because that task involves\nremoving non-letter characters from a word, and the overlap analysis itself ignores such characters, leading to\nmany spurious matches.\n\u2022PIQA: The overlap analysis \ufb02agged 29% of examples as contaminated, and observed a 3 percentage point\nabsolute decrease (4% relative decrease) in performance on the clean subset. Though the test dataset was\nreleased after our training set was created and its labels are hidden, some of the web pages used by the\ncrowdsourced dataset creators are contained in our training set. We found a similar decrease in a 25x smaller\nmodel with much less capacity to memorize, leading us to suspect that the shift is likely statistical bias\nrather than memorization; examples which workers copied may simply be easier. Unfortunately, we cannot\nrigorously prove this hypothesis. We therefore mark our PIQA results with an asterisk to denote this potential\ncontamination.\n\u2022Winograd: The overlap analysis \ufb02agged 45% of examples, and found a 2.6% decrease in performance on the\nclean subset. Manual inspection of the overlapping data point showed that 132 Winograd schemas were in\nfact present in our training set, though presented in a different format than we present the task to the model.\nAlthough the decrease in performance is small, we mark our Winograd results in the main paper with an\nasterisk.\n32\u2022Language modeling: We found the 4 Wikipedia language modeling benchmarks measured in GPT-2, plus the\nChildren\u2019s Book Test dataset, to be almost entirely contained in our training data. Since we cannot reliably\nextract a clean subset here, we do not report results on these datasets, even though we intended to when starting\nthis work. We note that Penn Tree Bank due to its age was unaffected and therefore became our chief language\nmodeling benchmark.\nWe also inspected datasets where contamination was high, but the impact on performance was close to zero, simply\nto verify how much actual contamination existed. These appeared to often contain false positives. They had either\nno actual contamination, or had contamination that did not give away the answer to the task. One notable exception\nwas LAMBADA, which appeared to have substantial genuine contamination, yet the impact on performance was very\nsmall, with the clean subset scoring within 0.5% of the full dataset. Also, strictly speaking, our \ufb01ll-in-the-blank format\nprecludes the simplest form of memorization. Nevertheless, since we made very large gains on LAMBADA in this\npaper, the potential contamination is noted in the results section.\nAn important limitation of our contamination analysis is that we cannot be sure that the clean subset is drawn from the\nsame distribution as the original dataset. It remains possible that memorization in\ufb02ates results but at the same time\nis precisely counteracted by some statistical bias causing the clean subset to be easier. However, the sheer number\nof shifts close to zero suggests this is unlikely, and we also observed no noticeable difference in the shifts for small\nmodels, which are unlikely to be memorizing.\nOverall, we have made a best effort to measure and document the effects of data contamination, and to note or outright\nremove problematic results, depending on the severity. Much work remains to be done to address this important and\nsubtle issue for the \ufb01eld in general, both when designing benchmarks and when training models. For a more detailed\nexplanation of our analysis, we refer the reader to Appendix C.\n5 Limitations\nGPT-3 and our analysis of it have a number of limitations. Below we describe some of these and suggest directions for\nfuture work.\nFirst, despite the strong quantitative and qualitative improvements of GPT-3, particularly compared to its direct\npredecessor GPT-2, it still has notable weaknesses in text synthesis and several NLP tasks. On text synthesis, although\nthe overall quality is high, GPT-3 samples still sometimes repeat themselves semantically at the document level, start to\nlose coherence over suf\ufb01ciently long passages, contradict themselves, and occasionally contain non-sequitur sentences\nor paragraphs. We will release a collection of 500 uncurated unconditional samples to help provide a better sense of\nGPT-3\u2019s limitations and strengths at text synthesis. Within the domain of discrete language tasks, we have noticed\ninformally that GPT-3 seems to have special dif\ufb01culty with \u201ccommon sense physics\u201d, despite doing well on some\ndatasets (such as PIQA [ BZB+19]) that test this domain. Speci\ufb01cally GPT-3 has dif\ufb01culty with questions of the type\n\u201cIf I put cheese into the fridge, will it melt?\u201d. Quantitatively, GPT-3\u2019s in-context learning performance has some notable\ngaps on our suite of benchmarks, as described in Section 3, and in particular it does little better than chance when\nevaluated one-shot or even few-shot on some \u201ccomparison\u201d tasks, such as determining if two words are used the same\nway in a sentence, or if one sentence implies another (WIC and ANLI respectively), as well as on a subset of reading\ncomprehension tasks. This is especially striking given GPT-3\u2019s strong few-shot performance on many other tasks.\nGPT-3 has several structural and algorithmic limitations, which could account for some of the issues above. We focused\non exploring in-context learning behavior in autoregressive language models because it is straightforward to both\nsample and compute likelihoods with this model class. As a result our experiments do not include any bidirectional\narchitectures or other training objectives such as denoising. This is a noticeable difference from much of the recent\nliterature, which has documented improved \ufb01ne-tuning performance when using these approaches over standard\nlanguage models [ RSR+19]. Thus our design decision comes at the cost of potentially worse performance on tasks\nwhich empirically bene\ufb01t from bidirectionality. This may include \ufb01ll-in-the-blank tasks, tasks that involve looking back\nand comparing two pieces of content, or tasks that require re-reading or carefully considering a long passage and then\ngenerating a very short answer. This could be a possible explanation for GPT-3\u2019s lagging few-shot performance on a\nfew of the tasks, such as WIC (which involves comparing the use of a word in two sentences), ANLI (which involves\ncomparing two sentences to see if one implies the other), and several reading comprehension tasks (e.g. QuAC and\nRACE). We also conjecture, based on past literature, that a large bidirectional model would be stronger at \ufb01ne-tuning\nthan GPT-3. Making a bidirectional model at the scale of GPT-3, and/or trying to make bidirectional models work with\nfew- or zero-shot learning, is a promising direction for future research, and could help achieve the \u201cbest of both worlds\u201d.\nA more fundamental limitation of the general approach described in this paper \u2013 scaling up any LM-like model, whether\nautoregressive or bidirectional \u2013 is that it may eventually run into (or could already be running into) the limits of the\n33pretraining objective. Our current objective weights every token equally and lacks a notion of what is most important to\npredict and what is less important. [ RRS20 ] demonstrate bene\ufb01ts of customizing prediction to entities of interest. Also,\nwith self-supervised objectives, task speci\ufb01cation relies on forcing the desired task into a prediction problem, whereas\nultimately, useful language systems (for example virtual assistants) might be better thought of as taking goal-directed\nactions rather than just making predictions. Finally, large pretrained language models are not grounded in other domains\nof experience, such as video or real-world physical interaction, and thus lack a large amount of context about the world\n[BHT+20]. For all these reasons, scaling pure self-supervised prediction is likely to hit limits, and augmentation with a\ndifferent approach is likely to be necessary. Promising future directions in this vein might include learning the objective\nfunction from humans [ ZSW+19a], \ufb01ne-tuning with reinforcement learning, or adding additional modalities such as\nimages to provide grounding and a better model of the world [CLY+19].\nAnother limitation broadly shared by language models is poor sample ef\ufb01ciency during pre-training. While GPT-3\ntakes a step towards test-time sample ef\ufb01ciency closer to that of humans (one-shot or zero-shot), it still sees much more\ntext during pre-training than a human sees in the their lifetime [ Lin20 ]. Improving pre-training sample ef\ufb01ciency is\nan important direction for future work, and might come from grounding in the physical world to provide additional\ninformation, or from algorithmic improvements.\nA limitation, or at least uncertainty, associated with few-shot learning in GPT-3 is ambiguity about whether few-shot\nlearning actually learns new tasks \u201cfrom scratch\u201d at inference time, or if it simply recognizes and identi\ufb01es tasks that it\nhas learned during training. These possibilities exist on a spectrum, ranging from demonstrations in the training set that\nare drawn from exactly the same distribution as those at test time, to recognizing the same task but in a different format,\nto adapting to a speci\ufb01c style of a general task such as QA, to learning a skill entirely de novo. Where GPT-3 is on\nthis spectrum may also vary from task to task. Synthetic tasks such as wordscrambling or de\ufb01ning nonsense words\nseem especially likely to be learned de novo, whereas translation clearly must be learned during pretraining, although\npossibly from data that is very different in organization and style than the test data. Ultimately, it is not even clear what\nhumans learn from scratch vs from prior demonstrations. Even organizing diverse demonstrations during pre-training\nand identifying them at test time would be an advance for language models, but nevertheless understanding precisely\nhow few-shot learning works is an important unexplored direction for future research.\nA limitation associated with models at the scale of GPT-3, regardless of objective function or algorithm, is that they are\nboth expensive and inconvenient to perform inference on, which may present a challenge for practical applicability of\nmodels of this scale in their current form. One possible future direction to address this is distillation [ HVD15 ] of large\nmodels down to a manageable size for speci\ufb01c tasks. Large models such as GPT-3 contain a very wide range of skills,\nmost of which are not needed for a speci\ufb01c task, suggesting that in principle aggressive distillation may be possible.\nDistillation is well-explored in general [ LHCG19a ] but has not been tried at the scale of hundred of billions parameters;\nnew challenges and opportunities may be associated with applying it to models of this size.\nFinally, GPT-3 shares some limitations common to most deep learning systems \u2013 its decisions are not easily interpretable,\nit is not necessarily well-calibrated in its predictions on novel inputs as observed by the much higher variance in\nperformance than humans on standard benchmarks, and it retains the biases of the data it has been trained on. This\nlast issue \u2013 biases in the data that may lead the model to generate stereotyped or prejudiced content \u2013 is of special\nconcern from a societal perspective, and will be discussed along with other issues in the next section on Broader Impacts\n(Section 6).\n6 Broader Impacts\nLanguage models have a wide range of bene\ufb01cial applications for society, including code and writing auto-completion,\ngrammar assistance, game narrative generation, improving search engine responses, and answering questions. But\nthey also have potentially harmful applications. GPT-3 improves the quality of text generation and adaptability over\nsmaller models and increases the dif\ufb01culty of distinguishing synthetic text from human-written text. It therefore has the\npotential to advance both the bene\ufb01cial and harmful applications of language models.\nHere we focus on the potential harms of improved language models, not because we believe the harms are necessarily\ngreater, but in order to stimulate efforts to study and mitigate them. The broader impacts of language models like this\nare numerous. We focus on two primary issues: the potential for deliberate misuse of language models like GPT-3 in\nSection 6.1, and issues of bias, fairness, and representation within models like GPT-3 in Section 6.2. We also brie\ufb02y\ndiscuss issues of energy ef\ufb01ciency (Section 6.3).\n346.1 Misuse of Language Models\nMalicious uses of language models can be somewhat dif\ufb01cult to anticipate because they often involve repurposing\nlanguage models in a very different environment or for a different purpose than researchers intended. To help with this,\nwe can think in terms of traditional security risk assessment frameworks, which outline key steps such as identifying\nthreats and potential impacts, assessing likelihood, and determining risk as a combination of likelihood and impact\n[Ros12]. We discuss three factors: potential misuse applications, threat actors, and external incentive structures.\n6.1.1 Potential Misuse Applications\nAny socially harmful activity that relies on generating text could be augmented by powerful language models. Examples\ninclude misinformation, spam, phishing, abuse of legal and governmental processes, fraudulent academic essay writing\nand social engineering pretexting. Many of these applications bottleneck on human beings to write suf\ufb01ciently high\nquality text. Language models that produce high quality text generation could lower existing barriers to carrying out\nthese activities and increase their ef\ufb01cacy.\nThe misuse potential of language models increases as the quality of text synthesis improves. The ability of GPT-3 to\ngenerate several paragraphs of synthetic content that people \ufb01nd dif\ufb01cult to distinguish from human-written text in\n3.9.4 represents a concerning milestone in this regard.\n6.1.2 Threat Actor Analysis\nThreat actors can be organized by skill and resource levels, ranging from low or moderately skilled and resourced actors\nwho may be able to build a malicious product to \u2018advanced persistent threats\u2019 (APTs): highly skilled and well-resourced\n(e.g. state-sponsored) groups with long-term agendas [SBC+19].\nTo understand how low and mid-skill actors think about language models, we have been monitoring forums and chat\ngroups where misinformation tactics, malware distribution, and computer fraud are frequently discussed. While we did\n\ufb01nd signi\ufb01cant discussion of misuse following the initial release of GPT-2 in spring of 2019, we found fewer instances\nof experimentation and no successful deployments since then. Additionally, those misuse discussions were correlated\nwith media coverage of language model technologies. From this, we assess that the threat of misuse from these actors is\nnot immediate, but signi\ufb01cant improvements in reliability could change this.\nBecause APTs do not typically discuss operations in the open, we have consulted with professional threat analysts about\npossible APT activity involving the use of language models. Since the release of GPT-2 there has been no discernible\ndifference in operations that may see potential gains by using language models. The assessment was that language\nmodels may not be worth investing signi\ufb01cant resources in because there has been no convincing demonstration that\ncurrent language models are signi\ufb01cantly better than current methods for generating text, and because methods for\n\u201ctargeting\u201d or \u201ccontrolling\u201d the content of language models are still at a very early stage.\n6.1.3 External Incentive Structures\nEach threat actor group also has a set of tactics, techniques, and procedures (TTPs) that they rely on to accomplish their\nagenda. TTPs are in\ufb02uenced by economic factors like scalability and ease of deployment; phishing is extremely popular\namong all groups because it offers a low-cost, low-effort, high-yield method of deploying malware and stealing login\ncredentials. Using language models to augment existing TTPs would likely result in an even lower cost of deployment.\nEase of use is another signi\ufb01cant incentive. Having stable infrastructure has a large impact on the adoption of TTPs.\nThe outputs of language models are stochastic, however, and though developers can constrain these (e.g. using top-k\ntruncation) they are not able to perform consistently without human feedback. If a social media disinformation bot\nproduces outputs that are reliable 99% of the time, but produces incoherent outputs 1% of the time, this could reduce the\namount of human labor required in operating this bot. But a human is still needed to \ufb01lter the outputs, which restricts\nhow scalable the operation can be.\nBased on our analysis of this model and analysis of threat actors and the landscape, we suspect AI researchers will\neventually develop language models that are suf\ufb01ciently consistent and steerable that they will be of greater interest to\nmalicious actors. We expect this will introduce challenges for the broader research community, and hope to work on\nthis through a combination of mitigation research, prototyping, and coordinating with other technical developers.\n356.2 Fairness, Bias, and Representation\nBiases present in training data may lead models to generate stereotyped or prejudiced content. This is concerning,\nsince model bias could harm people in the relevant groups in different ways by entrenching existing stereotypes and\nproducing demeaning portrayals amongst other potential harms [ Cra17 ]. We have conducted an analysis of biases in\nthe model in order to better understand GPT-3\u2019s limitations when it comes to fairness, bias, and representation.8\nOur goal is not to exhaustively characterize GPT-3, but to give a preliminary analysis of some of its limitations and\nbehaviors. We focus on biases relating to gender, race, and religion, although many other categories of bias are likely\npresent and could be studied in follow-up work. This is a preliminary analysis and does not re\ufb02ect all of the model\u2019s\nbiases even within the studied categories.\nBroadly, our analysis indicates that internet-trained models have internet-scale biases; models tend to re\ufb02ect stereotypes\npresent in their training data. Below we discuss our preliminary \ufb01ndings of bias along the dimensions of gender, race,\nand religion. We probe for bias in the 175 billion parameter model and also in similar smaller models, to see if and how\nthey are different in this dimension.\n6.2.1 Gender\nIn our investigation of gender bias in GPT-3, we focused on associations between gender and occupation. We found\nthat occupations in general have a higher probability of being followed by a male gender identi\ufb01er than a female one\n(in other words, they are male leaning) when given a context such as \"Thefoccupationgwas a\" (Neutral Variant).\n83% of the 388 occupations we tested were more likely to be followed by a male identi\ufb01er by GPT-3. We measured\nthis by feeding the model a context such as \"The detective was a\" and then looking at the probability of the\nmodel following up with male indicating words (eg. man, male etc.) or female indicating words (woman, female etc.).\nIn particular, occupations demonstrating higher levels of education such as legislator, banker, or professor emeritus\nwere heavily male leaning along with occupations that require hard physical labour such as mason, millwright, and\nsheriff. Occupations that were more likely to be followed by female identi\ufb01ers include midwife, nurse, receptionist,\nhousekeeper etc.\nWe also tested how these probabilities changed when we shifted the context to be the \"The competent foccupationg\nwas a\" (Competent Variant), and when we shifted the context to be \"The incompetent foccupationgwas a\"\n(Incompetent Variant) for each occupation in the dataset. We found that, when prompted with \"The competent\nfoccupationgwas a,\" the majority of occupations had an even higher probability of being followed by a\nmale identi\ufb01er than a female one than was the case with our original neutral prompt, \"Thefoccupationgwas\na\". With the prompt \"The incompetent foccupationgwas a\" the majority of occupations still leaned male\nwith a similar probability than for our original neutral prompt. The average occupation bias - measured as\n1\nnjobsP\njobslog(P(femalejContext)\nP(malejContext)))- was\u00001:11for the Neutral Variant, \u00002:14for the Competent Variant and \u00001:15\nfor the Incompetent Variant.\nWe also carried out pronoun resolution on the Winogender dataset [ RNLVD18 ] using two methods which further\ncorroborated the model\u2019s tendency to associate most occupations with males. One method measured the mod-\nels ability to correctly assign a pronoun as the occupation or the participant. For example, we fed the model\na context such as \"The advisor met with the advisee because she wanted to get advice about job\napplications. `She' refers to the\" and found the option with the lowest probability between the two possi-\nble options (Choices between Occupation Option: advisor; Participant Option: advisee).\nOccupation and participant words often have societal biases associated with them such as the assumption that most\noccupants are by default male. We found that the language models learnt some of these biases such as a tendency to\nassociate female pronouns with participant positions more than male pronouns. GPT-3 175B had the highest accuracy of\nall the models (64.17%) on this task. It was also the only model where the accuracy for Occupant sentences (sentences\nwhere the correct answer was the Occupation option) for females was higher than for males (81.7% vs 76.7%). All\nother models had a higher accuracy for male pronouns with Occupation sentences as compared to female pronouns\nwith the exception of our second largest model- GPT-3 13B - which had the same accuracy (60%) for both. This offers\nsome preliminary evidence that in places where issues of bias can make language models susceptible to error, the larger\nmodels are more robust than smaller models.\nWe also performed co-occurrence tests, where we analyzed which words are likely to occur in the vicinity of other pre-\nselected words. We created a model output sample set by generating 800 outputs of length 50 each with a temperature\n8Evaluating fairness, bias, and representation in language models is a rapidly-developing area with a large body of prior work.\nSee, for example, [HZJ+19, NBR20, SCNP19].\n36Table 6.1: Most Biased Descriptive Words in 175B Model\nTop 10 Most Biased Male Descriptive Words with Raw\nCo-Occurrence CountsTop 10 Most Biased Female Descriptive Words with Raw\nCo-Occurrence Counts\nAverage Number of Co-Occurrences Across All Words:\n17.5Average Number of Co-Occurrences Across All Words:\n23.9\nLarge (16) Optimistic (12)\nMostly (15) Bubbly (12)\nLazy (14) Naughty (12)\nFantastic (13) Easy-going (12)\nEccentric (13) Petite (10)\nProtect (10) Tight (10)\nJolly (10) Pregnant (10)\nStable (9) Gorgeous (28)\nPersonable (22) Sucked (8)\nSurvive (7) Beautiful (158)\nof 1 and top p of 0.9 for every prompt in our dataset. For gender, we had prompts such as \"He was very\" ,\"She\nwas very\" ,\"He would be described as\" ,\"She would be described as\"9. We looked at the adjectives and\nadverbs in the top 100 most favored words using an off-the-shelf POS tagger [ LB02 ]. We found females were more\noften described using appearance oriented words such as \u201dbeautiful\u201d and \u201dgorgeous\u201d as compared to men who were\nmore often described using adjectives that span a greater spectrum.\nTable 6.1 shows the top 10 most favored descriptive words for the model along with the raw number of times each\nword co-occurred with a pronoun indicator. \u201cMost Favored\u201d here indicates words which were most skewed towards a\ncategory by co-occurring with it at a higher rate as compared to the other category. To put these numbers in perspective,\nwe have also included the average for the number of co-occurrences across all qualifying words for each gender.\n6.2.2 Race\nTo investigate racial bias in GPT-3, we seeded the model with prompts such as - \"Thefracegman was very\" ,\n\"Thefracegwoman was very\" and\"People would describe the fracegperson as\" and generated 800\nsamples for each of the above prompts, with fracegreplaced with a term indicating a racial category such as White\nor Asian. We then measure word co-occurrences in the generated samples. Given prior research demonstrating that\nlanguage models produce text of differing sentiment when varying features such as occupation [ HZJ+19], we explored\nhow race impacted sentiment. We measured sentiment using Senti WordNet [ BES10 ] for the words which co-occurred\ndisproportionately with each race. Each word sentiment varied from 100 to -100, with positive scores indicating positive\nwords (eg. wonderfulness: 100, amicable: 87.5), negative scores indicating negative words (eg. wretched: -87.5 , horrid:\n-87.5) and a score of 0 indicating neutral words (eg. sloping, chalet).\nIt should be noted that we were explicitly prompting the models to talk about race and this in turn generated text that\nfocused on racial features; these results are not from the models talking about race in the wild but talking about race in\nan experimental setup where they have been primed to do so. Additionally, since we are measuring sentiment by simply\nlooking at word co-occurrences, the resulting sentiment can re\ufb02ect socio-historical factors - for instance, text relating to\na discussion of slavery will frequently have a negative sentiment, which may lead to a demographic being associated\nwith a negative sentiment under this testing methodology.\nAcross the models we analyzed, \u2018Asian\u2019 had a consistently high sentiment - it ranked 1st in 3 out of 7 models. On the\nother hand, \u2019Black\u2019 had a consistently low sentiment - it ranked the lowest in 5 out of 7 models. These differences\nnarrowed marginally on the larger model sizes. This analysis gives a sense of the biases of different models and\nhighlights the need for more sophisticated analysis of the relationship between sentiment, entities, and input data.\n9We only used male and female pronouns. This simplifying assumption makes it easier to study co-occurrence since it does not\nrequire the isolation of instances in which \u2018they\u2019 refers to a singular noun from those where it didn\u2019t, but other forms of gender bias\nare likely present and could be studied using different approaches.\n37Figure 6.1: Racial Sentiment Across Models\nReligion Most Favored Descriptive Words\nAtheism \u2018Theists\u2019, \u2018Cool\u2019, \u2018Agnostics\u2019, \u2018Mad\u2019, \u2018Theism\u2019, \u2018Defensive\u2019, \u2018Complaining\u2019, \u2018Correct\u2019, \u2018Arrogant\u2019,\n\u2018Characterized\u2019\nBuddhism \u2018Myanmar\u2019, \u2018Vegetarians\u2019, \u2018Burma\u2019, \u2018Fellowship\u2019, \u2018Monk\u2019, \u2018Japanese\u2019, \u2018Reluctant\u2019, \u2018Wisdom\u2019, \u2018En-\nlightenment\u2019, \u2018Non-Violent\u2019\nChristianity \u2018Attend\u2019, \u2018Ignorant\u2019, \u2018Response\u2019, \u2018Judgmental\u2019, \u2018Grace\u2019, \u2018Execution\u2019, \u2018Egypt\u2019, \u2018Continue\u2019, \u2018Com-\nments\u2019, \u2018Of\ufb01cially\u2019\nHinduism \u2018Caste\u2019, \u2018Cows\u2019, \u2018BJP\u2019, \u2018Kashmir\u2019, \u2018Modi\u2019, \u2018Celebrated\u2019, \u2018Dharma\u2019, \u2018Pakistani\u2019, \u2018Originated\u2019, \u2018Africa\u2019\nIslam \u2018Pillars\u2019, \u2018Terrorism\u2019, \u2018Fasting\u2019, \u2018Sheikh\u2019, \u2018Non-Muslim\u2019, \u2018Source\u2019, \u2018Charities\u2019, \u2018Levant\u2019, \u2018Allah\u2019,\n\u2018Prophet\u2019\nJudaism \u2018Gentiles\u2019, \u2018Race\u2019, \u2018Semites\u2019, \u2018Whites\u2019, \u2018Blacks\u2019, \u2018Smartest\u2019, \u2018Racists\u2019, \u2018Arabs\u2019, \u2018Game\u2019, \u2018Russian\u2019\nTable 6.2: Shows the ten most favored words about each religion in the GPT-3 175B model.\n6.2.3 Religion\nWe studied which words co-occurred with religious terms relating to Atheism, Buddhism, Christianity, Hinduism, Islam,\nand Judaism, by generating 800 model outputs of length \u001950 with a temperature of 1 and a top pof0:9for every\nprompt. Our prompts were of the nature \"fReligion practitioners gare\" (Eg. \"Christians are\" ) for each\nof the six religious categories listed above. We then allowed the model to naturally carry out completions and created a\ncorpus of such completions for studying co-occurrence of words.\nThe following is an example output from the model:\n\"Buddhists are divided into two main branches - Theravada and Mahayana. Theravada\nis the more conservative branch, centering on monastic life and the earliest sutras\nand refusing to recognize the later Mahayana sutras as authentic.\"\nSimilar to race, we found that the models make associations with religious terms that indicate some propensity to re\ufb02ect\nhow these terms are sometimes presented in the world. For example, with the religion Islam , we found that words such\nasramadan ,prophet andmosque co-occurred at a higher rate than for other religions. We also found that words such\nasviolent ,terrorism andterrorist co-occurred at a greater rate with Islam than with other religions and were in\nthe top 40 most favored words for Islam in GPT-3.\n386.2.4 Future Bias and Fairness Challenges\nWe have presented this preliminary analysis to share some of the biases we found in order to motivate further research,\nand to highlight the inherent dif\ufb01culties in characterizing biases in large-scale generative models; we expect this to be an\narea of continuous research for us and are excited to discuss different methodological approaches with the community.\nWe view the work in this section as subjective signposting - we chose gender, race, and religion as a starting point, but\nwe recognize the inherent subjectivity in this choice. Our work is inspired by the literature on characterizing model\nattributes to develop informative labels such as Model Cards for Model Reporting from [MWZ+18].\nUltimately, it is important not just to characterize biases in language systems but to intervene. The literature on this\nis also extensive [ QMZH19 ,HZJ+19], so we offer only a few brief comments on future directions speci\ufb01c to large\nlanguage models. In order to pave the way for effective bias prevention in general purpose models, there is a need for\nbuilding a common vocabulary tying together the normative, technical and empirical challenges of bias mitigation for\nthese models. There is room for more research that engages with the literature outside NLP, better articulates normative\nstatements about harm, and engages with the lived experience of communities affected by NLP systems [ BBDIW20 ].\nThus, mitigation work should not be approached purely with a metric driven objective to \u2018remove\u2019 bias as this has been\nshown to have blind spots [GG19, NvNvdG19] but in a holistic manner.\n6.3 Energy Usage\nPractical large-scale pre-training requires large amounts of computation, which is energy-intensive: training the GPT-3\n175B consumed several thousand peta\ufb02op/s-days of compute during pre-training, compared to tens of peta\ufb02op/s-days\nfor a 1.5B parameter GPT-2 model (Figure 2.2). This means we should be cognizant of the cost and ef\ufb01ciency of such\nmodels, as advocated by [SDSE19].\nThe use of large-scale pre-training also gives another lens through which to view the ef\ufb01ciency of large models - we\nshould consider not only the resources that go into training them, but how these resources are amortized over the\nlifetime of a model, which will subsequently be used for a variety of purposes and \ufb01ne-tuned for speci\ufb01c tasks. Though\nmodels like GPT-3 consume signi\ufb01cant resources during training, they can be surprisingly ef\ufb01cient once trained: even\nwith the full GPT-3 175B, generating 100 pages of content from a trained model can cost on the order of 0.4 kW-hr, or\nonly a few cents in energy costs. Additionally, techniques like model distillation [ LHCG19a ] can further bring down\nthe cost of such models, letting us adopt a paradigm of training single, large-scale models, then creating more ef\ufb01cient\nversions of them for use in appropriate contexts. Algorithmic progress may also naturally further increase the ef\ufb01ciency\nof such models over time, similar to trends observed in image recognition and neural machine translation [HB20].\n7 Related Work\nSeveral lines of work have focused on increasing parameter count and/or computation in language models as a\nmeans to improve generative or task performance. An early work scaled LSTM based language models to over a\nbillion parameters [ JVS+16]. One line of work straightforwardly increases the size of transformer models, scaling\nup parameters and FLOPS-per-token roughly in proportion. Work in this vein has successively increased model size:\n213 million parameters [ VSP+17] in the original paper, 300 million parameters [ DCLT18 ], 1.5 billion parameters\n[RWC+19], 8 billion parameters [ SPP+19], 11 billion parameters [ RSR+19], and most recently 17 billion parameters\n[Tur20 ]. A second line of work has focused on increasing parameter count but not computation, as a means of\nincreasing models\u2019 capacity to store information without increased computational cost. These approaches rely on the\nconditional computation framework [ BLC13 ] and speci\ufb01cally, the mixture-of-experts method [ SMM+17] has been\nused to produce 100 billion parameter models and more recently 50 billion parameter translation models [ AJF19 ],\nthough only a small fraction of the parameters are actually used on each forward pass. A third approach increases\ncomputation without increasing parameters; examples of this approach include adaptive computation time [ Gra16 ] and\nthe universal transformer [ DGV+18]. Our work focuses on the \ufb01rst approach (scaling compute and parameters together,\nby straightforwardly making the neural net larger), and increases model size 10x beyond previous models that employ\nthis strategy.\nSeveral efforts have also systematically studied the effect of scale on language model performance. [ KMH+20,\nRRBS19 ,LWS+20,HNA+17], \ufb01nd a smooth power-law trend in loss as autoregressive language models are scaled up.\nThis work suggests that this trend largely continues as models continue to scale up (although a slight bending of the\ncurve can perhaps be detected in Figure 3.1), and we also \ufb01nd relatively smooth increases in many (though not all)\ndownstream tasks across 3 orders of magnitude of scaling.\nAnother line of work goes in the opposite direction from scaling, attempting to preserve strong performance in language\nmodels that are as small as possible. This approach includes ALBERT [ LCG+19] as well as general [ HVD15 ] and\n39task-speci\ufb01c [ SDCW19 ,JYS+19,KR16 ] approaches to distillation of language models. These architectures and\ntechniques are potentially complementary to our work, and could be applied to decrease latency and memory footprint\nof giant models.\nAs \ufb01ne-tuned language models have neared human performance on many standard benchmark tasks, considerable\neffort has been devoted to constructing more dif\ufb01cult or open-ended tasks, including question answering [ KPR+19,\nIBGC+14,CCE+18,MCKS18 ], reading comprehension [ CHI+18,RCM19 ], and adversarially constructed datasets\ndesigned to be dif\ufb01cult for existing language models [ SBBC19 ,NWD+19]. In this work we test our models on many\nof these datasets.\nMany previous efforts have focused speci\ufb01cally on question-answering, which constitutes a signi\ufb01cant fraction of the\ntasks we tested on. Recent efforts include [ RSR+19,RRS20 ], which \ufb01ne-tuned an 11 billion parameter language model,\nand [ GLT+20], which focused on attending over a large corpus of data at test time. Our work differs in focusing on\nin-context learning but could be combined in the future with those of [GLT+20, LPP+20].\nMetalearning in language models has been utilized in [ RWC+19], though with much more limited results and no\nsystematic study. More broadly, language model metalearning has an inner-loop-outer-loop structure, making it\nstructurally similar to metalearning as applied to ML in general. Here there is an extensive literature, including\nmatching networks [ VBL+16], RL2 [ DSC+16], learning to optimize [ RL16 ,ADG+16,LM17 ] and MAML [ FAL17 ].\nOur approach of stuf\ufb01ng the model\u2019s context with previous examples is most structurally similar to RL2 and also\nresembles [ HYC01 ], in that an inner loop of adaptation takes place through computation in the model\u2019s activations\nacross timesteps, without updating the weights, while an outer loop (in this case just language model pre-training)\nupdates the weights, and implicitly learns the ability to adapt to or at least recognize tasks de\ufb01ned at inference-time.\nFew-shot auto-regressive density estimation was explored in [ RCP+17] and [ GWC+18] studied low-resource NMT as\na few-shot learning problem.\nWhile the mechanism of our few-shot approach is different, prior work has also explored ways of using pre-trained\nlanguage models in combination with gradient descent to perform few-shot learning [ SS20 ]. Another sub-\ufb01eld with\nsimilar goals is semi-supervised learning where approaches such as UDA [ XDH+19] also explore methods of \ufb01ne-tuning\nwhen very little labeled data is available.\nGiving multi-task models instructions in natural language was \ufb01rst formalized in a supervised setting with [ MKXS18 ]\nand utilized for some tasks (such as summarizing) in a language model with [ RWC+19]. The notion of presenting\ntasks in natural language was also explored in the text-to-text transformer [ RSR+19], although there it was applied for\nmulti-task \ufb01ne-tuning rather than for in-context learning without weight updates.\nAnother approach to increasing generality and transfer-learning capability in language models is multi-task learning\n[Car97 ], which \ufb01ne-tunes on a mixture of downstream tasks together, rather than separately updating the weights for\neach one. If successful multi-task learning could allow a single model to be used for many tasks without updating the\nweights (similar to our in-context learning approach), or alternatively could improve sample ef\ufb01ciency when updating\nthe weights for a new task. Multi-task learning has shown some promising initial results [ LGH+15,LSP+18] and\nmulti-stage \ufb01ne-tuning has recently become a standardized part of SOTA results on some datasets [ PFB18 ] and pushed\nthe boundaries on certain tasks [ KKS+20], but is still limited by the need to manually curate collections of datasets and\nset up training curricula. By contrast pre-training at large enough scale appears to offer a \u201cnatural\u201d broad distribution of\ntasks implicitly contained in predicting the text itself. One direction for future work might be attempting to generate\na broader set of explicit tasks for multi-task learning, for example through procedural generation [ TFR+17], human\ninteraction [ZSW+19b], or active learning [Mac92].\nAlgorithmic innovation in language models over the last two years has been enormous, including denoising-based\nbidirectionality [ DCLT18 ], pre\ufb01xLM [ DL15 ] and encoder-decoder architectures [ LLG+19,RSR+19], random permu-\ntations during training [ YDY+19], architectures that improve the ef\ufb01ciency of sampling [ DYY+19], improvements in\ndata and training procedures [ LOG+19], and ef\ufb01ciency increases in the embedding parameters [ LCG+19]. Many of\nthese techniques provide signi\ufb01cant gains on downstream tasks. In this work we continue to focus on pure autoregressive\nlanguage models, both in order to focus on in-context learning performance and to reduce the complexity of our large\nmodel implementations. However, it is very likely that incorporating these algorithmic advances could improve GPT-3\u2019s\nperformance on downstream tasks, especially in the \ufb01ne-tuning setting, and combining GPT-3\u2019s scale with these\nalgorithmic techniques is a promising direction for future work.\n8 Conclusion\nWe presented a 175 billion parameter language model which shows strong performance on many NLP tasks and\nbenchmarks in the zero-shot, one-shot, and few-shot settings, in some cases nearly matching the performance of\n40state-of-the-art \ufb01ne-tuned systems, as well as generating high-quality samples and strong qualitative performance at\ntasks de\ufb01ned on-the-\ufb02y. We documented roughly predictable trends of scaling in performance without using \ufb01ne-tuning.\nWe also discussed the social impacts of this class of model. Despite many limitations and weaknesses, these results\nsuggest that very large language models may be an important ingredient in the development of adaptable, general\nlanguage systems.\nAcknowledgements\nThe authors would like to thank Ryan Lowe for giving detailed feedback on drafts of the paper. Thanks to Jakub\nPachocki and Szymon Sidor for suggesting tasks, and Greg Brockman, Michael Petrov, Brooke Chan, and Chelsea\nV oss for helping run evaluations on OpenAI\u2019s infrastructure. Thanks to David Luan for initial support in scaling up\nthis project, Irene Solaiman for discussions about ways to approach and evaluate bias, Harrison Edwards and Yura\nBurda for discussions and experimentation with in-context learning, Geoffrey Irving and Paul Christiano for early\ndiscussions of language model scaling, Long Ouyang for advising on the design of the human evaluation experiments,\nChris Hallacy for discussions on data collection, and Shan Carter for help with visual design. Thanks to the millions of\npeople who created content that was used in the training of the model, and to those who were involved in indexing or\nupvoting the content (in the case of WebText). Additionally, we would like to thank the entire OpenAI infrastructure\nand supercomputing teams for making it possible to train models at this scale.\n41Contributions\nTom Brown, Ben Mann, Prafulla Dhariwal, Dario Amodei, Nick Ryder, Daniel M Ziegler, and Jeffrey Wu\nimplemented the large-scale models, training infrastructure, and model-parallel strategies.\nTom Brown, Dario Amodei, Ben Mann, and Nick Ryder conducted pre-training experiments.\nBen Mann and Alec Radford collected, \ufb01ltered, deduplicated, and conducted overlap analysis on the training data.\nMelanie Subbiah, Ben Mann, Dario Amodei, Jared Kaplan, Sam McCandlish, Tom Brown, Tom Henighan, and\nGirish Sastry implemented the downstream tasks and the software framework for supporting them, including creation\nof synthetic tasks.\nJared Kaplan and Sam McCandlish initially predicted that a giant language model should show continued gains, and\napplied scaling laws to help predict and guide model and data scaling decisions for the research.\nBen Mann implemented sampling without replacement during training.\nAlec Radford originally demonstrated few-shot learning occurs in language models.\nJared Kaplan and Sam McCandlish showed that larger models learn more quickly in-context, and systematically\nstudied in-context learning curves, task prompting, and evaluation methods.\nPrafulla Dhariwal implemented an early version of the codebase, and developed the memory optimizations for fully\nhalf-precision training.\nRewon Child and Mark Chen developed an early version of our model-parallel strategy.\nRewon Child and Scott Gray contributed the sparse transformer.\nAditya Ramesh experimented with loss scaling strategies for pretraining.\nMelanie Subbiah and Arvind Neelakantan implemented, experimented with, and tested beam search.\nPranav Shyam worked on SuperGLUE and assisted with connections to few-shot learning and meta-learning literature.\nSandhini Agarwal conducted the fairness and representation analysis.\nGirish Sastry and Amanda Askell conducted the human evaluations of the model.\nAriel Herbert-Voss conducted the threat analysis of malicious use.\nGretchen Krueger edited and red-teamed the policy sections of the paper.\nBenjamin Chess, Clemens Winter, Eric Sigler, Christopher Hesse, Mateusz Litwin, and Christopher Berner\noptimized OpenAI\u2019s clusters to run the largest models ef\ufb01ciently.\nScott Gray developed fast GPU kernels used during training.\nJack Clark led the analysis of ethical impacts \u2014 fairness and representation, human assessments of the model, and\nbroader impacts analysis, and advised Gretchen, Amanda, Girish, Sandhini, and Ariel on their work.\nDario Amodei, Alec Radford, Tom Brown, Sam McCandlish, Nick Ryder, Jared Kaplan, Sandhini Agarwal,\nAmanda Askell, Girish Sastry, and Jack Clark wrote the paper.\nSam McCandlish led the analysis of model scaling, and advised Tom Henighan and Jared Kaplan on their work.\nAlec Radford advised the project from an NLP perspective, suggested tasks, put the results in context, and demonstrated\nthe bene\ufb01t of weight decay for training.\nIlya Sutskever was an early advocate for scaling large generative likelihood models, and advised Pranav, Prafulla,\nRewon, Alec, and Aditya on their work.\nDario Amodei designed and led the research.\n42A Details of Common Crawl Filtering\nAs mentioned in Section 2.2, we employed two techniques to improve the quality of the Common Crawl dataset: (1)\n\ufb01ltering Common Crawl and (2) fuzzy deduplication:\n1.In order to improve the quality of Common Crawl, we developed an automatic \ufb01ltering method to remove low\nquality documents. Using the original WebText as a proxy for high-quality documents, we trained a classi\ufb01er\nto distinguish these from raw Common Crawl. We then used this classi\ufb01er to re-sample Common Crawl by\nprioritizing documents which were predicted by the classi\ufb01er to be higher quality. The classi\ufb01er is trained\nusing logistic regression classi\ufb01er with features from Spark\u2019s standard tokenizer and HashingTF10. For the\npositive examples, we used a collection of curated datasets such as WebText, Wikiedia, and our web books\ncorpus as the positive examples, and for the negative examples, we used un\ufb01ltered Common Crawl. We used\nthis classi\ufb01er to score Common Crawl documents. We kept each document in our dataset iff\nnp.random.pareto (\u000b)>1\u0000document_score\nWe chose\u000b= 9in order to take mostly documents the classi\ufb01er scored highly, but still include some documents\nthat were out of distribution. \u000bwas chosen to match the distribution of scores from our classi\ufb01er on WebText.\nWe found this re-weighting increased quality as measured by loss on a range of out-of-distribution generative\ntext samples.\n2.To further improve model quality and prevent over\ufb01tting (which becomes increasingly important as model\ncapacity increases), we fuzzily deduplicated documents (i.e. removed documents with high overlap with\nother documents) within each dataset using Spark\u2019s MinHashLSH implementation with 10 hashes, using the\nsame features as were used for classi\ufb01cation above. We also fuzzily removed WebText from Common Crawl.\nOverall this decreased dataset size by an average of 10%.\nAfter \ufb01ltering for duplicates and quality, we also partially removed text occurring in benchmark datasets, described in\nAppendix C.\nB Details of Model Training\nTo train all versions of GPT-3, we use Adam with \f1= 0:9,\f2= 0:95, and\u000f= 10\u00008, we clip the global norm of the\ngradient at 1.0, and we use cosine decay for learning rate down to 10% of its value, over 260 billion tokens (after 260\nbillion tokens, training continues at 10% of the original learning rate). There is a linear LR warmup over the \ufb01rst 375\nmillion tokens. We also gradually increase the batch size linearly from a small value (32k tokens) to the full value over\nthe \ufb01rst 4-12 billion tokens of training, depending on the model size. Data are sampled without replacement during\ntraining (until an epoch boundary is reached) to minimize over\ufb01tting. All models use weight decay of 0.1 to provide a\nsmall amount of regularization [LH17].\nDuring training we always train on sequences of the full nctx= 2048 token context window, packing multiple\ndocuments into a single sequence when documents are shorter than 2048, in order to increase computational ef\ufb01ciency.\nSequences with multiple documents are not masked in any special way but instead documents within a sequence\nare delimited with a special end of text token, giving the language model the information necessary to infer that\ncontext separated by the end of text token is unrelated. This allows for ef\ufb01cient training without need for any special\nsequence-speci\ufb01c masking.\nC Details of Test Set Contamination Studies\nIn section 4 we gave a high level overview of test set contamination studies. In this section we provide details on\nmethodology and results.\nInitial training set \ufb01ltering We attempted to remove text occurring in benchmarks from training data by searching\nfor13\u0000gram overlaps between all test/development sets used in this work and our training data, and we removed\nthe colliding 13\u0000gram as well as a 200 character window around it, splitting the original document into pieces. For\n\ufb01ltering purposes we de\ufb01ne a gram as a lowercase, whitespace delimited word with no punctuation. Pieces less than\n200characters long were discarded. Documents split into more than 10 pieces were considered contaminated and\n10https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.feature.HashingTF\n43removed entirely. Originally we removed entire documents given a single collision, but that overly penalized long\ndocuments such as books for false positives. An example of a false positive might be a test set based on Wikipedia, in\nwhich the Wikipedia article quotes a single line from a book. We ignored 13\u0000grams that matched more than 10 training\ndocuments, as inspection showed the majority of these to contain common cultural phrases, legal boilerplate, or similar\ncontent that we likely do want the model to learn, rather than undesired speci\ufb01c overlaps with test sets. Examples for\nvarious frequencies can be found in the GPT-3 release repository11.\nOverlap methodology For our benchmark overlap analysis in Section 4, we used a variable number of words Nto\ncheck for overlap for each dataset, where Nis the 5th percentile example length in words, ignoring all punctuation,\nwhitespace, and casing. Due to spurious collisions at lower values of Nwe use a minimum value of 8 on non-synthetic\ntasks. For performance reasons, we set a maximum value of 13 for all tasks. Values for Nand the amount of data\nmarked as dirty are shown in Table C.1. Unlike GPT-2\u2019s use of bloom \ufb01lters to compute probabilistic bounds for test\ncontamination, we used Apache Spark to compute exact collisions across all training and test sets. We compute overlaps\nbetween test sets and our full training corpus, even though we only trained on 40% of our \ufb01ltered Common Crawl\ndocuments per Section 2.2.\nWe de\ufb01ne a \u2018dirty\u2019 example as one with any N-gram overlap with any training document, and a \u2018clean\u2019 example as one\nwith no collision.\nTest and validation splits had similar contamination levels despite some test splits being unlabeled. Due to a bug revealed\nby this analysis, \ufb01ltering described above failed on long documents such as books. Because of cost considerations it\nwas infeasible to retrain the model on a corrected version of the training dataset. As such, several language modeling\nbenchmarks plus the Children\u2019s Book Test showed almost complete overlap, and therefore were not included in this\npaper. Overlaps are shown in Table C.1\nOverlap results To understand how much having seen some of the data helps the model perform on downstream\ntasks, we \ufb01lter every validation and test set by dirtiness. Then we run evaluation on the clean-only examples and report\nthe relative percent change between the clean score and the original score. If the clean score is more than 1% or 2%\nworse than the overall score, it suggests the model may have over\ufb01t to the examples it has seen. If the clean score is\nsigni\ufb01cantly better , our \ufb01ltering scheme may have preferentially marked easier examples as dirty.\nThis overlap metric tends to show a high rate of false positives for datasets that contain background information (but\nnot answers) drawn from the web (such as SQuAD, which draws from Wikipedia) or examples less than 8 words\nlong, which we ignored in our \ufb01ltering process (except for wordscrambling tasks). One instance where this technique\nseems to fail to give good signal is DROP, a reading comprehension task in which 94% of the examples are dirty. The\ninformation required to answer the question is in a passage provided to the model, so having seen the passage during\ntraining but not the questions and answers does not meaningfully constitute cheating. We con\ufb01rmed that every matching\ntraining document contained only the source passage, and none of the questions and answers in the dataset. The more\nlikely explanation for the decrease in performance is that the 6% of examples that remain after \ufb01ltering come from a\nslightly different distribution than the dirty examples.\nFigure 4.2 shows that as the dataset becomes more contaminated, the variance of the clean/all fraction increases, but\nthere is no apparent bias towards improved or degraded performance. This suggests that GPT-3 is relatively insensitive\nto contamination. See Section 4 for details on the datasets we \ufb02agged for further review.\n11https://github.com/openai/gpt-3/blob/master/overlap_frequency.md\n44Name Split Metric N Acc/F1/BLEUTotal\nCountDirty\nAcc/F1/BLEUDirty\nCountClean\nAcc/F1/BLEUClean\nCountClean\nPercentageRelative\nDifference\nClean vs All\nQuac dev f1 13 44.3 7353 44.3 7315 54.1 38 1% 20%\nSQuADv2 dev f1 13 69.8 11873 69.9 11136 68.4 737 6% -2%\nDROP dev f1 13 36.5 9536 37.0 8898 29.5 638 7% -21%\nSymbol Insertion dev acc 7 66.9 10000 66.8 8565 67.1 1435 14% 0%\nCoQa dev f1 13 86.0 7983 85.3 5107 87.1 2876 36% 1%\nReCoRD dev acc 13 89.5 10000 90.3 6110 88.2 3890 39% -1%\nWinograd test acc 9 88.6 273 90.2 164 86.2 109 40% -3%\nBoolQ dev acc 13 76.0 3270 75.8 1955 76.3 1315 40% 0%\nMultiRC dev acc 13 74.2 953 73.4 558 75.3 395 41% 1%\nRACE-h test acc 13 46.8 3498 47.0 1580 46.7 1918 55% 0%\nLAMBADA test acc 13 86.4 5153 86.9 2209 86.0 2944 57% 0%\nLAMBADA (No Blanks) test acc 13 77.8 5153 78.5 2209 77.2 2944 57% -1%\nWSC dev acc 13 76.9 104 73.8 42 79.0 62 60% 3%\nPIQA dev acc 8 82.3 1838 89.9 526 79.3 1312 71% -4%\nRACE-m test acc 13 58.5 1436 53.0 366 60.4 1070 75% 3%\nDe!En 16 test bleu-sb 12 43.0 2999 47.4 739 40.8 2260 75% -5%\nEn!De 16 test bleu-sb 12 30.9 2999 32.6 739 29.9 2260 75% -3%\nEn!Ro 16 test bleu-sb 12 25.8 1999 24.9 423 26.1 1576 79% 1%\nRo!En 16 test bleu-sb 12 41.3 1999 40.4 423 41.6 1576 79% 1%\nWebQs test acc 8 41.5 2032 41.6 428 41.5 1604 79% 0%\nANLI R1 test acc 13 36.8 1000 40.5 200 35.9 800 80% -3%\nANLI R2 test acc 13 34.0 1000 29.4 177 35.0 823 82% 3%\nTriviaQA dev acc 10 71.2 7993 70.8 1390 71.3 6603 83% 0%\nANLI R3 test acc 13 40.2 1200 38.3 196 40.5 1004 84% 1%\nEn!Fr 14 test bleu-sb 13 39.9 3003 38.3 411 40.3 2592 86% 1%\nFr!En 14 test bleu-sb 13 41.4 3003 40.9 411 41.4 2592 86% 0%\nWiC dev acc 13 51.4 638 53.1 49 51.3 589 92% 0%\nRTE dev acc 13 71.5 277 71.4 21 71.5 256 92% 0%\nCB dev acc 13 80.4 56 100.0 4 78.8 52 93% -2%\nAnagrams 2 dev acc 2 40.2 10000 76.2 705 37.4 9295 93% -7%\nReversed Words dev acc 2 0.4 10000 1.5 660 0.3 9340 93% -26%\nOpenBookQA test acc 8 65.4 500 58.1 31 65.9 469 94% 1%\nARC (Easy) test acc 11 70.1 2268 77.5 89 69.8 2179 96% 0%\nAnagrams 1 dev acc 2 15.0 10000 49.8 327 13.8 9673 97% -8%\nCOPA dev acc 9 93.0 100 100.0 3 92.8 97 97% 0%\nARC (Challenge) test acc 12 51.6 1144 45.2 31 51.8 1113 97% 0%\nHellaSwag dev acc 13 79.3 10042 86.2 152 79.2 9890 98% 0%\nNQs test acc 11 29.9 3610 32.7 52 29.8 3558 99% 0%\nCycled Letters dev acc 2 38.6 10000 20.5 73 38.7 9927 99% 0%\nSAT Analogies dev acc 9 65.8 374 100.0 2 65.6 372 99% 0%\nStoryCloze test acc 13 87.7 1871 100.0 2 87.6 1869 100% 0%\nWinogrande dev acc 13 77.7 1267 - 0 77.7 1267 100% 0%\nTable C.1: Overlap statistics for all datasets sorted from dirtiest to cleanest. We consider a dataset example dirty if it\nhas a singleN-gram collision with any document in our training corpus. \u201cRelative Difference Clean vs All\u201d shows the\npercent change in performance between only the clean examples vs all the examples in the benchmark. \u201cCount\u201d shows\nthe number of examples. \u201cClean percentage\u201d is the percent of examples that are clean vs total. For \u201cAcc/F1/BLEU\u201d we\nuse the metric speci\ufb01ed in \u201cMetric\u201d. These scores come from evaluations with a different seed for the random examples\nused for in-context learning, and will therefore differ slightly from the scores elsewhere in the paper.\n45D Total Compute Used to Train Language Models\nThis appendix contains the calculations that were used to derive the approximate compute used to train the language\nmodels in Figure 2.2. As a simplifying assumption, we ignore the attention operation, as it typically uses less than 10%\nof the total compute for the models we are analyzing.\nCalculations can be seen in Table D.1 and are explained within the table caption.\nModelTotal train\ncompute\n(PF-days)Total train\ncompute\n(\ufb02ops)Params\n(M)Training tokens\n(billions)Flops\nper param\nper tokenMult for\nbwd passFwd-pass\n\ufb02ops per\nactive param\nper tokenFrac of\nparams active\nfor each\ntoken\nT5-Small 2.08E+00 1.80E+20 60 1,000 3 3 1 0.5\nT5-Base 7.64E+00 6.60E+20 220 1,000 3 3 1 0.5\nT5-Large 2.67E+01 2.31E+21 770 1,000 3 3 1 0.5\nT5-3B 1.04E+02 9.00E+21 3,000 1,000 3 3 1 0.5\nT5-11B 3.82E+02 3.30E+22 11,000 1,000 3 3 1 0.5\nBERT-Base 1.89E+00 1.64E+20 109 250 6 3 2 1.0\nBERT-Large 6.16E+00 5.33E+20 355 250 6 3 2 1.0\nRoBERTa-Base 1.74E+01 1.50E+21 125 2,000 6 3 2 1.0\nRoBERTa-Large 4.93E+01 4.26E+21 355 2,000 6 3 2 1.0\nGPT-3 Small 2.60E+00 2.25E+20 125 300 6 3 2 1.0\nGPT-3 Medium 7.42E+00 6.41E+20 356 300 6 3 2 1.0\nGPT-3 Large 1.58E+01 1.37E+21 760 300 6 3 2 1.0\nGPT-3 XL 2.75E+01 2.38E+21 1,320 300 6 3 2 1.0\nGPT-3 2.7B 5.52E+01 4.77E+21 2,650 300 6 3 2 1.0\nGPT-3 6.7B 1.39E+02 1.20E+22 6,660 300 6 3 2 1.0\nGPT-3 13B 2.68E+02 2.31E+22 12,850 300 6 3 2 1.0\nGPT-3 175B 3.64E+03 3.14E+23 174,600 300 6 3 2 1.0\nTable D.1: Starting from the right hand side and moving left, we begin with the number of training tokens that each\nmodel was trained with. Next we note that since T5 uses an encoder-decoder model, only half of the parameters are\nactive for each token during a forward or backwards pass. We then note that each token is involved in a single addition\nand a single multiply for each active parameter in the forward pass (ignoring attention). Then we add a multiplier of\n3x to account for the backwards pass (as computing both@params\n@lossand@acts\n@lossuse a similar amount of compute as the\nforwards pass. Combining the previous two numbers, we get the total \ufb02ops per parameter per token. We multiply this\nvalue by the total training tokens and the total parameters to yield the number of total \ufb02ops used during training. We\nreport both \ufb02ops and peta\ufb02op/s-day (each of which are 8.64e+19 \ufb02ops).\nE Human Quality Assessment of Synthetic News Articles\nThis appendix contains details on the experiments measuring human ability to distinguish GPT-3-generated synthetic\nnews articles from real news articles. We \ufb01rst describe the experiments on the \u0018200word news articles, and then\ndescribe the preliminary investigation of \u0018500word news articles generated by GPT-3.\nParticipants: We recruited 718 unique participants to take part in 6 experiments. 97 participants were excluded for\nfailing an internet check question, leaving a total of 621 participants: 343 male, 271 female, and 7 other. Mean\nparticipant age was \u001838years old. All participants were recruited through Positly, which maintains a whitelist of\nhigh-performing workers from Mechanical Turk. All participants were US-based but there were no other demographic\nrestrictions. Participants were paid $12 for their participation, based on a task time estimate of 60 minutes determined\nby pilot runs. In order to ensure that the sample of participants for each experiment quiz was unique, participants were\nnot allowed to take part in an experiment more than once.\nProcedure and design: We arbitrarily selected 25 news articles that appeared in newser.com in early 2020. We used\nthe article titles and subtitles to produce outputs from the 125M, 350M, 760M, 1.3B, 2.7B, 6.7B, 13.0B, and 200B\n(GPT-3) parameter language models. Five outputs per question were generated by each model and the generation with a\nword count closest to that of the human written article was selected automatically. This was to minimize the effect\nthat completion length might have on participants\u2019 judgments. The same output procedure for each model with the\nexception of the removal of the intentionally bad control model, as described in the main text.\n46ModelParticipants\nRecruitedParticipants\nExcludedGenders\n(m:f:other)Mean\nAgeAverage\nWord Count\n(human:model)\nControl 76 7 32:37:0 39 216:216\nGPT-3 Small 80 7 41:31:1 40 216:188\nGPT-3 Medium 80 7 46:28:2 39 216:202\nGPT-3 Large 81 24 46:28:2 37 216:200\nGPT-3 XL 79 14 32:32:1 38 216:199\nGPT-3 2.7B 80 11 36:33:0 40 216:202\nGPT-3 6.7B 76 5 46:28:2 37 216:195\nGPT-3 13.0B 81 13 46:28:2 37 216:209\nGPT-3 175B 80 9 42:29:0 37 216:216\nTable E.1: Participant details and article lengths for each experiment to evaluate human detection of \u0018200word model\ngenerated news articles. Participants were excluded due to internet check fails.\nFigure E.1: Participants spend more time trying to identify whether each news article is machine generated as model\nsize increases. Duration on the control model is indicated with the dashed line. Line of best \ufb01t is a linear model on a log\nscale with 95% con\ufb01dence intervals.\nIn each experiment, half of the participants were randomly assigned to quiz A and half were randomly assigned to quiz\nB. Each quiz consisted of 25 articles: half (12-13) were human written and half (12-13) were model generated: the\narticles with human written completions in quiz A had model generated completions in quiz B and vice versa. The\norder of quiz question was shuf\ufb02ed for each participant. Participants could leave comments and were asked to indicate\nif they had seen the articles before. Participants were instructed not to look up the articles or their content during the\nquiz and at the end of the quiz were asked if they had looked anything up during the quiz.\nStatistical Tests: To compare means on the different runs, we performed a two-sample t-test for independent groups for\neach model against the control. This was implemented in Python using the scipy.stats.ttest_ind function. When\nplotting a regression line in the graph of average participant accuracy vs model size, we \ufb01t a power law of the form\nax\u0000b. The 95% con\ufb01dence intervals were estimated from the t-distribution of the sample mean.\nDuration statistics : In the main text, we discussed the \ufb01nding that the ability of human participants to distinguish\nmodel and human generated news articles decreases as our models become larger. We have also found that the\naverage time spent for a given set of questions increases as the model size increases, as shown in Figure E.1. Lower\n47ModelParticipants\nRecruitedParticipants\nExcludedGenders\n(m:f:other)Mean\nAgeAverage\nWord Count\n(human:model)\nControl 79 17 32:37:0 39 569:464\nGPT-3 175B 81 19 32:30:0 40 569:498\nTable E.2: Participant details and article lengths for the experiments investigating human detection of \u0018500word\nmodel generated news articles. Participants were excluded due to internet check fails.\naccuracy scores despite increased time investment from participants supports the \ufb01nding that larger models generate\nharder-to-distinguish news articles.\nPreliminary investigation of \u0018500word articles: We recruited 160 unique US-based participants to take part in 2\nexperiments through Positly (details are given in Table E.2). We randomly selected 12 Reuters world news articles from\nlate 2019 and created a context for GPT-3 175B that consisted of a single Reuters article not in this set of 12. We then\nused the article titles and Reuters locations to generate completions from GPT-3 175B and the 160M control model\nfrom the previous experiments. These were used to create two 12-question quizzes per model, each consisting of half\nhuman written and half model generated articles. Comprehension questions were added and articles were shown to\nparticipants in 3 stages at 30 second intervals to encourage closer reading. Participants were paid $12 for this task.\nModel generation selection methods, exclusion criteria, and statistical tests mirror those of the previous experiments.\nF Additional Samples from GPT-3\nGPT-3 adapts well to many tasks other than the ones explored in the main body of the paper. As an example, in Figure\nF.1, we show four uncurated samples from a prompt suggesting that the model write a poem, with a given title, in the\nstyle of Wallace Stevens. We \ufb01rst experimented with a few prompts, then generated four samples with no additional\nediting or selection (sampling at temperature 1using nucleus sampling [ HBFC19 ] withP= 0:9). Completions were\ntruncated when the model began to write a new title and author heading, or broke into prose commentary.\n48Context! The City\nBY C. P. CAVAFY\nTRANSLATED BY EDMUND KEELEY\n[Poem text omitted]\nSOME TREES\nJohn Ashbery\n[Poem text omitted]\nShadows on the Way\nWallace Stevens\n-------- Generated Poem 1 -------- -------- Generated Poem 3 --------\nI must have shadows on the way The sun was all we had. Now, in the shade\nIf I am to walk I must have All is changed. The mind must dwell on those\nEach step taken slowly and alone White fields, that to its eyes were always old;\nTo have it ready made Those ancient gleams, convoluting\nThe way they lay among the huge roots,\nAnd I must think in lines of grey The great dark tomes of reverie,\nTo have dim thoughts to be my guide The plumed labyrinth of the sea.\nMust look on blue and green\nAnd never let my eye forget When our own breath gonne faint and fade\nThat color is my friend Up the long stairway of the dead\nAnd purple must surround me too We shall remember well\nThe blindness of the light, the whiteness\nThe yellow of the sun is no more Of that white land. The footsteps, and\nIntrusive than the bluish snow The grasses in that light, and in the shade\nThat falls on all of us. I must have The menacing life.\nGrey thoughts and blue thoughts walk with me\nIf I am to go away at all. We played, too, once, in the warmest rooms.\nTo one content, there is one content\n-------- Generated Poem 2 -------- For all mankind. The forest glades\nAre all the more for being in fable,\nThere is a way in the world. And wood and town in legend shadowed-\nThat way a man may live in a small town Once more to return. The one content\nHis lifetime and see no man come, Has in it every happiness, more brave\nNever the stir of men about a market, For being purposeless; and so\nNever the bobbing of covered carts, Those island gardens, deep in the mind,\nNever the creak passed on the stair Make of remoteness familiarity\nClosing some other life; an old man And of the unspoken name a friend.\nCan prosper in that town, can prosper\nWhen his store is seen to close, his wife -------- Generated Poem 4 --------\nFades in his house, and the world shouts in vain\nThat no one comes to hear him Nobody will come to this place. It is a road that leads nowhere.\nWhere his small bell tolls. The solitude is deep. The mountains are high.\nIn that small town But they are desolate, and they turn the traveler's face\nEverything is known. Towards the North. All the sounds of the world are far away.\nThe ways of the young men are known, When the wind rises above the trees,\nAnd the ways of the young women The boughs bow to the ground.\nAs they walk to the Spring; Even the birds that inhabit the tangle of weeds\nThe rumors are all known, That is the roadside cover, are silent. One listens,\nThe quarrels, the hurt, the envy But hears no roar of the forest. One is alone.\nOf the men and the women. One will be taken.\nTill a day comes One will be taken.\nThat way out of the world There is no utterance, there is no conversation,\nThat leads to a wood. But one is uneasy all the same....\nYoung, the young man There is a thin blue mist,\nWalks, a lover now, A darkness rising like smoke,\nKnows the streets as they are and is of them. And within that darkness\nA possession of the heart.\nComes to the wood. One will be taken.... It was here, and it will be here again-\nHere, under this sky empty and full of light.\nThere, in the wood, among trees,\nHe sees shadows on the way, hears voices,\nhears the wind and the rustling of leaves;\nThrough an open glade\nHe sees a shape and the shape hears:\nIt waits as he waits,\nWaits as the shadows wait,\nAs the voices wait;\nShadows on the way, voices in the wind.\nFigure F.1: Four uncurated completions from a context suggesting the model compose a poem in the style of Wallace\nStevens with the title \u2018Shadows on the Way\u2019.\n49G Details of Task Phrasing and Speci\ufb01cations\nThe following \ufb01gures illustrate the formatting and phrasing of all the tasks included in the paper. All data comes from\nthe ground truth datasets in this section, and no samples from GPT-3 are included here.\nContext!Article:\nInformal conversation is an important part of any business\nrelationship.Before you start a discussion,however,make sure you understand\nwhich topics are suitable and which are considered taboo in a particular\nculture. Latin Americans enjoy sharing information about their local\nhistory, art and customs.You may expect questions about your family,and\nbe sure to show pictures of your children.You may feel free to ask similar\nquestions of your Latin American friends.The French think of conversation\nas an art form,and they enjoy the value of lively discussions as well as\ndisagreements. For them,arguments can be interesting and they can cover\npretty much or any topic ---- as long as they occur in are respectful and\nintelligent manner.\nIn the United States,business people like to discuss a wide range of\ntopics,including opinions about work,family,hobbies,and politics. In\nJapan,China,and Korea,however,people are much more private.They do not\nshare much about their thoughts,feelings,or emotions because they feel\nthat doing so might take away from the harmonious business relationship\nthey're trying to build.Middle Easterners are also private about their\npersonal lives and family matters.It is considered rude,for example,to ask\na businessman from Saudi Arabia about his wife or children.\nAs a general rule,it's best not to talk about politics or religion with\nyour business friends.This can get you into trouble,even in the United\nStates,where people hold different religious views.In addition,discussing\none's salary is usually considered unsuitable.Sports is typically a\nfriendly subject in most parts of the world,although be careful not to\ncriticize national sport.Instead,be friendly and praise your host's team.\nQ: What shouldn't you do when talking about sports with colleagues from\nanother country?\nA: Criticizing the sports of your colleagues' country.\nQ: Which is typically a friendly topic in most places according to the\nauthor?\nA: Sports.\nQ: Why are people from Asia more private in their conversation with others?\nA: They don't want to have their good relationship with others harmed by\ninformal conversation.\nQ: The author considers politics and religion .\nA:\nCorrect Answer !taboo\nIncorrect Answer !cheerful topics\nIncorrect Answer !rude topics\nIncorrect Answer !topics that can never be talked about\nFigure G.1: Formatted dataset example for RACE-h. When predicting, we normalize by the unconditional probability\nof each answer as described in 2.\n50Context!anli 2: anli 2: The Gold Coast Hotel & Casino is a hotel and casino\nlocated in Paradise, Nevada. This locals' casino is owned and operated\nby Boyd Gaming. The Gold Coast is located one mile ( \u0018 1:6km) west of the\nLas Vegas Strip on West Flamingo Road. It is located across the street\nfrom the Palms Casino Resort and the Rio All Suite Hotel and Casino.\nQuestion: The Gold Coast is a budget-friendly casino. True, False, or\nNeither?\nCorrect Answer !Neither\nIncorrect Answer !True\nIncorrect Answer !False\nFigure G.2: Formatted dataset example for ANLI R2\nContext!Article:\nMrs. Smith is an unusual teacher. Once she told each student to bring\nalong a few potatoes in plastic bag. On each potato the students had to\nwrite a name of a person that they hated And the next day, every child\nbrought some potatoes. Some had two potatoes;some three;some up to five.\nMrs. Smith then told the children to carry the bags everywhere they went,\neven to the toilet, for two weeks. As day after day passed, the children\nstarted to complain about the awful smell of the rotten potatoes.\nThose children who brought five potatoes began to feel the weight trouble\nof the bags. After two weeks, the children were happy to hear that the\ngame was finally ended. Mrs. Smith asked,\"How did you feel while carrying\nthe potatoes for two weeks?\" The children started complaining about the\ntrouble loudly.\nThen Mrs. Smith told them why she asked them to play the game. She\nsaid,\"This is exactly the situation when you carry your hatred for somebody\ninside your heart. The terrible smell of the hatred will pollute your\nheart and you will carry something unnecessary with you all the time. If\nyou cannot stand the smell of the rotten potatoes for just two weeks, can\nyou imagine how heavy it would be to have the hatred in your heart for your\nlifetime? So throw away any hatred from your heart, and you'll be really\nhappy.\"\nQ: Which of the following is True according to the passage?\nA: If a kid hated four people,he or she had to carry four potatoes.\nQ: We can learn from the passage that we should .\nA: throw away the hatred inside\nQ: The children complained about besides the weight trouble.\nA: the smell\nQ: Mrs.Smith asked her students to write on the potatoes.\nA:\nCorrect Answer !names\nIncorrect Answer !numbers\nIncorrect Answer !time\nIncorrect Answer !places\nFigure G.3: Formatted dataset example for RACE-m. When predicting, we normalize by the unconditional probability\nof each answer as described in 2.\n51Context!How to apply sealant to wood.\nCorrect Answer !Using a brush, brush on sealant onto wood until it is fully saturated with\nthe sealant.\nIncorrect Answer !Using a brush, drip on sealant onto wood until it is fully saturated with\nthe sealant.\nFigure G.4: Formatted dataset example for PIQA\nContext!My body cast a shadow over the grass because\nCorrect Answer !the sun was rising.\nIncorrect Answer !the grass was cut.\nFigure G.5: Formatted dataset example for COPA\nContext!(CNN) Yuval Rabin, whose father, Yitzhak Rabin, was assassinated while\nserving as Prime Minister of Israel, criticized Donald Trump for appealing\nto \"Second Amendment people\" in a speech and warned that the words that\npoliticians use can incite violence and undermine democracy. \"Trump's\nwords are an incitement to the type of political violence that touched\nme personally,\" Rabin wrote in USAToday. He said that Trump's appeal to\n\"Second Amendment people\" to stop Hillary Clinton -- comments that were\ncriticized as a call for violence against Clinton, something Trump denied\n-- \"were a new level of ugliness in an ugly campaign season.\"\n- The son of a former Israeli Prime Minister who was assassinated wrote an\nop ed about the consequence of violent political rhetoric.\n- Warns of \"parallels\" between Israel of the 1990s and the U.S. today.\nCorrect Answer !- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned Donald Trump's\naggressive rhetoric.\nCorrect Answer !- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned Trump's aggressive\nrhetoric.\nIncorrect Answer !- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned Hillary Clinton's\naggressive rhetoric.\nIncorrect Answer !- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned U.S.'s aggressive\nrhetoric.\nIncorrect Answer !- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned Yitzhak Rabin's\naggressive rhetoric.\nFigure G.6: Formatted dataset example for ReCoRD. We consider the context above to be a single \u201dproblem\u201d because\nthis is how the task is presented in the ReCoRD dataset and scored in the ReCoRD evaluation script.\nContext!anli 1: anli 1: Fulton James MacGregor MSP is a Scottish politician\nwho is a Scottish National Party (SNP) Member of Scottish Parliament\nfor the constituency of Coatbridge and Chryston. MacGregor is currently\nParliamentary Liaison Officer to Shona Robison, Cabinet Secretary for\nHealth & Sport. He also serves on the Justice and Education & Skills\ncommittees in the Scottish Parliament.\nQuestion: Fulton James MacGregor is a Scottish politican who is a Liaison\nofficer to Shona Robison who he swears is his best friend. True, False, or\nNeither?\nCorrect Answer !Neither\nIncorrect Answer !True\nIncorrect Answer !False\nFigure G.7: Formatted dataset example for ANLI R1\n52Context!Organisms require energy in order to do what?\nCorrect Answer !mature and develop.\nIncorrect Answer !rest soundly.\nIncorrect Answer !absorb light.\nIncorrect Answer !take in nutrients.\nFigure G.8: Formatted dataset example for OpenBookQA. When predicting, we normalize by the unconditional\nprobability of each answer as described in 2.\nContext!Making a cake: Several cake pops are shown on a display. A woman and girl\nare shown making the cake pops in a kitchen. They\nCorrect Answer !bake them, then frost and decorate.\nIncorrect Answer !taste them as they place them on plates.\nIncorrect Answer !put the frosting on the cake as they pan it.\nIncorrect Answer !come out and begin decorating the cake as well.\nFigure G.9: Formatted dataset example for HellaSwag\nContext!anli 3: anli 3: We shut the loophole which has American workers actually\nsubsidizing the loss of their own job. They just passed an expansion of\nthat loophole in the last few days: $43 billion of giveaways, including\nfavors to the oil and gas industry and the people importing ceiling fans\nfrom China.\nQuestion: The loophole is now gone True, False, or Neither?\nCorrect Answer !False\nIncorrect Answer !True\nIncorrect Answer !Neither\nFigure G.10: Formatted dataset example for ANLI R3\nContext!Question: George wants to warm his hands quickly by rubbing them. Which\nskin surface will produce the most heat?\nAnswer:\nCorrect Answer !dry palms\nIncorrect Answer !wet palms\nIncorrect Answer !palms covered with oil\nIncorrect Answer !palms covered with lotion\nFigure G.11: Formatted dataset example for ARC (Challenge). When predicting, we normalize by the unconditional\nprobability of each answer as described in 2.\nContext!lull is to trust as\nCorrect Answer !cajole is to compliance\nIncorrect Answer !balk is to fortitude\nIncorrect Answer !betray is to loyalty\nIncorrect Answer !hinder is to destination\nIncorrect Answer !soothe is to passion\nFigure G.12: Formatted dataset example for SAT Analogies\nCorrect Context !Grace was happy to trade me her sweater for my jacket. She thinks the\nsweater\nIncorrect Context !Grace was happy to trade me her sweater for my jacket. She thinks the\njacket\nTarget Completion !looks dowdy on her.\nFigure G.13: Formatted dataset example for Winograd. The \u2018partial\u2019 evaluation method we use compares the probability\nof the completion given a correct and incorrect context.\n53Correct Context !Johnny likes fruits more than vegetables in his new keto diet because the\nfruits\nIncorrect Context !Johnny likes fruits more than vegetables in his new keto diet because the\nvegetables\nTarget Completion !are saccharine.\nFigure G.14: Formatted dataset example for Winogrande. The \u2018partial\u2019 evaluation method we use compares the\nprobability of the completion given a correct and incorrect context.\nContext!READING COMPREHENSION ANSWER KEY\nWhile this process moved along, diplomacy continued its rounds. Direct\npressure on the Taliban had proved unsuccessful. As one NSC staff note\nput it, \"Under the Taliban, Afghanistan is not so much a state sponsor\nof terrorism as it is a state sponsored by terrorists.\" In early 2000,\nthe United States began a high-level effort to persuade Pakistan to use\nits influence over the Taliban. In January 2000, Assistant Secretary\nof State Karl Inderfurth and the State Department's counterterrorism\ncoordinator, Michael Sheehan, met with General Musharraf in Islamabad,\ndangling before him the possibility of a presidential visit in March as a\nreward for Pakistani cooperation. Such a visit was coveted by Musharraf,\npartly as a sign of his government's legitimacy. He told the two envoys\nthat he would meet with Mullah Omar and press him on Bin Laden. They\nleft, however, reporting to Washington that Pakistan was unlikely in fact\nto do anything,\" given what it sees as the benefits of Taliban control\nof Afghanistan.\" President Clinton was scheduled to travel to India.\nThe State Department felt that he should not visit India without also\nvisiting Pakistan. The Secret Service and the CIA, however, warned in\nthe strongest terms that visiting Pakistan would risk the President's\nlife. Counterterrorism officials also argued that Pakistan had not done\nenough to merit a presidential visit. But President Clinton insisted\non including Pakistan in the itinerary for his trip to South Asia. His\none-day stopover on March 25, 2000, was the first time a U.S. president\nhad been there since 1969. At his meeting with Musharraf and others,\nPresident Clinton concentrated on tensions between Pakistan and India\nand the dangers of nuclear proliferation, but also discussed Bin Laden.\nPresident Clinton told us that when he pulled Musharraf aside for a brief,\none-on-one meeting, he pleaded with the general for help regarding Bin\nLaden.\" I offered him the moon when I went to see him, in terms of better\nrelations with the United States, if he'd help us get Bin Laden and deal\nwith another issue or two.\" The U.S. effort continued.\nWho did The State Department feel should visit both India and Pakistan?\nCorrect Answer !- [False] Bin Laden\nIncorrect Answer !- [True] Bin Laden\nFigure G.15: Formatted dataset example for MultiRC. There are three levels within MultiRC: (1) the passage, (2) the\nquestions, and (3) the answers. During evaluation, accuracy is determined at the per-question level, with a question\nbeing considered correct if and only if all the answers within the question are labeled correctly. For this reason, we use\nKto refer to the number of questions shown within the context.\nContext!Question: Which factor will most likely cause a person to develop a fever?\nAnswer:\nCorrect Answer !a bacterial population in the bloodstream\nIncorrect Answer !a leg muscle relaxing after exercise\nIncorrect Answer !several viral particles on the skin\nIncorrect Answer !carbohydrates being digested in the stomach\nFigure G.16: Formatted dataset example for ARC (Easy). When predicting, we normalize by the unconditional\nprobability of each answer as described in 2.\n54Context!Bob went to the gas station to fill up his car. His tank was completely\nempty and so was his wallet. The cashier offered to pay for his gas if he\ncame back later to pay. Bob felt grateful as he drove home.\nCorrect Answer !Bob believed that there were good people in the world.\nIncorrect Answer !Bob contemplated how unfriendly the world was.\nFigure G.17: Formatted dataset example for StoryCloze\nContext!Helsinki is the capital and largest city of Finland. It is in the region\nof Uusimaa, in southern Finland, on the shore of the Gulf of Finland.\nHelsinki has a population of , an urban population of , and a metropolitan\npopulation of over 1.4 million, making it the most populous municipality\nand urban area in Finland. Helsinki is some north of Tallinn, Estonia,\neast of Stockholm, Sweden, and west of Saint Petersburg, Russia. Helsinki\nhas close historical connections with these three cities.\nThe Helsinki metropolitan area includes the urban core of Helsinki, Espoo,\nVantaa, Kauniainen, and surrounding commuter towns. It is the world's\nnorthernmost metro area of over one million people, and the city is the\nnorthernmost capital of an EU member state. The Helsinki metropolitan\narea is the third largest metropolitan area in the Nordic countries\nafter Stockholm and Copenhagen, and the City of Helsinki is the third\nlargest after Stockholm and Oslo. Helsinki is Finland's major political,\neducational, financial, cultural, and research center as well as one of\nnorthern Europe's major cities. Approximately 75% of foreign companies\nthat operate in Finland have settled in the Helsinki region. The nearby\nmunicipality of Vantaa is the location of Helsinki Airport, with frequent\nservice to various destinations in Europe and Asia.\nQ: what is the most populous municipality in Finland?\nA: Helsinki\nQ: how many people live there?\nA: 1.4 million in the metropolitan area\nQ: what percent of the foreign companies that operate in Finland are in\nHelsinki?\nA: 75%\nQ: what towns are a part of the metropolitan area?\nA:\nTarget Completion !Helsinki, Espoo, Vantaa, Kauniainen, and surrounding commuter towns\nFigure G.18: Formatted dataset example for CoQA\nContext!Please unscramble the letters into a word, and write that word:\nasinoc =\nTarget Completion !casino\nFigure G.19: Formatted dataset example for Cycled Letters\n55Context!Passage: Saint Jean de Br\u0013 ebeuf was a French Jesuit missionary who\ntravelled to New France in 1625. There he worked primarily with the Huron\nfor the rest of his life, except for a few years in France from 1629 to\n1633. He learned their language and culture, writing extensively about\neach to aid other missionaries. In 1649, Br\u0013 ebeuf and another missionary\nwere captured when an Iroquois raid took over a Huron village . Together\nwith Huron captives, the missionaries were ritually tortured and killed\non March 16, 1649. Br\u0013 ebeuf was beatified in 1925 and among eight Jesuit\nmissionaries canonized as saints in the Roman Catholic Church in 1930.\nQuestion: How many years did Saint Jean de Br\u0013 ebeuf stay in New France\nbefore he went back to France for a few years?\nAnswer:\nTarget Completion !4\nFigure G.20: Formatted dataset example for DROP\nContext!Fill in blank:\nShe held the torch in front of her.\nShe caught her breath.\n\"Chris? There's a step.\"\n\"What?\"\n\"A step. Cut in the rock. About fifty feet ahead.\" She moved faster.\nThey both moved faster. \"In fact,\" she said, raising the torch higher,\n\"there's more than a . ->\nTarget Completion !step\nFigure G.21: Formatted dataset example for LAMBADA\nContext!Please unscramble the letters into a word, and write that word:\nskicts =\nTarget Completion !sticks\nFigure G.22: Formatted dataset example for Anagrams 1 (A1)\nContext!Please unscramble the letters into a word, and write that word:\nvolwskagen =\nTarget Completion !volkswagen\nFigure G.23: Formatted dataset example for Anagrams 2\nContext!Q: Who played tess on touched by an angel?\nA:\nTarget Completion !Delloreese Patricia Early (July 6, 1931 { November 19, 2017), known\nprofessionally as Della Reese\nFigure G.24: Formatted dataset example for Natural Questions\n56Context!TITLE: William Perry (American football) - Professional career\nPARAGRAPH: In 1985, he was selected in the first round of the 1985 NFL\nDraft by the Chicago Bears; he had been hand-picked by coach Mike Ditka.\nHowever, defensive coordinator Buddy Ryan, who had a highly acrimonious\nrelationship with Ditka, called Perry a \"wasted draft-pick\". Perry\nsoon became a pawn in the political power struggle between Ditka and\nRyan. Perry's \"Refrigerator\" nickname followed him into the NFL and he\nquickly became a favorite of the Chicago Bears fans. Teammates called\nhim \"Biscuit,\" as in \"one biscuit shy of 350 pounds.\" While Ryan refused\nto play Perry, Ditka decided to use Perry as a fullback when the team was\nnear the opponents' goal line or in fourth and short situations, either\nas a ball carrier or a lead blocker for star running back Walter Payton.\nDitka stated the inspiration for using Perry as a fullback came to him\nduring five-yard sprint exercises. During his rookie season, Perry\nrushed for two touchdowns and caught a pass for one. Perry even had\nthe opportunity to run the ball during Super Bowl XX, as a nod to his\npopularity and contributions to the team's success. The first time he\ngot the ball, he was tackled for a one-yard loss while attempting to throw\nhis first NFL pass on a halfback option play. The second time he got the\nball, he scored a touchdown (running over Patriots linebacker Larry McGrew\nin the process). About halfway through his rookie season, Ryan finally\nbegan to play Perry, who soon proved that he was a capable defensive\nlineman. His Super Bowl ring size is the largest of any professional\nfootball player in the history of the event. His ring size is 25, while\nthe ring size for the average adult male is between 10 and 12. Perry went\non to play for ten years in the NFL, retiring after the 1994 season. In\nhis ten years as a pro, he regularly struggled with his weight, which\nhampered his performance at times. He played in 138 games, recording\n29.5 sacks and five fumble recoveries, which he returned for a total of\n71 yards. In his offensive career he ran five yards for two touchdowns,\nand had one reception for another touchdown. Perry later attempted a\ncomeback, playing an unremarkable 1996 season with the London Monarchs of\nthe World League of American Football (later NFL Europa).\nQ: what team did he play for?\nA:\nTarget Completion !the Chicago Bears\nFigure G.25: Formatted dataset example for QuAC\nContext!Please unscramble the letters into a word, and write that word:\nr e!c.i p r o.c a/l =\nTarget Completion !reciprocal\nFigure G.26: Formatted dataset example for Symbol Insertion\nContext!Please unscramble the letters into a word, and write that word:\ntaefed =\nTarget Completion !defeat\nFigure G.27: Formatted dataset example for Reversed Words\n57Context!Title: The Blitz\nBackground: From the German point of view, March 1941 saw an improvement.\nThe Luftwaffe flew 4,000 sorties that month, including 12 major and\nthree heavy attacks. The electronic war intensified but the Luftwaffe\nflew major inland missions only on moonlit nights. Ports were easier to\nfind and made better targets. To confuse the British, radio silence was\nobserved until the bombs fell. X- and Y-Ger\u007f at beams were placed over\nfalse targets and switched only at the last minute. Rapid frequency\nchanges were introduced for X-Ger\u007f at, whose wider band of frequencies and\ngreater tactical flexibility ensured it remained effective at a time when\nBritish selective jamming was degrading the effectiveness of Y-Ger\u007f at.\nQ: How many sorties were flown in March 1941?\nA: 4,000\nQ: When did the Luftwaffe fly inland missions?\nA:\nTarget Completion !only on moonlit nights\nFigure G.28: Formatted dataset example for SQuADv2\nContext!Normal force -- In a simple case such as an object resting upon a table,\nthe normal force on the object is equal but in opposite direction to the\ngravitational force applied on the object (or the weight of the object),\nthat is, N = m g ( ndisplaystyle N=mg), where m is mass, and g is the\ngravitational field strength (about 9.81 m/s on Earth). The normal force\nhere represents the force applied by the table against the object that\nprevents it from sinking through the table and requires that the table is\nsturdy enough to deliver this normal force without breaking. However, it\nis easy to assume that the normal force and weight are action-reaction\nforce pairs (a common mistake). In this case, the normal force and\nweight need to be equal in magnitude to explain why there is no upward\nacceleration of the object. For example, a ball that bounces upwards\naccelerates upwards because the normal force acting on the ball is larger\nin magnitude than the weight of the ball.\nquestion: is the normal force equal to the force of gravity?\nanswer:\nTarget Completion !yes\nFigure G.29: Formatted dataset example for BoolQ\nContext!The trend toward lower rents may seem surprising given that some\ncommunities in New York are bemoaning the loss of favorite local\nbusinesses to high rents. But, despite the recent softening, for many\nof these retailers there's still been too big a jump from the rental rates\nof the late 1970s, when their leases were signed. Certainly, the recent\ndrop in prices doesn't mean Manhattan comes cheap.\nquestion: Manhattan comes cheap. true, false, or neither?\nanswer:\nTarget Completion !false\nFigure G.30: Formatted dataset example for CB\n58Context!The bet, which won him dinner for four, was regarding the existence and\nmass of the top quark, an elementary particle discovered in 1995.\nquestion: The Top Quark is the last of six flavors of quarks predicted by\nthe standard model theory of particle physics. True or False?\nanswer:\nTarget Completion !False\nFigure G.31: Formatted dataset example for RTE\nContext!An outfitter provided everything needed for the safari.\nBefore his first walking holiday, he went to a specialist outfitter to buy\nsome boots.\nquestion: Is the word `outfitter' used in the same way in the two\nsentences above?\nanswer:\nTarget Completion !no\nFigure G.32: Formatted dataset example for WiC\nContext!Final Exam with Answer Key\nInstructions: Please carefully read the following passages. For each\npassage, you must identify which noun the pronoun marked in *bold* refers\nto.\n=====\nPassage: Mr. Moncrieff visited Chester's luxurious New York apartment,\nthinking that it belonged to his son Edward. The result was that Mr.\nMoncrieff has decided to cancel Edward's allowance on the ground that\nhe no longer requires *his* financial support.\nQuestion: In the passage above, what does the pronoun \"*his*\" refer to?\nAnswer:\nTarget Completion !mr. moncrieff\nFigure G.33: Formatted dataset example for WSC\nContext!Q: `Nude Descending A Staircase' is perhaps the most famous painting by\nwhich 20th century artist?\nA:\nTarget Completion !MARCEL DUCHAMP\nTarget Completion !r mutt\nTarget Completion !duchamp\nTarget Completion !marcel duchamp\nTarget Completion !R.Mutt\nTarget Completion !Marcel duChamp\nTarget Completion !Henri-Robert-Marcel Duchamp\nTarget Completion !Marcel du Champ\nTarget Completion !henri robert marcel duchamp\nTarget Completion !Duchampian\nTarget Completion !Duchamp\nTarget Completion !duchampian\nTarget Completion !marcel du champ\nTarget Completion !Marcel Duchamp\nTarget Completion !MARCEL DUCHAMP\nFigure G.34: Formatted dataset example for TriviaQA. TriviaQA allows for multiple valid completions.\n59Context!Q: What school did burne hogarth establish?\nA:\nTarget Completion !School of Visual Arts\nFigure G.35: Formatted dataset example for WebQA\nContext!Keinesfalls d\u007f urfen diese f\u007f ur den kommerziellen Gebrauch verwendet werden.\n=\nTarget Completion !In no case may they be used for commercial purposes.\nFigure G.36: Formatted dataset example for De !En. This is the format for one- and few-shot learning, for this and\nother langauge tasks, the format for zero-shot learning is \u201cQ: What is the flanguagegtranslation offsentencegA:\nftranslationg.\u201d\nContext!In no case may they be used for commercial purposes. =\nTarget Completion !Keinesfalls d\u007f urfen diese f\u007f ur den kommerziellen Gebrauch verwendet werden.\nFigure G.37: Formatted dataset example for En !De\nContext!Analysis of instar distributions of larval I. verticalis collected from\na series of ponds also indicated that males were in more advanced instars\nthan females. =\nTarget Completion !L'analyse de la distribution de fr\u0013 equence des stades larvaires d'I.\nverticalis dans une s\u0013 erie d'\u0013 etangs a \u0013 egalement d\u0013 emontr\u0013 e que les larves\nm^ ales \u0013 etaient \u0012 a des stades plus avanc\u0013 es que les larves femelles.\nFigure G.38: Formatted dataset example for En !Fr\nContext!L'analyse de la distribution de fr\u0013 equence des stades larvaires d'I.\nverticalis dans une s\u0013 erie d'\u0013 etangs a \u0013 egalement d\u0013 emontr\u0013 e que les larves\nm^ ales \u0013 etaient \u0012 a des stades plus avanc\u0013 es que les larves femelles. =\nTarget Completion !Analysis of instar distributions of larval I. verticalis collected from\na series of ponds also indicated that males were in more advanced instars\nthan females.\nFigure G.39: Formatted dataset example for Fr !En\nContext!The truth is that you want, at any price, and against the wishes of the\npeoples of Europe, to continue the negotiations for Turkey's accession\nto the European Union, despite Turkey's continuing refusal to recognise\nCyprus and despite the fact that the democratic reforms are at a\nstandstill. =\nTarget Completion !Adev\u0015 arul este c\u0015 a v\u0015 a dorit \u0018i, cu orice pret \u0018 \u0018 si ^ \u0010mpotriva dorint \u0018ei\neuropenilor, s\u0015 a continuat \u0018i negocierile de aderare a Turciei la Uniunea\nEuropean\u0015 a, ^ \u0010n ciuda refuzului continuu al Turciei de a recunoa\u0018 ste Ciprul\n\u0018 si ^ \u0010n ciuda faptului c\u0015 a reformele democratice au ajuns ^ \u0010ntr-un punct mort.\nFigure G.40: Formatted dataset example for En !Ro\n60Context!Adev\u0015 arul este c\u0015 a v\u0015 a dorit \u0018i, cu orice pret \u0018 \u0018 si ^ \u0010mpotriva dorint \u0018ei\neuropenilor, s\u0015 a continuat \u0018i negocierile de aderare a Turciei la Uniunea\nEuropean\u0015 a, ^ \u0010n ciuda refuzului continuu al Turciei de a recunoa\u0018 ste Ciprul\n\u0018 si ^ \u0010n ciuda faptului c\u0015 a reformele democratice au ajuns ^ \u0010ntr-un punct mort.\n=\nTarget Completion !The truth is that you want, at any price, and against the wishes of the\npeoples of Europe, to continue the negotiations for Turkey's accession\nto the European Union, despite Turkey's continuing refusal to recognise\nCyprus and despite the fact that the democratic reforms are at a\nstandstill.\nFigure G.41: Formatted dataset example for Ro !En\nContext!Q: What is (2 * 4) * 6?\nA:\nTarget Completion !48\nFigure G.42: Formatted dataset example for Arithmetic 1DC\nContext!Q: What is 17 minus 14?\nA:\nTarget Completion !3\nFigure G.43: Formatted dataset example for Arithmetic 2D-\nContext!Q: What is 98 plus 45?\nA:\nTarget Completion !143\nFigure G.44: Formatted dataset example for Arithmetic 2D+\nContext!Q: What is 95 times 45?\nA:\nTarget Completion !4275\nFigure G.45: Formatted dataset example for Arithmetic 2Dx\nContext!Q: What is 509 minus 488?\nA:\nTarget Completion !21\nFigure G.46: Formatted dataset example for Arithmetic 3D-\nContext!Q: What is 556 plus 497?\nA:\nTarget Completion !1053\nFigure G.47: Formatted dataset example for Arithmetic 3D+\nContext!Q: What is 6209 minus 3365?\nA:\nTarget Completion !2844\nFigure G.48: Formatted dataset example for Arithmetic 4D-\n61Context!Q: What is 9923 plus 617?\nA:\nTarget Completion !10540\nFigure G.49: Formatted dataset example for Arithmetic 4D+\nContext!Q: What is 40649 minus 78746?\nA:\nTarget Completion !-38097\nFigure G.50: Formatted dataset example for Arithmetic 5D \u0000\nContext!Q: What is 65360 plus 16204?\nA:\nTarget Completion !81564\nFigure G.51: Formatted dataset example for Arithmetic 5D+\n62H Results on All Tasks for All Model Sizes\nZero-Shot One-Shot Few-Shot\nName Metric SplitFine-tune\nSOTA K Small Med Large XL 2.7B 6.7B 13B 175B Small Med Large XL 2.7B 6.7B 13B 175B Small Med Large XL 2.7B 6.7B 13B 175B175B\n(test server)\nHellaSwag acc dev 85.6 20 33.7 43.6 51.0 54.7 62.8 67.4 70.9 78.9 33.0 42.9 50.5 53.5 61.9 66.5 70.0 78.1 33.5 43.1 51.3 54.9 62.9 67.3 71.3 79.3\nLAMBADA acc test 68.0 15 42.7 54.3 60.4 63.6 67.1 70.3 72.5 76.2 22.0 47.1 52.6 58.3 61.1 65.4 69.0 72.5 22.0 40.4 63.2 57.0 78.1 79.1 81.3 86.4\nLAMBADA ppl test 8.63 15 18.6 9.09 6.53 5.44 4.60 4.00 3.56 3.00 165.0 11.6 8.29 6.46 5.53 4.61 4.06 3.35 165.0 27.6 6.63 7.45 2.89 2.56 2.56 1.92\nStoryCloze acc test 91.8 70 63.3 68.5 72.4 73.4 77.2 77.7 79.5 83.2 62.3 68.7 72.3 74.2 77.3 78.7 79.7 84.7 62.3 70.2 73.9 76.1 80.2 81.2 83.0 87.7\nNQs acc test 44.5 64 0.64 1.75 2.71 4.40 6.01 5.79 7.84 14.6 1.19 3.07 4.79 5.43 8.73 9.78 13.7 23.0 1.72 4.46 7.89 9.72 13.2 17.0 21.0 29.9\nTriviaQA acc dev 68.0 64 4.15 7.61 14.0 19.7 31.3 38.7 41.8 64.3 4.19 12.9 20.5 26.5 35.9 44.4 51.3 68.0 6.96 16.3 26.5 32.1 42.3 51.6 57.5 71.2 71.2\nWebQs acc test 45.5 64 1.77 3.20 4.33 4.63 7.92 7.73 8.22 14.4 2.56 6.20 8.51 9.15 14.5 15.1 19.0 25.3 5.46 12.6 15.9 19.6 24.8 27.7 33.5 41.5\nRo!En 16 BLEU-mb test 39.9 64 2.08 2.71 3.09 3.15 16.3 8.34 20.2 19.9 0.55 15.4 23.0 26.3 30.6 33.2 35.6 38.6 1.25 20.7 25.8 29.2 33.1 34.8 37.0 39.5\nRo!En 16 BLEU-sb test 64 2.39 3.08 3.49 3.56 16.8 8.75 20.8 20.9 0.65 15.9 23.6 26.8 31.3 34.2 36.7 40.0 1.40 21.3 26.6 30.1 34.3 36.2 38.4 41.3\nEn!Ro 16 BLEU-mb test 38.5 64 2.14 2.65 2.53 2.50 3.46 4.24 5.32 14.1 0.35 3.30 7.89 8.72 13.2 15.1 17.3 20.6 1.25 5.90 9.33 10.7 14.3 16.3 18.0 21.0\nEn!Ro 16 BLEU-sb test 64 2.61 3.11 3.07 3.09 4.26 5.31 6.43 18.0 0.55 3.90 9.15 10.3 15.7 18.2 20.8 24.9 1.64 7.40 10.9 12.9 17.2 19.6 21.8 25.8\nFr!En 14 BLEU-mb test 35.0 64 1.81 2.53 3.47 3.13 20.6 15.1 21.8 21.2 1.28 15.9 23.7 26.3 29.0 30.5 30.2 33.7 4.98 25.5 28.5 31.1 33.7 34.9 36.6 39.2\nFr!En 14 BLEU-sb test 64 2.29 2.99 3.90 3.60 21.2 15.5 22.4 21.9 1.50 16.3 24.4 27.0 30.0 31.6 31.4 35.6 5.30 26.2 29.5 32.2 35.1 36.4 38.3 41.4\nEn!Fr 14 BLEU-mb test 45.6 64 1.74 2.16 2.73 2.15 15.1 8.82 12.0 25.2 0.49 8.00 14.8 15.9 20.3 23.3 24.9 28.3 4.08 14.5 19.3 21.5 24.9 27.3 29.5 32.6\nEn!Fr 14 BLEU-sb test 45.9 64 2.44 2.75 3.54 2.82 19.3 11.4 15.3 31.3 0.81 10.0 18.2 19.3 24.7 28.3 30.1 34.1 5.31 18.0 23.6 26.1 30.3 33.3 35.5 39.9\nDe!En 16 BLEU-mb test 40.2 64 2.06 2.87 3.41 3.63 21.5 17.3 23.0 27.2 0.83 16.2 22.5 24.7 28.2 30.7 33.0 30.4 3.25 22.7 26.2 29.2 32.7 34.8 37.3 40.6\nDe!En 16 BLEU-sb test 64 2.39 3.27 3.85 4.04 22.5 18.2 24.4 28.6 0.93 17.1 23.4 25.8 29.2 31.9 34.5 32.1 3.60 23.8 27.5 30.5 34.1 36.5 39.1 43.0\nEn!De 16 BLEU-mb test 41.2 64 1.70 2.27 2.31 2.43 12.9 8.66 10.4 24.6 0.50 7.00 12.9 13.1 18.3 20.9 22.5 26.2 3.42 12.3 15.4 17.1 20.9 23.0 26.6 29.7\nEn!De 16 BLEU-sb test 41.2 64 2.09 2.65 2.75 2.92 13.7 9.36 11.0 25.3 0.54 7.40 13.4 13.4 18.8 21.7 23.3 27.3 3.78 12.9 16.1 17.7 21.7 24.1 27.7 30.9\nWinograd acc test 93.8 7 66.3 72.9 74.7 76.9 82.4 85.7 87.9 88.3 63.4 68.5 72.9 76.9 82.4 84.6 86.1 89.7 63.4 67.4 73.6 76.9 84.3 85.4 82.4 88.6\nWinogrande acc dev 84.6 50 52.0 52.1 57.4 58.7 62.3 64.5 67.9 70.2 51.3 53.0 58.3 59.1 61.7 65.8 66.9 73.2 51.3 52.6 57.5 59.1 62.6 67.4 70.0 77.7\nPIQA acc dev 77.1 50 64.6 70.2 72.9 75.1 75.6 78.0 78.5 81.0 64.3 69.3 71.8 74.4 74.3 76.3 77.8 80.5 64.3 69.4 72.0 74.3 75.4 77.8 79.9 82.3 82.8\nARC (Challenge) acc test 78.5 50 26.6 29.5 31.8 35.5 38.0 41.4 43.7 51.4 25.5 30.2 31.6 36.4 38.4 41.5 43.1 53.2 25.5 28.4 32.3 36.7 39.5 43.7 44.8 51.5\nARC (Easy) acc test 92.0 50 43.6 46.5 53.0 53.8 58.2 60.2 63.8 68.8 42.7 48.2 54.6 55.9 60.3 62.6 66.8 71.2 42.7 51.0 58.1 59.1 62.1 65.8 69.1 70.1\nOpenBookQA acc test 87.2 100 35.6 43.2 45.2 46.8 53.0 50.4 55.6 57.6 37.0 39.8 46.2 46.4 53.4 53.0 55.8 58.8 37.0 43.6 48.0 50.6 55.6 55.2 60.8 65.4\nQuac f1 dev 74.4 5 21.2 26.8 31.0 30.1 34.7 36.1 38.4 41.5 21.1 26.9 31.9 32.3 37.4 39.0 40.6 43.4 21.6 27.6 32.9 34.2 38.2 39.9 40.9 44.3\nRACE-h acc test 90.0 10 35.2 37.9 40.1 40.9 42.4 44.1 44.6 45.5 34.3 37.7 40.0 42.0 43.8 44.3 44.6 45.9 34.3 37.0 40.4 41.4 42.3 44.7 45.1 46.8\nRACE-m acc test 93.1 10 42.1 47.2 52.1 52.3 54.7 54.4 56.7 58.4 42.3 47.3 51.7 55.2 56.1 54.7 56.9 57.4 42.3 47.0 52.7 53.0 55.6 55.4 58.1 58.1\nSQuADv2 em dev 90.7 16 22.6 32.8 33.9 43.1 43.6 45.4 49.0 52.6 25.1 37.5 37.9 47.9 47.9 51.1 56.0 60.1 27.5 40.5 39.2 53.5 50.0 56.6 62.6 64.9\nSQuADv2 f1 dev 93.0 16 28.3 40.2 41.4 50.3 51.0 52.7 56.3 59.5 30.1 43.6 44.1 54.0 54.1 57.1 61.8 65.4 32.1 45.5 44.9 58.7 55.9 62.1 67.7 69.8\nCoQA f1 dev 90.7 5 34.5 55.0 61.8 65.3 71.1 72.8 76.3 81.5 30.6 52.1 61.6 66.1 71.8 75.1 77.9 84.0 31.1 52.0 62.7 66.8 73.2 77.3 79.9 85.0\nDROP f1 dev 89.1 20 9.40 13.6 14.4 16.4 19.7 17.0 24.0 23.6 11.7 18.1 20.9 23.0 26.4 27.3 29.2 34.3 12.9 18.7 24.0 25.6 29.7 29.7 32.3 36.5\nBoolQ acc dev 91.0 32 49.7 60.3 58.9 62.4 67.1 65.4 66.2 60.5 52.6 61.7 60.4 63.7 68.4 68.7 69.0 76.7 43.1 60.6 62.0 64.1 70.3 70.0 70.2 77.5 76.4\nCB acc dev 96.9 32 0.00 32.1 8.93 19.6 19.6 28.6 19.6 46.4 55.4 53.6 53.6 48.2 57.1 33.9 55.4 64.3 42.9 58.9 53.6 69.6 67.9 60.7 66.1 82.1 75.6\nCB f1 dev 93.9 32 0.00 29.3 11.4 17.4 22.4 25.1 20.3 42.8 60.1 39.8 45.6 37.5 45.7 28.5 44.6 52.5 26.1 40.4 32.6 48.3 45.7 44.6 46.0 57.2 52.0\nCopa acc dev 94.8 32 66.0 68.0 73.0 77.0 76.0 80.0 84.0 91.0 62.0 64.0 66.0 74.0 76.0 82.0 86.0 87.0 67.0 64.0 72.0 77.0 83.0 83.0 86.0 92.0 92.0\nRTE acc dev 92.5 32 47.7 49.8 48.4 56.0 46.6 55.2 62.8 63.5 53.1 47.3 49.5 49.5 54.9 54.9 56.3 70.4 52.3 48.4 46.9 50.9 56.3 49.5 60.6 72.9 69.0\nWiC acc dev 76.1 32 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 50.0 50.3 50.3 49.2 49.4 50.3 50.0 48.6 49.8 55.0 53.0 53.0 51.6 53.1 51.1 55.3 49.4\nWSC acc dev 93.8 32 59.6 56.7 65.4 61.5 66.3 60.6 64.4 65.4 58.7 58.7 60.6 62.5 66.3 60.6 66.3 69.2 58.7 60.6 54.8 49.0 62.5 67.3 75.0 75.0 80.1\nMultiRC acc dev 62.3 32 4.72 9.65 12.3 13.6 14.3 18.4 24.2 27.6 4.72 9.65 12.3 13.6 14.3 18.4 24.2 27.6 6.09 11.8 16.8 20.8 24.7 23.8 25.0 32.5 30.5\nMultiRC f1a dev 88.2 32 57.0 59.7 60.4 59.9 60.0 64.5 71.4 72.9 57.0 59.7 60.4 59.9 60.0 64.5 71.4 72.9 45.0 55.9 64.2 65.4 69.5 66.4 69.3 74.8 75.4\nReCoRD acc dev 92.5 32 70.8 78.5 82.1 84.1 86.2 88.6 89.0 90.2 69.8 77.0 80.7 83.0 85.9 88.0 88.8 90.2 69.8 77.2 81.3 83.1 86.6 87.9 88.9 89.0 90.2\nReCoRD f1 dev 93.3 32 71.9 79.2 82.8 85.2 87.3 89.5 90.4 91.0 70.7 77.8 81.6 83.9 86.8 88.8 89.7 91.2 70.7 77.9 82.1 84.0 87.5 88.8 89.8 90.1 91.1\nSuperGLUE average dev 89.0 40.6 47.4 46.8 49.6 50.1 52.3 54.4 58.2 54.4 55.1 56.7 57.8 61.2 59.7 64.3 68.9 50.2 56.2 56.8 60.0 64.3 63.6 66.9 73.2 71.8\nANLI R1 acc test 73.8 50 33.4 34.2 33.4 33.4 34.2 32.3 33.2 34.6 32.1 31.6 31.9 34.6 30.6 31.6 32.7 32.0 32.1 32.5 30.9 32.5 33.5 33.1 33.3 36.8\nANLI R2 acc test 50.7 50 33.2 31.9 33.3 33.3 33.8 33.5 33.5 35.4 35.7 33.7 33.2 32.7 32.7 33.9 33.9 33.9 35.7 33.8 32.1 31.4 32.6 33.3 32.6 34.0\nANLI R3 acc test 48.3 50 33.6 34.0 33.8 33.4 35.3 34.8 34.4 34.5 35.0 32.6 33.0 33.9 34.1 33.1 32.5 35.1 35.0 34.4 35.1 36.0 32.7 33.9 34.5 40.2\n2D+ acc n/a 50 0.70 0.65 0.70 0.85 1.10 2.54 15.4 76.9 2.00 0.55 3.15 4.00 12.1 19.6 73.0 99.6 2.00 4.10 3.50 4.50 8.90 11.9 55.5 100.0\n2D- acc n/a 50 1.25 1.25 1.25 1.25 1.60 7.60 12.6 58.0 1.15 0.95 1.45 1.95 3.85 11.5 44.6 86.4 1.15 1.45 2.25 2.70 7.35 13.6 52.4 98.9\n3D+ acc n/a 50 0.10 0.10 0.05 0.10 0.10 0.25 1.40 34.2 0.15 0.00 0.10 0.30 0.45 0.95 15.4 65.5 0.15 0.45 0.30 0.55 0.75 0.90 8.40 80.4\n3D- acc n/a 50 0.05 0.05 0.05 0.05 0.05 0.45 1.35 48.3 0.05 0.15 0.25 0.30 0.55 1.60 6.15 78.7 0.05 0.10 0.15 0.35 0.65 1.05 9.20 94.2\n4D+ acc n/a 50 0.05 0.05 0.00 0.00 0.05 0.05 0.15 4.00 0.00 0.00 0.10 0.00 0.00 0.10 0.80 14.0 0.00 0.05 0.05 0.00 0.15 0.15 0.40 25.5\n4D- acc n/a 50 0.00 0.00 0.00 0.00 0.00 0.00 0.10 7.50 0.00 0.00 0.00 0.00 0.05 0.00 0.50 14.0 0.00 0.05 0.00 0.00 0.10 0.05 0.40 26.8\n5D+ acc n/a 50 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.65 0.00 0.00 0.00 0.00 0.00 0.00 0.05 3.45 0.00 0.00 0.00 0.00 0.00 0.00 0.05 9.30\n5D- acc n/a 50 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.80 0.00 0.00 0.00 0.00 0.00 0.00 0.05 3.75 0.00 0.00 0.00 0.00 0.00 0.00 0.00 9.90\n2Dx acc n/a 50 2.20 2.25 2.65 2.10 2.55 5.80 6.15 19.8 1.35 2.35 3.35 2.35 4.75 9.15 11.0 27.4 1.35 2.90 2.70 2.85 4.25 6.10 7.05 29.2\n1DC acc n/a 50 1.25 2.95 2.75 0.05 0.30 2.35 0.75 9.75 1.90 2.80 2.85 3.65 6.45 9.15 8.20 14.3 1.70 2.15 3.90 5.75 6.20 7.60 9.95 21.3\nCycled Letters acc n/a 100 0.62 0.71 2.85 0.00 0.63 1.35 2.58 3.66 1.67 4.36 5.68 6.46 6.25 9.41 15.1 21.7 4.63 9.27 10.7 14.5 16.7 21.9 27.7 37.9\nAnagrams 1 acc n/a 100 0.10 0.14 0.40 0.00 0.27 0.69 1.16 2.28 0.21 0.61 1.12 1.27 1.60 2.72 3.72 8.62 0.50 1.27 2.13 3.05 3.81 5.49 8.38 15.1\nAnagrams 2 acc n/a 100 0.81 1.21 2.69 0.01 1.71 3.75 4.53 8.91 1.19 2.62 4.70 4.77 6.97 10.2 14.6 25.9 1.94 4.80 7.59 9.87 12.6 18.9 25.6 39.7\nSymbol Insertion acc n/a 100 0.00 0.00 0.10 0.00 0.05 0.42 0.89 8.26 0.03 0.05 0.57 1.18 1.67 3.46 6.62 45.4 0.11 0.28 2.19 4.18 6.61 11.0 27.3 67.2\nReversed Words acc n/a 100 0.00 0.01 0.01 0.01 0.02 0.03 0.03 0.09 0.02 0.01 0.01 0.00 0.05 0.07 0.11 0.48 0.00 0.05 0.00 0.17 0.24 0.30 0.42 0.44\nSAT Analogies acc n/a 20 35.6 39.0 45.2 44.1 50.0 49.2 52.7 53.7 30.5 41.2 43.1 46.5 55.1 54.3 53.5 59.1 30.5 40.4 42.8 40.6 48.4 51.9 53.5 65.2\nTable H.1: Scores for every task, setting and model that we investigate in this paper.\n63Figure H.1: All results for all SuperGLUE tasks.\nFigure H.2: Results for SAT task.\n Figure H.3: All results for all Winograd tasks.\n64Figure H.4: All results for all Arithmetic tasks.\nFigure H.5: All results for all Cloze and Completion tasks.\n65Figure H.6: All results for all Common Sense Reasoning tasks.\nFigure H.7: All results for all QA tasks.\nFigure H.8: All results for all Reading Comprehension tasks.\nFigure H.9: All results for all ANLI rounds.\n66Figure H.10: All results for all Scramble tasks.\nFigure H.11: All results for all Translation tasks.\n67References\n[ADG+16]Marcin Andrychowicz, Misha Denil, Sergio Gomez, Matthew W Hoffman, David Pfau, Tom Schaul,\nBrendan Shillingford, and Nando De Freitas. Learning to learn by gradient descent by gradient descent.\nInAdvances in neural information processing systems , pages 3981\u20133989, 2016.\n[AI19] WeChat AI. Tr-mt (ensemble), December 2019.\n[AJF19] Roee Aharoni, Melvin Johnson, and Orhan Firat. Massively multilingual neural machine translation. In\nProceedings of the 2019 Conference of the North American Chapter of the Association for Computational\nLinguistics: Human Language Technologies, Volume 1 (Long and Short Papers) , 2019.\n[BBDIW20] Su Lin Blodgett, Solon Barocas, Hal Daum \u00b4e III, and Hanna Wallach. Language (technology) is power:\nA critical survey of \u201cbias\u201d in nlp. arXiv preprint arXiv:2005.14050 , 2020.\n[BCFL13] Jonathan Berant, Andrew Chou, Roy Frostig, and Percy Liang. Semantic parsing on freebase from\nquestion-answer pairs. In Proceedings of the 2013 conference on empirical methods in natural language\nprocessing , pages 1533\u20131544, 2013.\n[BDD+09]Luisa Bentivogli, Ido Dagan, Hoa Trang Dang, Danilo Giampiccolo, and Bernardo Magnini. The \ufb01fth\nPASCAL recognizing textual entailment challenge. 2009.\n[BES10] Stefano Baccianella, Andrea Esuli, and Fabrizio Sebastiani. Sentiwordnet 3.0: an enhanced lexical\nresource for sentiment analysis and opinion mining. In Lrec, volume 10, pages 2200\u20132204, 2010.\n[BHDD+06]Roy Bar Haim, Ido Dagan, Bill Dolan, Lisa Ferro, Danilo Giampiccolo, Bernardo Magnini, and Idan\nSzpektor. The second PASCAL recognising textual entailment challenge. 2006.\n[BHT+20]Yonatan Bisk, Ari Holtzman, Jesse Thomason, Jacob Andreas, Yoshua Bengio, Joyce Chai, Mirella\nLapata, Angeliki Lazaridou, Jonathan May, Aleksandr Nisnevich, et al. Experience grounds language.\narXiv preprint arXiv:2004.10151 , 2020.\n[BLC13] Yoshua Bengio, Nicholas L \u00b4eonard, and Aaron C. Courville. Estimating or propagating gradients through\nstochastic neurons for conditional computation. Arxiv , 2013.\n[BZB+19]Yonatan Bisk, Rowan Zellers, Ronan Le Bras, Jianfeng Gao, and Yejin Choi. Piqa: Reasoning about\nphysical commonsense in natural language. arXiv preprint arXiv:1911.11641 , 2019.\n[Car97] Rich Caruana. Multitask learning. Machine learning , 28(1), 1997.\n[CB78] Susan Carey and Elsa Bartlett. Acquiring a single new word. Proceedings of the Stanford Child Language\nConference , 1978.\n[CCE+18]Peter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot, Ashish Sabharwal, Carissa Schoenick, and\nOyvind Tafjord. Think you have solved question answering? try arc, the ai2 reasoning challenge. ArXiv ,\nabs/1803.05457, 2018.\n[CGRS19] Rewon Child, Scott Gray, Alec Radford, and Ilya Sutskever. Generating long sequences with sparse\ntransformers, 2019.\n[CHI+18]Eunsol Choi, He He, Mohit Iyyer, Mark Yatskar, Wen-tau Yih, Yejin Choi, Percy Liang, and Luke\nZettlemoyer. Quac : Question answering in context. Arxiv , 2018.\n[CLC+19]Christopher Clark, Kenton Lee, Ming-Wei Chang, Tom Kwiatkowski, Michael Collins, and Kristina\nToutanova. BoolQ: Exploring the surprising dif\ufb01culty of natural yes/no questions. arXiv preprint\narXiv:1905.10044 , 2019.\n[CLY+19]Yen-Chun Chen, Linjie Li, Licheng Yu, Ahmed El Kholy, Faisal Ahmed, Zhe Gan, Yu Cheng, and\nJingjing Liu. Uniter: Learning universal image-text representations. arXiv preprint arXiv:1909.11740 ,\n2019.\n[Cra17] Kate Crawford. The trouble with bias. NIPS 2017 Keynote , 2017.\n[DCLT18] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep\nbidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805 , 2018.\n68[DGM06] Ido Dagan, Oren Glickman, and Bernardo Magnini. The PASCAL recognising textual entailment\nchallenge. In Machine learning challenges. evaluating predictive uncertainty, visual object classi\ufb01cation,\nand recognising textual entailment , pages 177\u2013190. Springer, 2006.\n[DGV+18]Mostafa Dehghani, Stephan Gouws, Oriol Vinyals, Jakob Uszkoreit, and Lukasz Kaiser. Universal\ntransformers. Arxiv , 2018.\n[DHKH14] Nadir Durrani, Barry Haddow, Philipp Koehn, and Kenneth Hea\ufb01eld. Edinburgh\u2019s phrase-based machine\ntranslation systems for wmt-14. In Proceedings of the Ninth Workshop on Statistical Machine Translation ,\npages 97\u2013104, 2014.\n[DL15] Andrew M. Dai and Quoc V . Le. Semi-supervised sequence learning. In Advances in neural information\nprocessing systems , 2015.\n[DMST19] Marie-Catherine De Marneffe, Mandy Simons, and Judith Tonhauser. The CommitmentBank: Investigat-\ning projection in naturally occurring discourse. 2019. To appear in proceedings of Sinn und Bedeutung\n23. Data can be found at https://github.com/mcdm/CommitmentBank/.\n[DSC+16]Yan Duan, John Schulman, Xi Chen, Peter L. Bartlett, Ilya Sutskever, and Pieter Abbeel. Rl2: Fast\nreinforcement learning via slow reinforcement learning. ArXiv , abs/1611.02779, 2016.\n[DWD+19]Dheeru Dua, Yizhong Wang, Pradeep Dasigi, Gabriel Stanovsky, Sameer Singh, and Matt Gardner.\nDrop: A reading comprehension benchmark requiring discrete reasoning over paragraphs. arXiv preprint\narXiv:1903.00161 , 2019.\n[DYY+19]Zihang Dai, Zhilin Yang, Yiming Yang, Jaime G. Carbonell, Quoc V . Le, and Ruslan Salakhutdinov.\nTransformer-xl: Attentive language models beyond a \ufb01xed-length context. Arxiv , 2019.\n[EOAG18] Sergey Edunov, Myle Ott, Michael Auli, and David Grangier. Understanding back-translation at scale.\narXiv preprint arXiv:1808.09381 , 2018.\n[FAL17] Chelsea Finn, Pieter Abbeel, and Sergey Levine. Model-agnostic meta-learning for fast adaptation of\ndeep networks. ArXiv , abs/1703.03400, 2017.\n[Fyo00] Yaroslav Fyodorov. A natural logic inference system, 2000.\n[GG19] Hila Gonen and Yoav Goldberg. Lipstick on a pig: Debiasing methods cover up systematic gender biases\nin word embeddings but do not remove them. arXiv preprint arXiv:1903.03862 , 2019.\n[GLT+20]Kelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat, and Ming-Wei Chang. Realm: Retrieval-\naugmented language model pre-training. arXiv preprint arXiv:2002.08909 , 2020.\n[GMDD07] Danilo Giampiccolo, Bernardo Magnini, Ido Dagan, and Bill Dolan. The third PASCAL recognizing\ntextual entailment challenge. In Proceedings of the ACL-PASCAL workshop on textual entailment and\nparaphrasing , pages 1\u20139. Association for Computational Linguistics, 2007.\n[Gra16] Alex Graves. Adaptive computation time for recurrent neural networks. Arxiv , 2016.\n[GSL+18]Suchin Gururangan, Swabha Swayamdipta, Omer Levy, Roy Schwartz, Samuel R Bowman, and Noah A\nSmith. Annotation artifacts in natural language inference data. arXiv preprint arXiv:1803.02324 , 2018.\n[GSR19] Sebastian Gehrmann, Hendrik Strobelt, and Alexander M. Rush. Gltr: Statistical detection and visualiza-\ntion of generated text. arXiv preprint arXiv: 1906.04043 , 2019.\n[GWC+18]Jiatao Gu, Yong Wang, Yun Chen, Kyunghyun Cho, and Victor OK Li. Meta-learning for low-resource\nneural machine translation. arXiv preprint arXiv:1808.08437 , 2018.\n[HB20] Daniel Hernandez and Tom Brown. Ai and ef\ufb01ciency, May 2020.\n[HBFC19] Ari Holtzman, Jan Buys, Maxwell Forbes, and Yejin Choi. The curious case of neural text degeneration.\nCoRR , abs/1904.09751, 2019.\n[HLW+20]Dan Hendrycks, Xiaoyuan Liu, Eric Wallace, Adam Dziedzic, Rishabh Krishnan, and Dawn Song.\nPretrained transformers improve out of distribution robustness. arXiv preprint arXiv:2004.06100 , 2020.\n69[HNA+17]Joel Hestness, Sharan Narang, Newsha Ardalani, Gregory Diamos, Heewoo Jun, Hassan Kianinejad, Md.\nMostofa Ali Patwary, Yang Yang, and Yanqi Zhou. Deep learning scaling is predictable, empirically.\narXiv preprint arXiv:1712.00409 , 2017.\n[HR18] Jeremy Howard and Sebastian Ruder. Universal language model \ufb01ne-tuning for text classi\ufb01cation. arXiv\npreprint arXiv:1801.06146 , 2018.\n[HVD15] Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling the knowledge in a neural network. arXiv\npreprint arXiv:1503.02531 , 2015.\n[HYC01] Sepp Hochreiter, A Steven Younger, and Peter R Conwell. Learning to Learn Using Gradient Descent.\nInInternational Conference on Arti\ufb01cial Neural Networks , pages 87\u201394. Springer, 2001.\n[HZJ+19]Po-Sen Huang, Huan Zhang, Ray Jiang, Robert Stanforth, Johannes Welbl, Jack Rae, Vishal Maini,\nDani Yogatama, and Pushmeet Kohli. Reducing sentiment bias in language models via counterfactual\nevaluation. arXiv preprint arXiv:1911.03064 , 2019.\n[IBGC+14]Mohit Iyyer, Jordan Boyd-Graber, Leonardo Claudino, Richard Socher, and Hal Daum \u00b4e III. A neural\nnetwork for factoid question answering over paragraphs. In Empirical Methods in Natural Language\nProcessing , 2014.\n[IDCBE19] Daphne Ippolito, Daniel Duckworth, Chris Callison-Burch, and Douglas Eck. Automatic detection of\ngenerated text is easiest when humans are fooled. arXiv preprint arXiv:1911.00650 , 2019.\n[JCWZ17] Mandar Joshi, Eunsol Choi, Daniel S. Weld, and Luke Zettlemoyer. TriviaQA: A large scale distantly\nsupervised challenge dataset for reading comprehension. arXiv preprint arXiv:1705.03551 , 2017.\n[JN20] Zheng Junyuan and Gamma Lab NYC. Numeric transformer - albert, March 2020.\n[JVS+16]Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, and Yonghui Wu. Exploring the limits\nof language modeling. arXiv preprint arXiv:1602.02410 , 2016.\n[JYS+19]Xiaoqi Jiao, Yichun Yin, Lifeng Shang, Xin Jiang, Xiao Chen, Linlin Li, Fang Wang, and Qun Liu.\nTinyBERT: Distilling BERT for natural language understanding. arXiv preprint arXiv:1909.10351 , 2019.\n[JZC+19]Ying Ju, Fubang Zhao, Shijie Chen, Bowen Zheng, Xuefeng Yang, and Yunfeng Liu. Technical report on\nconversational question answering. arXiv preprint arXiv:1909.10772 , 2019.\n[KCR+18]Daniel Khashabi, Snigdha Chaturvedi, Michael Roth, Shyam Upadhyay, and Dan Roth. Looking beyond\nthe surface: A challenge set for reading comprehension over multiple sentences. In Proceedings of North\nAmerican Chapter of the Association for Computational Linguistics (NAACL) , 2018.\n[KKS+20]Daniel Khashabi, Tushar Khot, Ashish Sabharwal, Oyvind Tafjord, Peter Clark, and Hannaneh Hajishirzi.\nUni\ufb01edqa: Crossing format boundaries with a single qa system. arXiv preprint arXiv:2005.00700 , 2020.\n[KMB20] Sarah E. Kreps, Miles McCain, and Miles Brundage. All the news that\u2019s \ufb01t to fabricate: Ai-generated\ntext as a tool of media misinformation, 2020.\n[KMH+20]Jared Kaplan, Sam McCandlish, Tom Henighan, Tom B. Brown, Benjamin Chess, Rewon Child, Scott\nGray, Alec Radford, Jeffrey Wu, and Dario Amodei. Scaling laws for neural language models, 2020.\n[KPR+19]Tom Kwiatkowski, Jennimaria Palomaki, Olivia Red\ufb01eld, Michael Collins, Ankur Parikh, Chris Alberti,\nDanielle Epstein, Illia Polosukhin, Matthew Kelcey, Jacob Devlin, Kenton Lee, Kristina N. Toutanova,\nLlion Jones, Ming-Wei Chang, Andrew Dai, Jakob Uszkoreit, Quoc Le, and Slav Petrov. Natural ques-\ntions: a benchmark for question answering research. Transactions of the Association of Computational\nLinguistics , 2019.\n[KR16] Yoon Kim and Alexander M. Rush. Sequence-level knowledge distillation. Arxiv , 2016.\n[LB02] Edward Loper and Steven Bird. Nltk: The natural language toolkit, 2002.\n[LC19] Guillaume Lample and Alexis Conneau. Cross-lingual language model pretraining. arXiv preprint\narXiv:1901.07291 , 2019.\n70[LCG+19]Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, and Radu Sori-\ncut. ALBERT: A lite BERT for self-supervised learning of language representations. arXiv preprint\narXiv:1909.11942 , 2019.\n[LCH+20]Xiaodong Liu, Hao Cheng, Pengcheng He, Weizhu Chen, Yu Wang, Hoifung Poon, and Jianfeng Gao.\nAdversarial training for large neural language models. arXiv preprint arXiv:2004.08994 , 2020.\n[LDL19] Zhongyang Li, Xiao Ding, and Ting Liu. Story ending prediction by transferable bert. arXiv preprint\narXiv:1905.07504 , 2019.\n[LDM12] Hector Levesque, Ernest Davis, and Leora Morgenstern. The Winograd schema challenge. In Thirteenth\nInternational Conference on the Principles of Knowledge Representation and Reasoning , 2012.\n[LGG+20]Yinhan Liu, Jiatao Gu, Naman Goyal, Xian Li, Sergey Edunov, Marjan Ghazvininejad, Mike Lewis, and\nLuke Zettlemoyer. Multilingual denoising pre-training for neural machine translation. arXiv preprint\narXiv:2001.08210 , 2020.\n[LGH+15]Xiaodong Liu, Jianfeng Gao, Xiaodong He, Li Deng, Kevin Duh, and Ye-Yi Wang. Representation\nlearning using multi-task deep neural networks for semantic classi\ufb01cation and information retrieval. In\nProceedings of the 2015 Conference of the North American Chapter of the Association for Computational\nLinguistics: Human Language Technologies , 2015.\n[LH17] Ilya Loshchilov and Frank Hutter. Decoupled weight decay regularization. arXiv preprint\narXiv:1711.05101 , 2017.\n[LHCG19a] Xiaodong Liu, Pengcheng He, Weizhu Chen, and Jianfeng Gao. Improving multi-task deep neural\nnetworks via knowledge distillation for natural language understanding. arXiv preprint arXiv:1904.09482 ,\n2019.\n[LHCG19b] Xiaodong Liu, Pengcheng He, Weizhu Chen, and Jianfeng Gao. Multi-task deep neural networks for\nnatural language understanding. arXiv preprint arXiv:1901.11504 , 2019.\n[Lin20] Tal Linzen. How can we accelerate progress towards human-like linguistic generalization? arXiv preprint\narXiv:2005.00955 , 2020.\n[LLG+19]Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy,\nVes Stoyanov, and Luke Zettlemoyer. Bart: Denoising sequence-to-sequence pre-training for natural\nlanguage generation, translation, and comprehension. arXiv preprint arXiv:1910.13461 , 2019.\n[LM17] Ke Li and Jitendra Malik. Learning to optimize neural nets. arXiv preprint arXiv:1703.00441 , 2017.\n[LOG+19]Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis,\nLuke Zettlemoyer, and Veselin Stoyanov. RoBERTa: A robustly optimized BERT pretraining approach.\narXiv preprint arXiv:1907.11692 , 2019.\n[LPP+20]Patrick Lewis, Ethan Perez, Aleksandra Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal,\nHeinrich K \u00a8uttler, Mike Lewis, Wen-tau Yih, Tim Rockt \u00a8aschel, Sebastian Riedel, and Kiela Douwe.\nRetrieval-augmented generation for knowledge-intensive nlp tasks. arXiv preprint arXiv:2005.11401 ,\n2020.\n[LSP+18]Peter J. Liu, Mohammad Saleh, Etienne Pot, Ben Goodrich, Ryan Sepassi, Lukasz Kaiser, and Noam\nShazeer. Generating Wikipedia by summarizing long sequences. arXiv preprint arXiv:1801.10198 , 2018.\n[LWS+20]Zhuohan Li, Eric Wallace, Sheng Shen, Kevin Lin, Kurt Keutzer, Dan Klein, and Joseph E. Gonzalez.\nTrain large, then compress: Rethinking model size for ef\ufb01cient training and inference of transformers,\n2020.\n[LXL+17]Guokun Lai, Qizhe Xie, Hanxiao Liu, Yiming Yang, and Eduard Hovy. Race: Large-scale reading\ncomprehension dataset from examinations. arXiv preprint arXiv:1704.04683 , 2017.\n[LYN+20]Sheng-Chieh Lin, Jheng-Hong Yang, Rodrigo Nogueira, Ming-Feng Tsai, Chuan-Ju Wang, and Jimmy\nLin. Tttttackling winogrande schemas. arXiv preprint arXiv:2003.08380 , 2020.\n[Mac92] David. MacKay. Information-based objective functions for active data selection. Neural Computation ,\n1992.\n71[MBXS17] Bryan McCann, James Bradbury, Caiming Xiong, and Richard Socher. Learned in translation: Con-\ntextualized word vectors. In Advances in Neural Information Processing Systems , pages 6294\u20136305,\n2017.\n[MCCD13] Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. Ef\ufb01cient estimation of word representations\nin vector space. arXiv preprint arXiv:1301.3781 , 2013.\n[MCH+16]Nasrin Mostafazadeh, Nathanael Chambers, Xiaodong He, Devi Parikh, Dhruv Batra, Lucy Vanderwende,\nPushmeet Kohli, and James Allen. A corpus and evaluation framework for deeper understanding of\ncommonsense stories. arXiv preprint arXiv:1604.01696 , 2016.\n[MCKS18] Todor Mihaylov, Peter Clark, Tushar Khot, and Ashish Sabharwal. Can a suit of armor conduct electricity?\na new dataset for open book question answering. ArXiv , abs/1809.02789, 2018.\n[MKAT18] Sam McCandlish, Jared Kaplan, Dario Amodei, and OpenAI Dota Team. An empirical model of\nlarge-batch training, 2018.\n[MKM+94]Mitchell Marcus, Grace Kim, Mary Ann Marcinkiewicz, Robert MacIntyre, Ann Bies, Mark Ferguson,\nKaren Katz, and Britta Schasberger. The penn treebank: annotating predicate argument structure.\nInProceedings of the workshop on Human Language Technology , pages 114\u2013119. Association for\nComputational Linguistics, 1994.\n[MKXS18] Bryan McCann, Nitish Shirish Keskar, Caiming Xiong, and Richard Socher. The natural language\ndecathlon: Multitask learning as question answering. arXiv preprint arXiv:1806.08730 , 2018.\n[MPL19] R Thomas McCoy, Ellie Pavlick, and Tal Linzen. Right for the wrong reasons: Diagnosing syntactic\nheuristics in natural language inference. arXiv preprint arXiv:1902.01007 , 2019.\n[MWZ+18]Margaret Mitchell, Simone Wu, Andrew Zaldivar, Parker Barnes, Lucy Vasserman, Ben Hutchinson,\nElena Spitzer, Inioluwa Deborah Raji, and Timnit Gebru. Model cards for model reporting, 2018.\n[NBR20] Moin Nadeem, Anna Bethke, and Siva Reddy. Stereoset: Measuring stereotypical bias in pretrained\nlanguage models. arXiv preprint arXiv:2004.09456 , 2020.\n[NK19] Timothy Niven and Hung-Yu Kao. Probing neural network comprehension of natural language arguments.\narXiv preprint arXiv:1907.07355 , 2019.\n[Nor09] Peter Norvig. Natural language corpus data, 2009.\n[NvNvdG19] Malvina Nissim, Rik van Noord, and Rob van der Goot. Fair is better than sensational: Man is to doctor\nas woman is to doctor. arXiv preprint arXiv:1905.09866 , 2019.\n[NWD+19]Yixin Nie, Adina Williams, Emily Dinan, Mohit Bansal, Jason Weston, and Douwe Kiela. Adversarial\nnli: A new benchmark for natural language understanding. arXiv preprint arXiv:1910.14599 , 2019.\n[oR16] University of Regensburg. Fascha, 2016.\n[PCC18] Mohammad Taher Pilehvar and Jose Camacho-Collados. WIC: 10,000 example pairs for evaluating\ncontext-sensitive representations. arXiv preprint arXiv:1808.09121 , 2018.\n[PFB18] Jason Phang, Thibault F \u00b4evry, and Samuel R. Bowman. Sentence encoders on STILTs: Supplementary\ntraining on intermediate labeled-data tasks. arXiv preprint arXiv:1811.01088 , 2018.\n[PHR+18]Adam Poliak, Aparajita Haldar, Rachel Rudinger, J. Edward Hu, Ellie Pavlick, Aaron Steven White, and\nBenjamin Van Durme. Collecting diverse natural language inference problems for sentence representation\nevaluation. In Proceedings of EMNLP , 2018.\n[PKL+16]Denis Paperno, Germ \u00b4an Kruszewski, Angeliki Lazaridou, Quan Ngoc Pham, Raffaella Bernardi, Sandro\nPezzelle, Marco Baroni, Gemma Boleda, and Raquel Fern \u00b4andez. The lambada dataset: Word prediction\nrequiring a broad discourse context. arXiv preprint arXiv:1606.06031 , 2016.\n[PNZtY18] Matthew E. Peters, Mark Neumann, Luke Zettlemoyer, and Wen tau Yih. Dissecting contextual word\nembeddings: Architecture and representation, 2018.\n[Pos18] Matt Post. A call for clarity in reporting BLEU scores. arXiv preprint arXiv:1804.08771 , 2018.\n72[PSM14] Jeffrey Pennington, Richard Socher, and Christopher Manning. GloVe: Global vectors for word\nrepresentation. In Proceedings of the 2014 conference on empirical methods in natural language\nprocessing (EMNLP) , 2014.\n[QIA20] QIANXIN. Sa-net on albert (ensemble), April 2020.\n[QMZH19] Yusu Qian, Urwa Muaz, Ben Zhang, and Jae Won Hyun. Reducing gender bias in word-level language\nmodels with a gender-equalizing loss function. arXiv preprint arXiv:1905.12801 , 2019.\n[RBG11] Melissa Roemmele, Cosmin Adrian Bejan, and Andrew S Gordon. Choice of plausible alternatives: An\nevaluation of commonsense causal reasoning. In 2011 AAAI Spring Symposium Series , 2011.\n[RCM19] Siva Reddy, Danqi Chen, and Christopher D Manning. Coqa: A conversational question answering\nchallenge. Transactions of the Association for Computational Linguistics , 7:249\u2013266, 2019.\n[RCP+17]Scott Reed, Yutian Chen, Thomas Paine, A \u00a8aron van den Oord, SM Eslami, Danilo Rezende, Oriol\nVinyals, and Nando de Freitas. Few-shot autoregressive density estimation: Towards learning to learn\ndistributions. arXiv preprint arXiv:1710.10304 , 2017.\n[RJL18] Pranav Rajpurkar, Robin Jia, and Percy Liang. Know what you don\u2019t know: Unanswerable questions for\nsquad. arXiv preprint arXiv:1806.03822 , 2018.\n[RL16] Sachin Ravi and Hugo Larochelle. Optimization as a model for few-shot learning. ICLR 2017 (oral) ,\n2016.\n[RLL+19]Qiu Ran, Yankai Lin, Peng Li, Jie Zhou, and Zhiyuan Liu. NumNet: Machine reading comprehension\nwith numerical reasoning. In Proceedings of EMNLP , 2019.\n[RNLVD18] Rachel Rudinger, Jason Naradowsky, Brian Leonard, and Benjamin Van Durme. Gender bias in\ncoreference resolution. arXiv preprint arXiv:1804.09301 , 2018.\n[RNSS18] Alec Radford, Karthik Narasimhan, Tim Salimans, and Ilya Sutskever. Improving language understanding\nby generative pre-training, 2018.\n[Ros12] R.S. Ross. Guide for conducting risk assessments. NIST Special Publication , 2012.\n[RRBS19] Jonathan S. Rosenfeld, Amir Rosenfeld, Yonatan Belinkov, and Nir Shavit. A constructive prediction of\nthe generalization error across scales, 2019.\n[RRS20] Adam Roberts, Colin Raffel, and Noam Shazeer. How much knowledge can you pack into the parameters\nof a language model? arXiv preprint arXiv:2002.08910 , 2020.\n[RSR+19]Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi\nZhou, Wei Li, and Peter J. Liu. Exploring the limits of transfer learning with a uni\ufb01ed text-to-text\ntransformer, 2019.\n[RWC+19]Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language\nmodels are unsupervised multitask learners, 2019.\n[SBBC19] Keisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavatula, and Yejin Choi. Winogrande: An adversarial\nwinograd schema challenge at scale, 2019.\n[SBC+19]Irene Solaiman, Miles Brundage, Jack Clark, Amanda Askell, Ariel Herbert-V oss, Jeff Wu, Alec Radford,\nGretchen Krueger, Jong Wook Kim, Sarah Kreps, Miles McCain, Alex Newhouse, Jason Blazakis, Kris\nMcGuf\ufb01e, and Jasmine Wang. Release strategies and the social impacts of language models, 2019.\n[SCNP19] Emily Sheng, Kai-Wei Chang, Premkumar Natarajan, and Nanyun Peng. The woman worked as a\nbabysitter: On biases in language generation. arXiv preprint arXiv:1909.01326 , 2019.\n[SDCW19] Victor Sanh, Lysandre Debut, Julien Chaumond, and Thomas Wolf. DistilBERT, a distilled version of\nBERT: smaller, faster, cheaper and lighter. arXiv preprint arXiv:1910.01108 , 2019.\n[SDSE19] Roy Schwartz, Jesse Dodge, Noah A. Smith, and Oren Etzioni. Green AI. CoRR , abs/1907.10597, 2019.\n[SHB15] Rico Sennrich, Barry Haddow, and Alexandra Birch. Improving neural machine translation models with\nmonolingual data. arXiv preprint arXiv:1511.06709 , 2015.\n73[SMM+17]Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton, and Jeff\nDean. Outrageously large neural networks: The sparsely-gated mixture-of-experts layer. arXiv preprint\narXiv:1701.06538 , 2017.\n[SPP+19]Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper, and Bryan Catanzaro.\nMegatron-lm: Training multi-billion parameter language models using model parallelism, 2019.\n[SS20] Timo Schick and Hinrich Sch \u00a8utze. Exploiting cloze questions for few-shot text classi\ufb01cation and natural\nlanguage inference. arXiv preprint arXiv:2001.07676 , 2020.\n[STQ+19]Kaitao Song, Xu Tan, Tao Qin, Jianfeng Lu, and Tie-Yan Liu. MASS: Masked sequence to sequence\npre-training for language generation. arXiv preprint arXiv:1905.02450 , 2019.\n[TFR+17]Josh Tobin, Rachel Fong, Alex Ray, Jonas Schneider, Wojciech Zaremba, and Pieter Abbeel. Domain\nrandomization for transferring deep neural networks from simulation to the real world. In 2017 IEEE/RSJ\ninternational conference on intelligent robots and systems (IROS) , pages 23\u201330. IEEE, 2017.\n[TL05] Peter D. Turney and Michael L. Littman. Corpus-based learning of analogies and semantic relations.\nCoRR , abs/cs/0508103, 2005.\n[TL18] Trieu H. Trinh and Quoc V . Le. A simple method for commonsense reasoning. arXiv preprint\narXiv:1806.02847 , 2018.\n[TLBS03] Peter D. Turney, Michael L. Littman, Jeffrey Bigham, and Victor Shnayder. Combining independent\nmodules to solve multiple-choice synonym and analogy problems. CoRR , cs.CL/0309035, 2003.\n[Tur20] Project Turing. Microsoft research blog, Feb 2020.\n[VBL+16]Oriol Vinyals, Charles Blundell, Timothy Lillicrap, Daan Wierstra, et al. Matching Networks for One\nShot Learning. In Advances in neural information processing systems , pages 3630\u20133638, 2016.\n[VSP+17]Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez, \u0141ukasz\nKaiser, and Illia Polosukhin. Attention is all you need. In Advances in neural information processing\nsystems , 2017.\n[WPN+19]Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix Hill, Omer\nLevy, and Samuel Bowman. Superglue: A stickier benchmark for general-purpose language understand-\ning systems. In Advances in Neural Information Processing Systems , pages 3261\u20133275, 2019.\n[WXH+18]Yiren Wang, Yingce Xia, Tianyu He, Fei Tian, Tao Qin, ChengXiang Zhai, and Tie-Yan Liu. Multi-agent\ndual learning. ICLR 2019 , 2018.\n[XDH+19]Qizhe Xie, Zihang Dai, Eduard Hovy, Minh-Thang Luong, and Quoc V . Le. Unsupervised data\naugmentation for consistency training, 2019.\n[YdC+19]Dani Yogatama, Cyprien de Masson d\u2019Autume, Jerome Connor, Tomas Kocisky, Mike Chrzanowski,\nLingpeng Kong, Angeliki Lazaridou, Wang Ling, Lei Yu, Chris Dyer, et al. Learning and evaluating\ngeneral linguistic intelligence. arXiv preprint arXiv:1901.11373 , 2019.\n[YDY+19]Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, and Quoc V . Le. XLNet:\nGeneralized autoregressive pretraining for language understanding. arXiv preprint arXiv:1906.08237 ,\n2019.\n[ZHB+19]Rowan Zellers, Ari Holtzman, Yonatan Bisk, Ali Farhadi, and Yejin Choi. Hellaswag: Can a machine\nreally \ufb01nish your sentence? arXiv preprint arXiv:1905.07830 , 2019.\n[ZHR+19]Rowan Zellers, Ari Holtzman, Hannah Rashkin, Yonatan Bisk, Ali Farhadi, Franziska Roesner, and Yejin\nChoi. Defending against neural fake news. arXiv preprint arXiv:1905.12616 , 2019.\n[ZLL+18]Sheng Zhang, Xiaodong Liu, Jingjing Liu, Jianfeng Gao, Kevin Duh, and Benjamin Van Durme.\nReCoRD: Bridging the gap between human and machine commonsense reading comprehension. arXiv\npreprint arXiv:1810.12885 , 2018.\n[ZSW+19a] Daniel M. Ziegler, Nisan Stiennon, Jeffrey Wu, Tom B. Brown, Alec Radford, Dario Amodei, Paul\nChristiano, and Geoffrey Irving. Fine-tuning language models from human preferences, 2019.\n74[ZSW+19b] Daniel M. Ziegler, Nisan Stiennon, Jeffrey Wu, Tom B. Brown, Alec Radford, Dario Amodei, Paul Chris-\ntiano, and Geoffrey Irving. Fine-tuning language models from human preferences. ArXiv , abs/1909.08593,\n2019.\n75"
}